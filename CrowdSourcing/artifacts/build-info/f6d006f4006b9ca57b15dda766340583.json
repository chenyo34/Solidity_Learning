{
	"id": "f6d006f4006b9ca57b15dda766340583",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"CrowdSourcing/Crowdsourcing.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract CrowdsourcingToken is ERC20 {\r\n\r\n    /* Structure Design */\r\n    struct Task {\r\n        address poster;\r\n        uint256 EachReward;\r\n        uint256 ReqTimes;\r\n        bool isCompleted;\r\n    }\r\n\r\n    event TaskAdded(\r\n        address indexed poster,\r\n        uint256 indexed taskId,\r\n        uint256 rewards,\r\n        uint256 req_times_\r\n    );\r\n    event TaskRemoved(\r\n        address indexed poster,\r\n        uint256 indexed taskId,\r\n        uint256 rewards,\r\n        uint256 req_times_\r\n    );\r\n    event TasksOneTimeCompleted(\r\n        uint256 indexed taskId, \r\n        address indexed completer\r\n    );\r\n    /* State Variables */ \r\n    uint256 public nextTaskId = 0;\r\n    mapping(uint256 => mapping (address=> bool)) TaskRecordsList; \r\n    mapping (uint256 => Task) public TasksList;\r\n\r\n    constructor() ERC20(\"CrowdsourcingToken\", \"CST\"){}\r\n\r\n    /**\r\n    Add Tasks/Mission and mint the token to those questions\r\n    */\r\n    function addTasks(\r\n        uint256[] calldata tasksRewards,\r\n        uint256[] calldata reqTimes\r\n    ) external {\r\n        require(\r\n            tasksRewards.length == reqTimes.length,\r\n            \"The length of Tasks and Reqired Times don't match!!!\"\r\n        );\r\n        require(\r\n            tasksRewards.length > 0,\r\n            \"At least have one task and reqired times!!!\"\r\n        );\r\n\r\n        uint256 totalReward = 0;\r\n        for (uint i = 0; i < tasksRewards.length; i++){\r\n            require(\r\n                tasksRewards[i]> 0,\r\n                \"Reward must be positve!!!\"\r\n            );\r\n            require(\r\n                reqTimes[i] > 0,\r\n                \"Required Submission must be postive!!!\"\r\n            );\r\n            totalReward += tasksRewards[i] * reqTimes[i];\r\n            TasksList[nextTaskId] = Task({\r\n                poster: msg.sender,\r\n                EachReward: tasksRewards[i],\r\n                ReqTimes: reqTimes[i],\r\n                isCompleted: false\r\n            });\r\n\r\n            emit TaskAdded(msg.sender,nextTaskId,tasksRewards[i],reqTimes[i]\r\n            );\r\n            nextTaskId++;\r\n        }\r\n        _mint(msg.sender, totalReward);\r\n    }\r\n\r\n    function redeemReward(\r\n        uint256 taskId\r\n    ) external {\r\n        Task storage cur_task = TasksList[taskId];\r\n        require(\r\n            !cur_task.isCompleted,\r\n            \"Current Task has been completed!!!\"\r\n        );\r\n        require(\r\n            cur_task.ReqTimes > 0,\r\n            \"No submission is required!!!\"\r\n        );\r\n        require(\r\n            cur_task.poster != msg.sender,\r\n            \"Task Poster and Submitter is the same!!!\"\r\n        );\r\n        require(\r\n            !TaskRecordsList[taskId][msg.sender],\r\n            \"Reward has been released for the current submitter!!!\"\r\n        );\r\n\r\n        cur_task.ReqTimes -= 1;\r\n        if (cur_task.ReqTimes == 0){\r\n            cur_task.isCompleted = true;\r\n        }\r\n\r\n        _transfer(cur_task.poster, msg.sender, cur_task.EachReward);\r\n        TaskRecordsList[taskId][msg.sender] = true;\r\n\r\n        emit TasksOneTimeCompleted(taskId, msg.sender);\r\n    }\r\n\r\n    /**\r\n    Get the task details\r\n    */\r\n    function getTask(\r\n        uint256 taskId\r\n    )public view returns (uint256 reward_, address poster_, uint256 reqTimes, bool isCompleted){\r\n        Task storage task = TasksList[taskId];\r\n        return (task.EachReward,\r\n                task.poster,\r\n                task.ReqTimes,\r\n                task.isCompleted);\r\n    }\r\n\r\n    /**\r\n    Verify the validity for the recent _x_ submission\r\n    */\r\n    // function ValidityChecker(\r\n    // ) public pure returns (bool){\r\n    //     return true;\r\n    // }\r\n\r\n    // /**\r\n    // Froozen the account if it submitted too many trash/invalid submission\r\n    // */\r\n    // function AccountChecker(\r\n    //     address account\r\n    // )public pure returns (bool){\r\n    //     require(account != address(0), \"Zero Address was found!!!\");\r\n    //     require(PtpRecordsList[]);\r\n    // }\r\n\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrowdSourcing/Crowdsourcing.sol": {
				"CrowdsourcingToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "poster",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "taskId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "req_times_",
									"type": "uint256"
								}
							],
							"name": "TaskAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "poster",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "taskId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewards",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "req_times_",
									"type": "uint256"
								}
							],
							"name": "TaskRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "taskId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "completer",
									"type": "address"
								}
							],
							"name": "TasksOneTimeCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "TasksList",
							"outputs": [
								{
									"internalType": "address",
									"name": "poster",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "EachReward",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ReqTimes",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isCompleted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tasksRewards",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "reqTimes",
									"type": "uint256[]"
								}
							],
							"name": "addTasks",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taskId",
									"type": "uint256"
								}
							],
							"name": "getTask",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "poster_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "reqTimes",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isCompleted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTaskId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "taskId",
									"type": "uint256"
								}
							],
							"name": "redeemReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrowdSourcing/Crowdsourcing.sol\":173:4145  contract CrowdsourcingToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"CrowdSourcing/Crowdsourcing.sol\":852:853  0 */\n  0x00\n    /* \"CrowdSourcing/Crowdsourcing.sol\":824:853  uint256 public nextTaskId = 0 */\n  0x05\n  sstore\n    /* \"CrowdSourcing/Crowdsourcing.sol\":979:1029  constructor() ERC20(\"CrowdsourcingToken\", \"CST\"){} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x12\n  dup2\n  mstore\n  0x20\n  add\n  0x43726f7764736f757263696e67546f6b656e0000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4353540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"CrowdSourcing/Crowdsourcing.sol\":173:4145  contract CrowdsourcingToken is ERC20 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"CrowdSourcing/Crowdsourcing.sol\":173:4145  contract CrowdsourcingToken is ERC20 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CrowdSourcing/Crowdsourcing.sol\":173:4145  contract CrowdsourcingToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xfdc3d8d7\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x51a71b17\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1d65e77e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x257baa3a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b7879aa\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrowdSourcing/Crowdsourcing.sol\":928:970  mapping (uint256 => Task) public TasksList */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3310:3636  function getTask(... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1115:2312  function addTasks(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2320:3259  function redeemReward(... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrowdSourcing/Crowdsourcing.sol\":824:853  uint256 public nextTaskId = 0 */\n    tag_16:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_82\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_84\n      swap1\n      tag_83\n      jump\t// in\n    tag_84:\n      dup1\n      iszero\n      tag_85\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_86\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_85)\n    tag_86:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CrowdSourcing/Crowdsourcing.sol\":928:970  mapping (uint256 => Task) public TasksList */\n    tag_33:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3310:3636  function getTask(... */\n    tag_42:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3379:3394  uint256 reward_ */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3396:3411  address poster_ */\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3413:3429  uint256 reqTimes */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3431:3447  bool isCompleted */\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3459:3476  Task storage task */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3479:3488  TasksList */\n      0x07\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3479:3496  TasksList[taskId] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3489:3495  taskId */\n      dup8\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3479:3496  TasksList[taskId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3459:3496  Task storage task = TasksList[taskId] */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3515:3519  task */\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3515:3530  task.EachReward */\n      0x01\n      add\n      sload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3549:3553  task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3549:3560  task.poster */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3579:3583  task */\n      dup3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3579:3592  task.ReqTimes */\n      0x02\n      add\n      sload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3611:3615  task */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3611:3627  task.isCompleted */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3507:3628  return (task.EachReward,... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3310:3636  function getTask(... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1115:2312  function addTasks(... */\n    tag_53:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1285:1293  reqTimes */\n      dup2\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1285:1300  reqTimes.length */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1262:1274  tasksRewards */\n      dup5\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1262:1281  tasksRewards.length */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1262:1300  tasksRewards.length == reqTimes.length */\n      eq\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1240:1380  require(... */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1435:1436  0 */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1413:1425  tasksRewards */\n      dup5\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1413:1432  tasksRewards.length */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1413:1436  tasksRewards.length > 0 */\n      gt\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1391:1507  require(... */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1520:1539  uint256 totalReward */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1559:1565  uint i */\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1554:2264  for (uint i = 0; i < tasksRewards.length; i++){... */\n    tag_108:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1575:1587  tasksRewards */\n      dup6\n      dup6\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1575:1594  tasksRewards.length */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1571:1572  i */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1571:1594  i < tasksRewards.length */\n      lt\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1554:2264  for (uint i = 0; i < tasksRewards.length; i++){... */\n      iszero\n      tag_109\n      jumpi\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1658:1659  0 */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1641:1653  tasksRewards */\n      dup7\n      dup7\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1654:1655  i */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1641:1656  tasksRewards[i] */\n      dup2\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n    tag_111:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1641:1659  tasksRewards[i]> 0 */\n      gt\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1615:1720  require(... */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1775:1776  0 */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1761:1769  reqTimes */\n      dup5\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1770:1771  i */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1761:1772  reqTimes[i] */\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_118\n      tag_113\n      jump\t// in\n    tag_118:\n    tag_117:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1761:1776  reqTimes[i] > 0 */\n      gt\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1735:1850  require(... */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1898:1906  reqTimes */\n      dup4\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1907:1908  i */\n      dup3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1898:1909  reqTimes[i] */\n      dup2\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_123\n      tag_113\n      jump\t// in\n    tag_123:\n    tag_122:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1880:1892  tasksRewards */\n      dup7\n      dup7\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1893:1894  i */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1880:1895  tasksRewards[i] */\n      dup2\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_125\n      tag_113\n      jump\t// in\n    tag_125:\n    tag_124:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1880:1909  tasksRewards[i] * reqTimes[i] */\n      tag_126\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1865:1909  totalReward += tasksRewards[i] * reqTimes[i] */\n      dup3\n      tag_128\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      swap2\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1948:2129  Task({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1980:1990  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1948:2129  Task({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2021:2033  tasksRewards */\n      dup8\n      dup8\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2034:2035  i */\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2021:2036  tasksRewards[i] */\n      dup2\n      dup2\n      lt\n      tag_130\n      jumpi\n      tag_131\n      tag_113\n      jump\t// in\n    tag_131:\n    tag_130:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1948:2129  Task({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2065:2073  reqTimes */\n      dup6\n      dup6\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2074:2075  i */\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2065:2076  reqTimes[i] */\n      dup2\n      dup2\n      lt\n      tag_132\n      jumpi\n      tag_133\n      tag_113\n      jump\t// in\n    tag_133:\n    tag_132:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1948:2129  Task({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2108:2113  false */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1948:2129  Task({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1924:1933  TasksList */\n      0x07\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1924:1945  TasksList[nextTaskId] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1934:1944  nextTaskId */\n      sload(0x05)\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1924:1945  TasksList[nextTaskId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1924:2129  TasksList[nextTaskId] = Task({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2172:2182  nextTaskId */\n      sload(0x05)\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2161:2171  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2151:2225  TaskAdded(msg.sender,nextTaskId,tasksRewards[i],reqTimes[i]... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffef41c3386c78926fe432f9a2d408f37209532660e385656444e3da578f17d6\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2183:2195  tasksRewards */\n      dup9\n      dup9\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2196:2197  i */\n      dup6\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2183:2198  tasksRewards[i] */\n      dup2\n      dup2\n      lt\n      tag_134\n      jumpi\n      tag_135\n      tag_113\n      jump\t// in\n    tag_135:\n    tag_134:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2199:2207  reqTimes */\n      dup8\n      dup8\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2208:2209  i */\n      dup7\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2199:2210  reqTimes[i] */\n      dup2\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_113\n      jump\t// in\n    tag_137:\n    tag_136:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2151:2225  TaskAdded(msg.sender,nextTaskId,tasksRewards[i],reqTimes[i]... */\n      mload(0x40)\n      tag_138\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2240:2250  nextTaskId */\n      0x05\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2240:2252  nextTaskId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1596:1599  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1554:2264  for (uint i = 0; i < tasksRewards.length; i++){... */\n      jump(tag_108)\n    tag_109:\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2274:2304  _mint(msg.sender, totalReward) */\n      tag_142\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2280:2290  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2292:2303  totalReward */\n      dup3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2274:2279  _mint */\n      tag_143\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2274:2304  _mint(msg.sender, totalReward) */\n      jump\t// in\n    tag_142:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1229:2312  {... */\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":1115:2312  function addTasks(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2320:3259  function redeemReward(... */\n    tag_60:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2394:2415  Task storage cur_task */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2418:2427  TasksList */\n      0x07\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2418:2435  TasksList[taskId] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2428:2434  taskId */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2418:2435  TasksList[taskId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2394:2435  Task storage cur_task = TasksList[taskId] */\n      swap1\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2469:2477  cur_task */\n      dup1\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2469:2489  cur_task.isCompleted */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2468:2489  !cur_task.isCompleted */\n      iszero\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2446:2551  require(... */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2604:2605  0 */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2584:2592  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2584:2601  cur_task.ReqTimes */\n      0x02\n      add\n      sload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2584:2605  cur_task.ReqTimes > 0 */\n      gt\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2562:2661  require(... */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2713:2723  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2694:2723  cur_task.poster != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2694:2702  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2694:2709  cur_task.poster */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2694:2723  cur_task.poster != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2672:2791  require(... */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2825:2840  TaskRecordsList */\n      0x06\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2825:2848  TaskRecordsList[taskId] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2841:2847  taskId */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2825:2848  TaskRecordsList[taskId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2825:2860  TaskRecordsList[taskId][msg.sender] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2849:2859  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2825:2860  TaskRecordsList[taskId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2824:2860  !TaskRecordsList[taskId][msg.sender] */\n      iszero\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2802:2941  require(... */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2975:2976  1 */\n      0x01\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2954:2962  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2954:2971  cur_task.ReqTimes */\n      0x02\n      add\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2954:2976  cur_task.ReqTimes -= 1 */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3012:3013  0 */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2991:2999  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2991:3008  cur_task.ReqTimes */\n      0x02\n      add\n      sload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2991:3013  cur_task.ReqTimes == 0 */\n      sub\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2987:3068  if (cur_task.ReqTimes == 0){... */\n      tag_160\n      jumpi\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3052:3056  true */\n      0x01\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3029:3037  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3029:3049  cur_task.isCompleted */\n      0x03\n      add\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3029:3056  cur_task.isCompleted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2987:3068  if (cur_task.ReqTimes == 0){... */\n    tag_160:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3080:3139  _transfer(cur_task.poster, msg.sender, cur_task.EachReward) */\n      tag_161\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3090:3098  cur_task */\n      dup2\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3090:3105  cur_task.poster */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3107:3117  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3119:3127  cur_task */\n      dup4\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3119:3138  cur_task.EachReward */\n      0x01\n      add\n      sload\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3080:3089  _transfer */\n      tag_100\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3080:3139  _transfer(cur_task.poster, msg.sender, cur_task.EachReward) */\n      jump\t// in\n    tag_161:\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3188:3192  true */\n      0x01\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3165  TaskRecordsList */\n      0x06\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3173  TaskRecordsList[taskId] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3166:3172  taskId */\n      dup5\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3173  TaskRecordsList[taskId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3185  TaskRecordsList[taskId][msg.sender] */\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3174:3184  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3185  TaskRecordsList[taskId][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3150:3192  TaskRecordsList[taskId][msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3240:3250  msg.sender */\n      caller\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3210:3251  TasksOneTimeCompleted(taskId, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3232:3238  taskId */\n      dup3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":3210:3251  TasksOneTimeCompleted(taskId, msg.sender) */\n      0x107f668e128e198cf1077b19274c8dd3008737e858e3445d1176cd1d99951beb\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2383:3259  {... */\n      pop\n        /* \"CrowdSourcing/Crowdsourcing.sol\":2320:3259  function redeemReward(... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_83\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_83\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CrowdSourcing/Crowdsourcing.sol\":824:853  uint256 public nextTaskId = 0 */\n    tag_79:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_190\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_202\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_212:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_213:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_214:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_215:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_216:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_261\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_212\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":711:782   */\n      tag_262\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_213\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_263\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_214\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":881:910   */\n      tag_264\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_215\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_266\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_216\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_218:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_219:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      dup1\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_220:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_221:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_272\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_220\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_222:\n        /* \"#utility.yul\":1876:1900   */\n      tag_274\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_221\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_275:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_223:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_277\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_222\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_224:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_225:\n        /* \"#utility.yul\":2232:2256   */\n      tag_280\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_224\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_281:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_226:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_283\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_225\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_286\n      tag_218\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2525:2644   */\n    tag_285:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_287\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_223\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_288\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_226\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_227:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_228:\n        /* \"#utility.yul\":3089:3110   */\n      tag_291\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_227\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_293\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_228\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3668   */\n    tag_32:\n        /* \"#utility.yul\":3398:3404   */\n      0x00\n        /* \"#utility.yul\":3447:3449   */\n      0x20\n        /* \"#utility.yul\":3435:3444   */\n      dup3\n        /* \"#utility.yul\":3426:3433   */\n      dup5\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3450   */\n      slt\n        /* \"#utility.yul\":3415:3534   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":3453:3532   */\n      tag_296\n      tag_218\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3415:3534   */\n    tag_295:\n        /* \"#utility.yul\":3573:3574   */\n      0x00\n        /* \"#utility.yul\":3598:3651   */\n      tag_297\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3598:3651   */\n      tag_226\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3588:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3544:3661   */\n      pop\n        /* \"#utility.yul\":3339:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3674:3792   */\n    tag_229:\n        /* \"#utility.yul\":3761:3785   */\n      tag_299\n        /* \"#utility.yul\":3779:3784   */\n      dup2\n        /* \"#utility.yul\":3761:3785   */\n      tag_221\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3756:3759   */\n      dup3\n        /* \"#utility.yul\":3749:3786   */\n      mstore\n        /* \"#utility.yul\":3674:3792   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:3916   */\n    tag_230:\n        /* \"#utility.yul\":3885:3909   */\n      tag_301\n        /* \"#utility.yul\":3903:3908   */\n      dup2\n        /* \"#utility.yul\":3885:3909   */\n      tag_224\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3880:3883   */\n      dup3\n        /* \"#utility.yul\":3873:3910   */\n      mstore\n        /* \"#utility.yul\":3798:3916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3922:4463   */\n    tag_35:\n        /* \"#utility.yul\":4093:4097   */\n      0x00\n        /* \"#utility.yul\":4131:4134   */\n      0x80\n        /* \"#utility.yul\":4120:4129   */\n      dup3\n        /* \"#utility.yul\":4116:4135   */\n      add\n        /* \"#utility.yul\":4108:4135   */\n      swap1\n      pop\n        /* \"#utility.yul\":4145:4216   */\n      tag_303\n        /* \"#utility.yul\":4213:4214   */\n      0x00\n        /* \"#utility.yul\":4202:4211   */\n      dup4\n        /* \"#utility.yul\":4198:4215   */\n      add\n        /* \"#utility.yul\":4189:4195   */\n      dup8\n        /* \"#utility.yul\":4145:4216   */\n      tag_229\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4226:4298   */\n      tag_304\n        /* \"#utility.yul\":4294:4296   */\n      0x20\n        /* \"#utility.yul\":4283:4292   */\n      dup4\n        /* \"#utility.yul\":4279:4297   */\n      add\n        /* \"#utility.yul\":4270:4276   */\n      dup7\n        /* \"#utility.yul\":4226:4298   */\n      tag_230\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4308:4380   */\n      tag_305\n        /* \"#utility.yul\":4376:4378   */\n      0x40\n        /* \"#utility.yul\":4365:4374   */\n      dup4\n        /* \"#utility.yul\":4361:4379   */\n      add\n        /* \"#utility.yul\":4352:4358   */\n      dup6\n        /* \"#utility.yul\":4308:4380   */\n      tag_230\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4390:4456   */\n      tag_306\n        /* \"#utility.yul\":4452:4454   */\n      0x60\n        /* \"#utility.yul\":4441:4450   */\n      dup4\n        /* \"#utility.yul\":4437:4455   */\n      add\n        /* \"#utility.yul\":4428:4434   */\n      dup5\n        /* \"#utility.yul\":4390:4456   */\n      tag_228\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3922:4463   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4469:4691   */\n    tag_39:\n        /* \"#utility.yul\":4562:4566   */\n      0x00\n        /* \"#utility.yul\":4600:4602   */\n      0x20\n        /* \"#utility.yul\":4589:4598   */\n      dup3\n        /* \"#utility.yul\":4585:4603   */\n      add\n        /* \"#utility.yul\":4577:4603   */\n      swap1\n      pop\n        /* \"#utility.yul\":4613:4684   */\n      tag_308\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4670:4679   */\n      dup4\n        /* \"#utility.yul\":4666:4683   */\n      add\n        /* \"#utility.yul\":4657:4663   */\n      dup5\n        /* \"#utility.yul\":4613:4684   */\n      tag_230\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4469:4691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4697:5238   */\n    tag_44:\n        /* \"#utility.yul\":4868:4872   */\n      0x00\n        /* \"#utility.yul\":4906:4909   */\n      0x80\n        /* \"#utility.yul\":4895:4904   */\n      dup3\n        /* \"#utility.yul\":4891:4910   */\n      add\n        /* \"#utility.yul\":4883:4910   */\n      swap1\n      pop\n        /* \"#utility.yul\":4920:4991   */\n      tag_310\n        /* \"#utility.yul\":4988:4989   */\n      0x00\n        /* \"#utility.yul\":4977:4986   */\n      dup4\n        /* \"#utility.yul\":4973:4990   */\n      add\n        /* \"#utility.yul\":4964:4970   */\n      dup8\n        /* \"#utility.yul\":4920:4991   */\n      tag_230\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5001:5073   */\n      tag_311\n        /* \"#utility.yul\":5069:5071   */\n      0x20\n        /* \"#utility.yul\":5058:5067   */\n      dup4\n        /* \"#utility.yul\":5054:5072   */\n      add\n        /* \"#utility.yul\":5045:5051   */\n      dup7\n        /* \"#utility.yul\":5001:5073   */\n      tag_229\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5083:5155   */\n      tag_312\n        /* \"#utility.yul\":5151:5153   */\n      0x40\n        /* \"#utility.yul\":5140:5149   */\n      dup4\n        /* \"#utility.yul\":5136:5154   */\n      add\n        /* \"#utility.yul\":5127:5133   */\n      dup6\n        /* \"#utility.yul\":5083:5155   */\n      tag_230\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5165:5231   */\n      tag_313\n        /* \"#utility.yul\":5227:5229   */\n      0x60\n        /* \"#utility.yul\":5216:5225   */\n      dup4\n        /* \"#utility.yul\":5212:5230   */\n      add\n        /* \"#utility.yul\":5203:5209   */\n      dup5\n        /* \"#utility.yul\":5165:5231   */\n      tag_228\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4697:5238   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5244:5863   */\n    tag_47:\n        /* \"#utility.yul\":5321:5327   */\n      0x00\n        /* \"#utility.yul\":5329:5335   */\n      dup1\n        /* \"#utility.yul\":5337:5343   */\n      0x00\n        /* \"#utility.yul\":5386:5388   */\n      0x60\n        /* \"#utility.yul\":5374:5383   */\n      dup5\n        /* \"#utility.yul\":5365:5372   */\n      dup7\n        /* \"#utility.yul\":5361:5384   */\n      sub\n        /* \"#utility.yul\":5357:5389   */\n      slt\n        /* \"#utility.yul\":5354:5473   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":5392:5471   */\n      tag_316\n      tag_218\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5354:5473   */\n    tag_315:\n        /* \"#utility.yul\":5512:5513   */\n      0x00\n        /* \"#utility.yul\":5537:5590   */\n      tag_317\n        /* \"#utility.yul\":5582:5589   */\n      dup7\n        /* \"#utility.yul\":5573:5579   */\n      dup3\n        /* \"#utility.yul\":5562:5571   */\n      dup8\n        /* \"#utility.yul\":5558:5580   */\n      add\n        /* \"#utility.yul\":5537:5590   */\n      tag_223\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5527:5590   */\n      swap4\n      pop\n        /* \"#utility.yul\":5483:5600   */\n      pop\n        /* \"#utility.yul\":5639:5641   */\n      0x20\n        /* \"#utility.yul\":5665:5718   */\n      tag_318\n        /* \"#utility.yul\":5710:5717   */\n      dup7\n        /* \"#utility.yul\":5701:5707   */\n      dup3\n        /* \"#utility.yul\":5690:5699   */\n      dup8\n        /* \"#utility.yul\":5686:5708   */\n      add\n        /* \"#utility.yul\":5665:5718   */\n      tag_223\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5655:5718   */\n      swap3\n      pop\n        /* \"#utility.yul\":5610:5728   */\n      pop\n        /* \"#utility.yul\":5767:5769   */\n      0x40\n        /* \"#utility.yul\":5793:5846   */\n      tag_319\n        /* \"#utility.yul\":5838:5845   */\n      dup7\n        /* \"#utility.yul\":5829:5835   */\n      dup3\n        /* \"#utility.yul\":5818:5827   */\n      dup8\n        /* \"#utility.yul\":5814:5836   */\n      add\n        /* \"#utility.yul\":5793:5846   */\n      tag_226\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5783:5846   */\n      swap2\n      pop\n        /* \"#utility.yul\":5738:5856   */\n      pop\n        /* \"#utility.yul\":5244:5863   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5869:5986   */\n    tag_231:\n        /* \"#utility.yul\":5978:5979   */\n      0x00\n        /* \"#utility.yul\":5975:5976   */\n      dup1\n        /* \"#utility.yul\":5968:5980   */\n      revert\n        /* \"#utility.yul\":5992:6109   */\n    tag_232:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6098:6099   */\n      dup1\n        /* \"#utility.yul\":6091:6103   */\n      revert\n        /* \"#utility.yul\":6115:6232   */\n    tag_233:\n        /* \"#utility.yul\":6224:6225   */\n      0x00\n        /* \"#utility.yul\":6221:6222   */\n      dup1\n        /* \"#utility.yul\":6214:6226   */\n      revert\n        /* \"#utility.yul\":6255:6823   */\n    tag_234:\n        /* \"#utility.yul\":6328:6336   */\n      0x00\n        /* \"#utility.yul\":6338:6344   */\n      dup1\n        /* \"#utility.yul\":6388:6391   */\n      dup4\n        /* \"#utility.yul\":6381:6385   */\n      0x1f\n        /* \"#utility.yul\":6373:6379   */\n      dup5\n        /* \"#utility.yul\":6369:6386   */\n      add\n        /* \"#utility.yul\":6365:6392   */\n      slt\n        /* \"#utility.yul\":6355:6477   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":6396:6475   */\n      tag_325\n      tag_231\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":6355:6477   */\n    tag_324:\n        /* \"#utility.yul\":6509:6515   */\n      dup3\n        /* \"#utility.yul\":6496:6516   */\n      calldataload\n        /* \"#utility.yul\":6486:6516   */\n      swap1\n      pop\n        /* \"#utility.yul\":6539:6557   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6531:6537   */\n      dup2\n        /* \"#utility.yul\":6528:6558   */\n      gt\n        /* \"#utility.yul\":6525:6642   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":6561:6640   */\n      tag_327\n      tag_232\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6525:6642   */\n    tag_326:\n        /* \"#utility.yul\":6675:6679   */\n      0x20\n        /* \"#utility.yul\":6667:6673   */\n      dup4\n        /* \"#utility.yul\":6663:6680   */\n      add\n        /* \"#utility.yul\":6651:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6729:6732   */\n      dup4\n        /* \"#utility.yul\":6721:6725   */\n      0x20\n        /* \"#utility.yul\":6713:6719   */\n      dup3\n        /* \"#utility.yul\":6709:6726   */\n      mul\n        /* \"#utility.yul\":6699:6707   */\n      dup4\n        /* \"#utility.yul\":6695:6727   */\n      add\n        /* \"#utility.yul\":6692:6733   */\n      gt\n        /* \"#utility.yul\":6689:6817   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":6736:6815   */\n      tag_329\n      tag_233\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6689:6817   */\n    tag_328:\n        /* \"#utility.yul\":6255:6823   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6829:7763   */\n    tag_52:\n        /* \"#utility.yul\":6951:6957   */\n      0x00\n        /* \"#utility.yul\":6959:6965   */\n      dup1\n        /* \"#utility.yul\":6967:6973   */\n      0x00\n        /* \"#utility.yul\":6975:6981   */\n      dup1\n        /* \"#utility.yul\":7024:7026   */\n      0x40\n        /* \"#utility.yul\":7012:7021   */\n      dup6\n        /* \"#utility.yul\":7003:7010   */\n      dup8\n        /* \"#utility.yul\":6999:7022   */\n      sub\n        /* \"#utility.yul\":6995:7027   */\n      slt\n        /* \"#utility.yul\":6992:7111   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7030:7109   */\n      tag_332\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6992:7111   */\n    tag_331:\n        /* \"#utility.yul\":7178:7179   */\n      0x00\n        /* \"#utility.yul\":7167:7176   */\n      dup6\n        /* \"#utility.yul\":7163:7180   */\n      add\n        /* \"#utility.yul\":7150:7181   */\n      calldataload\n        /* \"#utility.yul\":7208:7226   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7200:7206   */\n      dup2\n        /* \"#utility.yul\":7197:7227   */\n      gt\n        /* \"#utility.yul\":7194:7311   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":7230:7309   */\n      tag_334\n      tag_219\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":7194:7311   */\n    tag_333:\n        /* \"#utility.yul\":7343:7423   */\n      tag_335\n        /* \"#utility.yul\":7415:7422   */\n      dup8\n        /* \"#utility.yul\":7406:7412   */\n      dup3\n        /* \"#utility.yul\":7395:7404   */\n      dup9\n        /* \"#utility.yul\":7391:7413   */\n      add\n        /* \"#utility.yul\":7343:7423   */\n      tag_234\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":7325:7423   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":7121:7433   */\n      pop\n        /* \"#utility.yul\":7500:7502   */\n      0x20\n        /* \"#utility.yul\":7489:7498   */\n      dup6\n        /* \"#utility.yul\":7485:7503   */\n      add\n        /* \"#utility.yul\":7472:7504   */\n      calldataload\n        /* \"#utility.yul\":7531:7549   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7523:7529   */\n      dup2\n        /* \"#utility.yul\":7520:7550   */\n      gt\n        /* \"#utility.yul\":7517:7634   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":7553:7632   */\n      tag_337\n      tag_219\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7517:7634   */\n    tag_336:\n        /* \"#utility.yul\":7666:7746   */\n      tag_338\n        /* \"#utility.yul\":7738:7745   */\n      dup8\n        /* \"#utility.yul\":7729:7735   */\n      dup3\n        /* \"#utility.yul\":7718:7727   */\n      dup9\n        /* \"#utility.yul\":7714:7736   */\n      add\n        /* \"#utility.yul\":7666:7746   */\n      tag_234\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7648:7746   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":7443:7756   */\n      pop\n        /* \"#utility.yul\":6829:7763   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7769:7855   */\n    tag_235:\n        /* \"#utility.yul\":7804:7811   */\n      0x00\n        /* \"#utility.yul\":7844:7848   */\n      0xff\n        /* \"#utility.yul\":7837:7842   */\n      dup3\n        /* \"#utility.yul\":7833:7849   */\n      and\n        /* \"#utility.yul\":7822:7849   */\n      swap1\n      pop\n        /* \"#utility.yul\":7769:7855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7861:7973   */\n    tag_236:\n        /* \"#utility.yul\":7944:7966   */\n      tag_341\n        /* \"#utility.yul\":7960:7965   */\n      dup2\n        /* \"#utility.yul\":7944:7966   */\n      tag_235\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":7939:7942   */\n      dup3\n        /* \"#utility.yul\":7932:7967   */\n      mstore\n        /* \"#utility.yul\":7861:7973   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8193   */\n    tag_57:\n        /* \"#utility.yul\":8068:8072   */\n      0x00\n        /* \"#utility.yul\":8106:8108   */\n      0x20\n        /* \"#utility.yul\":8095:8104   */\n      dup3\n        /* \"#utility.yul\":8091:8109   */\n      add\n        /* \"#utility.yul\":8083:8109   */\n      swap1\n      pop\n        /* \"#utility.yul\":8119:8186   */\n      tag_343\n        /* \"#utility.yul\":8183:8184   */\n      0x00\n        /* \"#utility.yul\":8172:8181   */\n      dup4\n        /* \"#utility.yul\":8168:8185   */\n      add\n        /* \"#utility.yul\":8159:8165   */\n      dup5\n        /* \"#utility.yul\":8119:8186   */\n      tag_236\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7979:8193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8199:8528   */\n    tag_63:\n        /* \"#utility.yul\":8258:8264   */\n      0x00\n        /* \"#utility.yul\":8307:8309   */\n      0x20\n        /* \"#utility.yul\":8295:8304   */\n      dup3\n        /* \"#utility.yul\":8286:8293   */\n      dup5\n        /* \"#utility.yul\":8282:8305   */\n      sub\n        /* \"#utility.yul\":8278:8310   */\n      slt\n        /* \"#utility.yul\":8275:8394   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":8313:8392   */\n      tag_346\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":8275:8394   */\n    tag_345:\n        /* \"#utility.yul\":8433:8434   */\n      0x00\n        /* \"#utility.yul\":8458:8511   */\n      tag_347\n        /* \"#utility.yul\":8503:8510   */\n      dup5\n        /* \"#utility.yul\":8494:8500   */\n      dup3\n        /* \"#utility.yul\":8483:8492   */\n      dup6\n        /* \"#utility.yul\":8479:8501   */\n      add\n        /* \"#utility.yul\":8458:8511   */\n      tag_223\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8448:8511   */\n      swap2\n      pop\n        /* \"#utility.yul\":8404:8521   */\n      pop\n        /* \"#utility.yul\":8199:8528   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8534:9008   */\n    tag_75:\n        /* \"#utility.yul\":8602:8608   */\n      0x00\n        /* \"#utility.yul\":8610:8616   */\n      dup1\n        /* \"#utility.yul\":8659:8661   */\n      0x40\n        /* \"#utility.yul\":8647:8656   */\n      dup4\n        /* \"#utility.yul\":8638:8645   */\n      dup6\n        /* \"#utility.yul\":8634:8657   */\n      sub\n        /* \"#utility.yul\":8630:8662   */\n      slt\n        /* \"#utility.yul\":8627:8746   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":8665:8744   */\n      tag_350\n      tag_218\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":8627:8746   */\n    tag_349:\n        /* \"#utility.yul\":8785:8786   */\n      0x00\n        /* \"#utility.yul\":8810:8863   */\n      tag_351\n        /* \"#utility.yul\":8855:8862   */\n      dup6\n        /* \"#utility.yul\":8846:8852   */\n      dup3\n        /* \"#utility.yul\":8835:8844   */\n      dup7\n        /* \"#utility.yul\":8831:8853   */\n      add\n        /* \"#utility.yul\":8810:8863   */\n      tag_223\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8800:8863   */\n      swap3\n      pop\n        /* \"#utility.yul\":8756:8873   */\n      pop\n        /* \"#utility.yul\":8912:8914   */\n      0x20\n        /* \"#utility.yul\":8938:8991   */\n      tag_352\n        /* \"#utility.yul\":8983:8990   */\n      dup6\n        /* \"#utility.yul\":8974:8980   */\n      dup3\n        /* \"#utility.yul\":8963:8972   */\n      dup7\n        /* \"#utility.yul\":8959:8981   */\n      add\n        /* \"#utility.yul\":8938:8991   */\n      tag_223\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":8928:8991   */\n      swap2\n      pop\n        /* \"#utility.yul\":8883:9001   */\n      pop\n        /* \"#utility.yul\":8534:9008   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9014:9194   */\n    tag_237:\n        /* \"#utility.yul\":9062:9139   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9059:9060   */\n      0x00\n        /* \"#utility.yul\":9052:9140   */\n      mstore\n        /* \"#utility.yul\":9159:9163   */\n      0x22\n        /* \"#utility.yul\":9156:9157   */\n      0x04\n        /* \"#utility.yul\":9149:9164   */\n      mstore\n        /* \"#utility.yul\":9183:9187   */\n      0x24\n        /* \"#utility.yul\":9180:9181   */\n      0x00\n        /* \"#utility.yul\":9173:9188   */\n      revert\n        /* \"#utility.yul\":9200:9520   */\n    tag_83:\n        /* \"#utility.yul\":9244:9250   */\n      0x00\n        /* \"#utility.yul\":9281:9282   */\n      0x02\n        /* \"#utility.yul\":9275:9279   */\n      dup3\n        /* \"#utility.yul\":9271:9283   */\n      div\n        /* \"#utility.yul\":9261:9283   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9329   */\n      0x01\n        /* \"#utility.yul\":9322:9326   */\n      dup3\n        /* \"#utility.yul\":9318:9330   */\n      and\n        /* \"#utility.yul\":9349:9367   */\n      dup1\n        /* \"#utility.yul\":9339:9420   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":9405:9409   */\n      0x7f\n        /* \"#utility.yul\":9397:9403   */\n      dup3\n        /* \"#utility.yul\":9393:9410   */\n      and\n        /* \"#utility.yul\":9383:9410   */\n      swap2\n      pop\n        /* \"#utility.yul\":9339:9420   */\n    tag_355:\n        /* \"#utility.yul\":9467:9469   */\n      0x20\n        /* \"#utility.yul\":9459:9465   */\n      dup3\n        /* \"#utility.yul\":9456:9470   */\n      lt\n        /* \"#utility.yul\":9436:9454   */\n      dup2\n        /* \"#utility.yul\":9433:9471   */\n      sub\n        /* \"#utility.yul\":9430:9514   */\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9486:9504   */\n      tag_357\n      tag_237\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9430:9514   */\n    tag_356:\n        /* \"#utility.yul\":9251:9520   */\n      pop\n        /* \"#utility.yul\":9200:9520   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9526:9765   */\n    tag_238:\n        /* \"#utility.yul\":9666:9700   */\n      0x546865206c656e677468206f66205461736b7320616e64205265716972656420\n        /* \"#utility.yul\":9662:9663   */\n      0x00\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9650:9664   */\n      add\n        /* \"#utility.yul\":9643:9701   */\n      mstore\n        /* \"#utility.yul\":9735:9757   */\n      0x54696d657320646f6e2774206d61746368212121000000000000000000000000\n        /* \"#utility.yul\":9730:9732   */\n      0x20\n        /* \"#utility.yul\":9722:9728   */\n      dup3\n        /* \"#utility.yul\":9718:9733   */\n      add\n        /* \"#utility.yul\":9711:9758   */\n      mstore\n        /* \"#utility.yul\":9526:9765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9771:10137   */\n    tag_239:\n        /* \"#utility.yul\":9913:9916   */\n      0x00\n        /* \"#utility.yul\":9934:10001   */\n      tag_360\n        /* \"#utility.yul\":9998:10000   */\n      0x34\n        /* \"#utility.yul\":9993:9996   */\n      dup4\n        /* \"#utility.yul\":9934:10001   */\n      tag_213\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9927:10001   */\n      swap2\n      pop\n        /* \"#utility.yul\":10010:10103   */\n      tag_361\n        /* \"#utility.yul\":10099:10102   */\n      dup3\n        /* \"#utility.yul\":10010:10103   */\n      tag_238\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10128:10130   */\n      0x40\n        /* \"#utility.yul\":10123:10126   */\n      dup3\n        /* \"#utility.yul\":10119:10131   */\n      add\n        /* \"#utility.yul\":10112:10131   */\n      swap1\n      pop\n        /* \"#utility.yul\":9771:10137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10143:10562   */\n    tag_104:\n        /* \"#utility.yul\":10309:10313   */\n      0x00\n        /* \"#utility.yul\":10347:10349   */\n      0x20\n        /* \"#utility.yul\":10336:10345   */\n      dup3\n        /* \"#utility.yul\":10332:10350   */\n      add\n        /* \"#utility.yul\":10324:10350   */\n      swap1\n      pop\n        /* \"#utility.yul\":10396:10405   */\n      dup2\n        /* \"#utility.yul\":10390:10394   */\n      dup2\n        /* \"#utility.yul\":10386:10406   */\n      sub\n        /* \"#utility.yul\":10382:10383   */\n      0x00\n        /* \"#utility.yul\":10371:10380   */\n      dup4\n        /* \"#utility.yul\":10367:10384   */\n      add\n        /* \"#utility.yul\":10360:10407   */\n      mstore\n        /* \"#utility.yul\":10424:10555   */\n      tag_363\n        /* \"#utility.yul\":10550:10554   */\n      dup2\n        /* \"#utility.yul\":10424:10555   */\n      tag_239\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10416:10555   */\n      swap1\n      pop\n        /* \"#utility.yul\":10143:10562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10568:10798   */\n    tag_240:\n        /* \"#utility.yul\":10708:10742   */\n      0x4174206c656173742068617665206f6e65207461736b20616e64207265716972\n        /* \"#utility.yul\":10704:10705   */\n      0x00\n        /* \"#utility.yul\":10696:10702   */\n      dup3\n        /* \"#utility.yul\":10692:10706   */\n      add\n        /* \"#utility.yul\":10685:10743   */\n      mstore\n        /* \"#utility.yul\":10777:10790   */\n      0x65642074696d6573212121000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10772:10774   */\n      0x20\n        /* \"#utility.yul\":10764:10770   */\n      dup3\n        /* \"#utility.yul\":10760:10775   */\n      add\n        /* \"#utility.yul\":10753:10791   */\n      mstore\n        /* \"#utility.yul\":10568:10798   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10804:11170   */\n    tag_241:\n        /* \"#utility.yul\":10946:10949   */\n      0x00\n        /* \"#utility.yul\":10967:11034   */\n      tag_366\n        /* \"#utility.yul\":11031:11033   */\n      0x2b\n        /* \"#utility.yul\":11026:11029   */\n      dup4\n        /* \"#utility.yul\":10967:11034   */\n      tag_213\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":10960:11034   */\n      swap2\n      pop\n        /* \"#utility.yul\":11043:11136   */\n      tag_367\n        /* \"#utility.yul\":11132:11135   */\n      dup3\n        /* \"#utility.yul\":11043:11136   */\n      tag_240\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":11161:11163   */\n      0x40\n        /* \"#utility.yul\":11156:11159   */\n      dup3\n        /* \"#utility.yul\":11152:11164   */\n      add\n        /* \"#utility.yul\":11145:11164   */\n      swap1\n      pop\n        /* \"#utility.yul\":10804:11170   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11176:11595   */\n    tag_107:\n        /* \"#utility.yul\":11342:11346   */\n      0x00\n        /* \"#utility.yul\":11380:11382   */\n      0x20\n        /* \"#utility.yul\":11369:11378   */\n      dup3\n        /* \"#utility.yul\":11365:11383   */\n      add\n        /* \"#utility.yul\":11357:11383   */\n      swap1\n      pop\n        /* \"#utility.yul\":11429:11438   */\n      dup2\n        /* \"#utility.yul\":11423:11427   */\n      dup2\n        /* \"#utility.yul\":11419:11439   */\n      sub\n        /* \"#utility.yul\":11415:11416   */\n      0x00\n        /* \"#utility.yul\":11404:11413   */\n      dup4\n        /* \"#utility.yul\":11400:11417   */\n      add\n        /* \"#utility.yul\":11393:11440   */\n      mstore\n        /* \"#utility.yul\":11457:11588   */\n      tag_369\n        /* \"#utility.yul\":11583:11587   */\n      dup2\n        /* \"#utility.yul\":11457:11588   */\n      tag_241\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11449:11588   */\n      swap1\n      pop\n        /* \"#utility.yul\":11176:11595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11601:11781   */\n    tag_113:\n        /* \"#utility.yul\":11649:11726   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11646:11647   */\n      0x00\n        /* \"#utility.yul\":11639:11727   */\n      mstore\n        /* \"#utility.yul\":11746:11750   */\n      0x32\n        /* \"#utility.yul\":11743:11744   */\n      0x04\n        /* \"#utility.yul\":11736:11751   */\n      mstore\n        /* \"#utility.yul\":11770:11774   */\n      0x24\n        /* \"#utility.yul\":11767:11768   */\n      0x00\n        /* \"#utility.yul\":11760:11775   */\n      revert\n        /* \"#utility.yul\":11787:11962   */\n    tag_242:\n        /* \"#utility.yul\":11927:11954   */\n      0x526577617264206d75737420626520706f736974766521212100000000000000\n        /* \"#utility.yul\":11923:11924   */\n      0x00\n        /* \"#utility.yul\":11915:11921   */\n      dup3\n        /* \"#utility.yul\":11911:11925   */\n      add\n        /* \"#utility.yul\":11904:11955   */\n      mstore\n        /* \"#utility.yul\":11787:11962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11968:12334   */\n    tag_243:\n        /* \"#utility.yul\":12110:12113   */\n      0x00\n        /* \"#utility.yul\":12131:12198   */\n      tag_373\n        /* \"#utility.yul\":12195:12197   */\n      0x19\n        /* \"#utility.yul\":12190:12193   */\n      dup4\n        /* \"#utility.yul\":12131:12198   */\n      tag_213\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12124:12198   */\n      swap2\n      pop\n        /* \"#utility.yul\":12207:12300   */\n      tag_374\n        /* \"#utility.yul\":12296:12299   */\n      dup3\n        /* \"#utility.yul\":12207:12300   */\n      tag_242\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":12325:12327   */\n      0x20\n        /* \"#utility.yul\":12320:12323   */\n      dup3\n        /* \"#utility.yul\":12316:12328   */\n      add\n        /* \"#utility.yul\":12309:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":11968:12334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12340:12759   */\n    tag_116:\n        /* \"#utility.yul\":12506:12510   */\n      0x00\n        /* \"#utility.yul\":12544:12546   */\n      0x20\n        /* \"#utility.yul\":12533:12542   */\n      dup3\n        /* \"#utility.yul\":12529:12547   */\n      add\n        /* \"#utility.yul\":12521:12547   */\n      swap1\n      pop\n        /* \"#utility.yul\":12593:12602   */\n      dup2\n        /* \"#utility.yul\":12587:12591   */\n      dup2\n        /* \"#utility.yul\":12583:12603   */\n      sub\n        /* \"#utility.yul\":12579:12580   */\n      0x00\n        /* \"#utility.yul\":12568:12577   */\n      dup4\n        /* \"#utility.yul\":12564:12581   */\n      add\n        /* \"#utility.yul\":12557:12604   */\n      mstore\n        /* \"#utility.yul\":12621:12752   */\n      tag_376\n        /* \"#utility.yul\":12747:12751   */\n      dup2\n        /* \"#utility.yul\":12621:12752   */\n      tag_243\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12613:12752   */\n      swap1\n      pop\n        /* \"#utility.yul\":12340:12759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12765:12990   */\n    tag_244:\n        /* \"#utility.yul\":12905:12939   */\n      0x5265717569726564205375626d697373696f6e206d75737420626520706f7374\n        /* \"#utility.yul\":12901:12902   */\n      0x00\n        /* \"#utility.yul\":12893:12899   */\n      dup3\n        /* \"#utility.yul\":12889:12903   */\n      add\n        /* \"#utility.yul\":12882:12940   */\n      mstore\n        /* \"#utility.yul\":12974:12982   */\n      0x6976652121210000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12969:12971   */\n      0x20\n        /* \"#utility.yul\":12961:12967   */\n      dup3\n        /* \"#utility.yul\":12957:12972   */\n      add\n        /* \"#utility.yul\":12950:12983   */\n      mstore\n        /* \"#utility.yul\":12765:12990   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12996:13362   */\n    tag_245:\n        /* \"#utility.yul\":13138:13141   */\n      0x00\n        /* \"#utility.yul\":13159:13226   */\n      tag_379\n        /* \"#utility.yul\":13223:13225   */\n      0x26\n        /* \"#utility.yul\":13218:13221   */\n      dup4\n        /* \"#utility.yul\":13159:13226   */\n      tag_213\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":13152:13226   */\n      swap2\n      pop\n        /* \"#utility.yul\":13235:13328   */\n      tag_380\n        /* \"#utility.yul\":13324:13327   */\n      dup3\n        /* \"#utility.yul\":13235:13328   */\n      tag_244\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13353:13355   */\n      0x40\n        /* \"#utility.yul\":13348:13351   */\n      dup3\n        /* \"#utility.yul\":13344:13356   */\n      add\n        /* \"#utility.yul\":13337:13356   */\n      swap1\n      pop\n        /* \"#utility.yul\":12996:13362   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13368:13787   */\n    tag_121:\n        /* \"#utility.yul\":13534:13538   */\n      0x00\n        /* \"#utility.yul\":13572:13574   */\n      0x20\n        /* \"#utility.yul\":13561:13570   */\n      dup3\n        /* \"#utility.yul\":13557:13575   */\n      add\n        /* \"#utility.yul\":13549:13575   */\n      swap1\n      pop\n        /* \"#utility.yul\":13621:13630   */\n      dup2\n        /* \"#utility.yul\":13615:13619   */\n      dup2\n        /* \"#utility.yul\":13611:13631   */\n      sub\n        /* \"#utility.yul\":13607:13608   */\n      0x00\n        /* \"#utility.yul\":13596:13605   */\n      dup4\n        /* \"#utility.yul\":13592:13609   */\n      add\n        /* \"#utility.yul\":13585:13632   */\n      mstore\n        /* \"#utility.yul\":13649:13780   */\n      tag_382\n        /* \"#utility.yul\":13775:13779   */\n      dup2\n        /* \"#utility.yul\":13649:13780   */\n      tag_245\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":13641:13780   */\n      swap1\n      pop\n        /* \"#utility.yul\":13368:13787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13793:13973   */\n    tag_246:\n        /* \"#utility.yul\":13841:13918   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13838:13839   */\n      0x00\n        /* \"#utility.yul\":13831:13919   */\n      mstore\n        /* \"#utility.yul\":13938:13942   */\n      0x11\n        /* \"#utility.yul\":13935:13936   */\n      0x04\n        /* \"#utility.yul\":13928:13943   */\n      mstore\n        /* \"#utility.yul\":13962:13966   */\n      0x24\n        /* \"#utility.yul\":13959:13960   */\n      0x00\n        /* \"#utility.yul\":13952:13967   */\n      revert\n        /* \"#utility.yul\":13979:14389   */\n    tag_127:\n        /* \"#utility.yul\":14019:14026   */\n      0x00\n        /* \"#utility.yul\":14042:14062   */\n      tag_385\n        /* \"#utility.yul\":14060:14061   */\n      dup3\n        /* \"#utility.yul\":14042:14062   */\n      tag_224\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":14037:14062   */\n      swap2\n      pop\n        /* \"#utility.yul\":14076:14096   */\n      tag_386\n        /* \"#utility.yul\":14094:14095   */\n      dup4\n        /* \"#utility.yul\":14076:14096   */\n      tag_224\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":14071:14096   */\n      swap3\n      pop\n        /* \"#utility.yul\":14131:14132   */\n      dup3\n        /* \"#utility.yul\":14128:14129   */\n      dup3\n        /* \"#utility.yul\":14124:14133   */\n      mul\n        /* \"#utility.yul\":14153:14183   */\n      tag_387\n        /* \"#utility.yul\":14171:14182   */\n      dup2\n        /* \"#utility.yul\":14153:14183   */\n      tag_224\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":14142:14183   */\n      swap2\n      pop\n        /* \"#utility.yul\":14332:14333   */\n      dup3\n        /* \"#utility.yul\":14323:14330   */\n      dup3\n        /* \"#utility.yul\":14319:14334   */\n      div\n        /* \"#utility.yul\":14316:14317   */\n      dup5\n        /* \"#utility.yul\":14313:14335   */\n      eq\n        /* \"#utility.yul\":14293:14294   */\n      dup4\n        /* \"#utility.yul\":14286:14295   */\n      iszero\n        /* \"#utility.yul\":14266:14349   */\n      or\n        /* \"#utility.yul\":14243:14382   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":14362:14380   */\n      tag_389\n      tag_246\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":14243:14382   */\n    tag_388:\n        /* \"#utility.yul\":14027:14389   */\n      pop\n        /* \"#utility.yul\":13979:14389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14395:14586   */\n    tag_129:\n        /* \"#utility.yul\":14435:14438   */\n      0x00\n        /* \"#utility.yul\":14454:14474   */\n      tag_391\n        /* \"#utility.yul\":14472:14473   */\n      dup3\n        /* \"#utility.yul\":14454:14474   */\n      tag_224\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":14449:14474   */\n      swap2\n      pop\n        /* \"#utility.yul\":14488:14508   */\n      tag_392\n        /* \"#utility.yul\":14506:14507   */\n      dup4\n        /* \"#utility.yul\":14488:14508   */\n      tag_224\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":14483:14508   */\n      swap3\n      pop\n        /* \"#utility.yul\":14531:14532   */\n      dup3\n        /* \"#utility.yul\":14528:14529   */\n      dup3\n        /* \"#utility.yul\":14524:14533   */\n      add\n        /* \"#utility.yul\":14517:14533   */\n      swap1\n      pop\n        /* \"#utility.yul\":14552:14555   */\n      dup1\n        /* \"#utility.yul\":14549:14550   */\n      dup3\n        /* \"#utility.yul\":14546:14556   */\n      gt\n        /* \"#utility.yul\":14543:14579   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":14559:14577   */\n      tag_394\n      tag_246\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":14543:14579   */\n    tag_393:\n        /* \"#utility.yul\":14395:14586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14592:14924   */\n    tag_139:\n        /* \"#utility.yul\":14713:14717   */\n      0x00\n        /* \"#utility.yul\":14751:14753   */\n      0x40\n        /* \"#utility.yul\":14740:14749   */\n      dup3\n        /* \"#utility.yul\":14736:14754   */\n      add\n        /* \"#utility.yul\":14728:14754   */\n      swap1\n      pop\n        /* \"#utility.yul\":14764:14835   */\n      tag_396\n        /* \"#utility.yul\":14832:14833   */\n      0x00\n        /* \"#utility.yul\":14821:14830   */\n      dup4\n        /* \"#utility.yul\":14817:14834   */\n      add\n        /* \"#utility.yul\":14808:14814   */\n      dup6\n        /* \"#utility.yul\":14764:14835   */\n      tag_230\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":14845:14917   */\n      tag_397\n        /* \"#utility.yul\":14913:14915   */\n      0x20\n        /* \"#utility.yul\":14902:14911   */\n      dup4\n        /* \"#utility.yul\":14898:14916   */\n      add\n        /* \"#utility.yul\":14889:14895   */\n      dup5\n        /* \"#utility.yul\":14845:14917   */\n      tag_230\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":14592:14924   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14930:15163   */\n    tag_141:\n        /* \"#utility.yul\":14969:14972   */\n      0x00\n        /* \"#utility.yul\":14992:15016   */\n      tag_399\n        /* \"#utility.yul\":15010:15015   */\n      dup3\n        /* \"#utility.yul\":14992:15016   */\n      tag_224\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":14983:15016   */\n      swap2\n      pop\n        /* \"#utility.yul\":15038:15104   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15031:15036   */\n      dup3\n        /* \"#utility.yul\":15028:15105   */\n      sub\n        /* \"#utility.yul\":15025:15128   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":15108:15126   */\n      tag_401\n      tag_246\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":15025:15128   */\n    tag_400:\n        /* \"#utility.yul\":15155:15156   */\n      0x01\n        /* \"#utility.yul\":15148:15153   */\n      dup3\n        /* \"#utility.yul\":15144:15157   */\n      add\n        /* \"#utility.yul\":15137:15157   */\n      swap1\n      pop\n        /* \"#utility.yul\":14930:15163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15169:15390   */\n    tag_247:\n        /* \"#utility.yul\":15309:15343   */\n      0x43757272656e74205461736b20686173206265656e20636f6d706c6574656421\n        /* \"#utility.yul\":15305:15306   */\n      0x00\n        /* \"#utility.yul\":15297:15303   */\n      dup3\n        /* \"#utility.yul\":15293:15307   */\n      add\n        /* \"#utility.yul\":15286:15344   */\n      mstore\n        /* \"#utility.yul\":15378:15382   */\n      0x2121000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15373:15375   */\n      0x20\n        /* \"#utility.yul\":15365:15371   */\n      dup3\n        /* \"#utility.yul\":15361:15376   */\n      add\n        /* \"#utility.yul\":15354:15383   */\n      mstore\n        /* \"#utility.yul\":15169:15390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15396:15762   */\n    tag_248:\n        /* \"#utility.yul\":15538:15541   */\n      0x00\n        /* \"#utility.yul\":15559:15626   */\n      tag_404\n        /* \"#utility.yul\":15623:15625   */\n      0x22\n        /* \"#utility.yul\":15618:15621   */\n      dup4\n        /* \"#utility.yul\":15559:15626   */\n      tag_213\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":15552:15626   */\n      swap2\n      pop\n        /* \"#utility.yul\":15635:15728   */\n      tag_405\n        /* \"#utility.yul\":15724:15727   */\n      dup3\n        /* \"#utility.yul\":15635:15728   */\n      tag_247\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":15753:15755   */\n      0x40\n        /* \"#utility.yul\":15748:15751   */\n      dup3\n        /* \"#utility.yul\":15744:15756   */\n      add\n        /* \"#utility.yul\":15737:15756   */\n      swap1\n      pop\n        /* \"#utility.yul\":15396:15762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15768:16187   */\n    tag_148:\n        /* \"#utility.yul\":15934:15938   */\n      0x00\n        /* \"#utility.yul\":15972:15974   */\n      0x20\n        /* \"#utility.yul\":15961:15970   */\n      dup3\n        /* \"#utility.yul\":15957:15975   */\n      add\n        /* \"#utility.yul\":15949:15975   */\n      swap1\n      pop\n        /* \"#utility.yul\":16021:16030   */\n      dup2\n        /* \"#utility.yul\":16015:16019   */\n      dup2\n        /* \"#utility.yul\":16011:16031   */\n      sub\n        /* \"#utility.yul\":16007:16008   */\n      0x00\n        /* \"#utility.yul\":15996:16005   */\n      dup4\n        /* \"#utility.yul\":15992:16009   */\n      add\n        /* \"#utility.yul\":15985:16032   */\n      mstore\n        /* \"#utility.yul\":16049:16180   */\n      tag_407\n        /* \"#utility.yul\":16175:16179   */\n      dup2\n        /* \"#utility.yul\":16049:16180   */\n      tag_248\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":16041:16180   */\n      swap1\n      pop\n        /* \"#utility.yul\":15768:16187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16193:16371   */\n    tag_249:\n        /* \"#utility.yul\":16333:16363   */\n      0x4e6f207375626d697373696f6e20697320726571756972656421212100000000\n        /* \"#utility.yul\":16329:16330   */\n      0x00\n        /* \"#utility.yul\":16321:16327   */\n      dup3\n        /* \"#utility.yul\":16317:16331   */\n      add\n        /* \"#utility.yul\":16310:16364   */\n      mstore\n        /* \"#utility.yul\":16193:16371   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16377:16743   */\n    tag_250:\n        /* \"#utility.yul\":16519:16522   */\n      0x00\n        /* \"#utility.yul\":16540:16607   */\n      tag_410\n        /* \"#utility.yul\":16604:16606   */\n      0x1c\n        /* \"#utility.yul\":16599:16602   */\n      dup4\n        /* \"#utility.yul\":16540:16607   */\n      tag_213\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":16533:16607   */\n      swap2\n      pop\n        /* \"#utility.yul\":16616:16709   */\n      tag_411\n        /* \"#utility.yul\":16705:16708   */\n      dup3\n        /* \"#utility.yul\":16616:16709   */\n      tag_249\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":16734:16736   */\n      0x20\n        /* \"#utility.yul\":16729:16732   */\n      dup3\n        /* \"#utility.yul\":16725:16737   */\n      add\n        /* \"#utility.yul\":16718:16737   */\n      swap1\n      pop\n        /* \"#utility.yul\":16377:16743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16749:17168   */\n    tag_151:\n        /* \"#utility.yul\":16915:16919   */\n      0x00\n        /* \"#utility.yul\":16953:16955   */\n      0x20\n        /* \"#utility.yul\":16942:16951   */\n      dup3\n        /* \"#utility.yul\":16938:16956   */\n      add\n        /* \"#utility.yul\":16930:16956   */\n      swap1\n      pop\n        /* \"#utility.yul\":17002:17011   */\n      dup2\n        /* \"#utility.yul\":16996:17000   */\n      dup2\n        /* \"#utility.yul\":16992:17012   */\n      sub\n        /* \"#utility.yul\":16988:16989   */\n      0x00\n        /* \"#utility.yul\":16977:16986   */\n      dup4\n        /* \"#utility.yul\":16973:16990   */\n      add\n        /* \"#utility.yul\":16966:17013   */\n      mstore\n        /* \"#utility.yul\":17030:17161   */\n      tag_413\n        /* \"#utility.yul\":17156:17160   */\n      dup2\n        /* \"#utility.yul\":17030:17161   */\n      tag_250\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":17022:17161   */\n      swap1\n      pop\n        /* \"#utility.yul\":16749:17168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17174:17401   */\n    tag_251:\n        /* \"#utility.yul\":17314:17348   */\n      0x5461736b20506f7374657220616e64205375626d697474657220697320746865\n        /* \"#utility.yul\":17310:17311   */\n      0x00\n        /* \"#utility.yul\":17302:17308   */\n      dup3\n        /* \"#utility.yul\":17298:17312   */\n      add\n        /* \"#utility.yul\":17291:17349   */\n      mstore\n        /* \"#utility.yul\":17383:17393   */\n      0x2073616d65212121000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17378:17380   */\n      0x20\n        /* \"#utility.yul\":17370:17376   */\n      dup3\n        /* \"#utility.yul\":17366:17381   */\n      add\n        /* \"#utility.yul\":17359:17394   */\n      mstore\n        /* \"#utility.yul\":17174:17401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17407:17773   */\n    tag_252:\n        /* \"#utility.yul\":17549:17552   */\n      0x00\n        /* \"#utility.yul\":17570:17637   */\n      tag_416\n        /* \"#utility.yul\":17634:17636   */\n      0x28\n        /* \"#utility.yul\":17629:17632   */\n      dup4\n        /* \"#utility.yul\":17570:17637   */\n      tag_213\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":17563:17637   */\n      swap2\n      pop\n        /* \"#utility.yul\":17646:17739   */\n      tag_417\n        /* \"#utility.yul\":17735:17738   */\n      dup3\n        /* \"#utility.yul\":17646:17739   */\n      tag_251\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":17764:17766   */\n      0x40\n        /* \"#utility.yul\":17759:17762   */\n      dup3\n        /* \"#utility.yul\":17755:17767   */\n      add\n        /* \"#utility.yul\":17748:17767   */\n      swap1\n      pop\n        /* \"#utility.yul\":17407:17773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17779:18198   */\n    tag_154:\n        /* \"#utility.yul\":17945:17949   */\n      0x00\n        /* \"#utility.yul\":17983:17985   */\n      0x20\n        /* \"#utility.yul\":17972:17981   */\n      dup3\n        /* \"#utility.yul\":17968:17986   */\n      add\n        /* \"#utility.yul\":17960:17986   */\n      swap1\n      pop\n        /* \"#utility.yul\":18032:18041   */\n      dup2\n        /* \"#utility.yul\":18026:18030   */\n      dup2\n        /* \"#utility.yul\":18022:18042   */\n      sub\n        /* \"#utility.yul\":18018:18019   */\n      0x00\n        /* \"#utility.yul\":18007:18016   */\n      dup4\n        /* \"#utility.yul\":18003:18020   */\n      add\n        /* \"#utility.yul\":17996:18043   */\n      mstore\n        /* \"#utility.yul\":18060:18191   */\n      tag_419\n        /* \"#utility.yul\":18186:18190   */\n      dup2\n        /* \"#utility.yul\":18060:18191   */\n      tag_252\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":18052:18191   */\n      swap1\n      pop\n        /* \"#utility.yul\":17779:18198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18204:18444   */\n    tag_253:\n        /* \"#utility.yul\":18344:18378   */\n      0x52657761726420686173206265656e2072656c656173656420666f7220746865\n        /* \"#utility.yul\":18340:18341   */\n      0x00\n        /* \"#utility.yul\":18332:18338   */\n      dup3\n        /* \"#utility.yul\":18328:18342   */\n      add\n        /* \"#utility.yul\":18321:18379   */\n      mstore\n        /* \"#utility.yul\":18413:18436   */\n      0x2063757272656e74207375626d69747465722121210000000000000000000000\n        /* \"#utility.yul\":18408:18410   */\n      0x20\n        /* \"#utility.yul\":18400:18406   */\n      dup3\n        /* \"#utility.yul\":18396:18411   */\n      add\n        /* \"#utility.yul\":18389:18437   */\n      mstore\n        /* \"#utility.yul\":18204:18444   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18450:18816   */\n    tag_254:\n        /* \"#utility.yul\":18592:18595   */\n      0x00\n        /* \"#utility.yul\":18613:18680   */\n      tag_422\n        /* \"#utility.yul\":18677:18679   */\n      0x35\n        /* \"#utility.yul\":18672:18675   */\n      dup4\n        /* \"#utility.yul\":18613:18680   */\n      tag_213\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":18606:18680   */\n      swap2\n      pop\n        /* \"#utility.yul\":18689:18782   */\n      tag_423\n        /* \"#utility.yul\":18778:18781   */\n      dup3\n        /* \"#utility.yul\":18689:18782   */\n      tag_253\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":18807:18809   */\n      0x40\n        /* \"#utility.yul\":18802:18805   */\n      dup3\n        /* \"#utility.yul\":18798:18810   */\n      add\n        /* \"#utility.yul\":18791:18810   */\n      swap1\n      pop\n        /* \"#utility.yul\":18450:18816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18822:19241   */\n    tag_157:\n        /* \"#utility.yul\":18988:18992   */\n      0x00\n        /* \"#utility.yul\":19026:19028   */\n      0x20\n        /* \"#utility.yul\":19015:19024   */\n      dup3\n        /* \"#utility.yul\":19011:19029   */\n      add\n        /* \"#utility.yul\":19003:19029   */\n      swap1\n      pop\n        /* \"#utility.yul\":19075:19084   */\n      dup2\n        /* \"#utility.yul\":19069:19073   */\n      dup2\n        /* \"#utility.yul\":19065:19085   */\n      sub\n        /* \"#utility.yul\":19061:19062   */\n      0x00\n        /* \"#utility.yul\":19050:19059   */\n      dup4\n        /* \"#utility.yul\":19046:19063   */\n      add\n        /* \"#utility.yul\":19039:19086   */\n      mstore\n        /* \"#utility.yul\":19103:19234   */\n      tag_425\n        /* \"#utility.yul\":19229:19233   */\n      dup2\n        /* \"#utility.yul\":19103:19234   */\n      tag_254\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":19095:19234   */\n      swap1\n      pop\n        /* \"#utility.yul\":18822:19241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19247:19441   */\n    tag_159:\n        /* \"#utility.yul\":19287:19291   */\n      0x00\n        /* \"#utility.yul\":19307:19327   */\n      tag_427\n        /* \"#utility.yul\":19325:19326   */\n      dup3\n        /* \"#utility.yul\":19307:19327   */\n      tag_224\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":19302:19327   */\n      swap2\n      pop\n        /* \"#utility.yul\":19341:19361   */\n      tag_428\n        /* \"#utility.yul\":19359:19360   */\n      dup4\n        /* \"#utility.yul\":19341:19361   */\n      tag_224\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":19336:19361   */\n      swap3\n      pop\n        /* \"#utility.yul\":19385:19386   */\n      dup3\n        /* \"#utility.yul\":19382:19383   */\n      dup3\n        /* \"#utility.yul\":19378:19387   */\n      sub\n        /* \"#utility.yul\":19370:19387   */\n      swap1\n      pop\n        /* \"#utility.yul\":19409:19410   */\n      dup2\n        /* \"#utility.yul\":19403:19407   */\n      dup2\n        /* \"#utility.yul\":19400:19411   */\n      gt\n        /* \"#utility.yul\":19397:19434   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":19414:19432   */\n      tag_430\n      tag_246\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":19397:19434   */\n    tag_429:\n        /* \"#utility.yul\":19247:19441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19447:19889   */\n    tag_182:\n        /* \"#utility.yul\":19596:19600   */\n      0x00\n        /* \"#utility.yul\":19634:19636   */\n      0x60\n        /* \"#utility.yul\":19623:19632   */\n      dup3\n        /* \"#utility.yul\":19619:19637   */\n      add\n        /* \"#utility.yul\":19611:19637   */\n      swap1\n      pop\n        /* \"#utility.yul\":19647:19718   */\n      tag_432\n        /* \"#utility.yul\":19715:19716   */\n      0x00\n        /* \"#utility.yul\":19704:19713   */\n      dup4\n        /* \"#utility.yul\":19700:19717   */\n      add\n        /* \"#utility.yul\":19691:19697   */\n      dup7\n        /* \"#utility.yul\":19647:19718   */\n      tag_229\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":19728:19800   */\n      tag_433\n        /* \"#utility.yul\":19796:19798   */\n      0x20\n        /* \"#utility.yul\":19785:19794   */\n      dup4\n        /* \"#utility.yul\":19781:19799   */\n      add\n        /* \"#utility.yul\":19772:19778   */\n      dup6\n        /* \"#utility.yul\":19728:19800   */\n      tag_230\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":19810:19882   */\n      tag_434\n        /* \"#utility.yul\":19878:19880   */\n      0x40\n        /* \"#utility.yul\":19867:19876   */\n      dup4\n        /* \"#utility.yul\":19863:19881   */\n      add\n        /* \"#utility.yul\":19854:19860   */\n      dup5\n        /* \"#utility.yul\":19810:19882   */\n      tag_230\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":19447:19889   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19895:20117   */\n    tag_187:\n        /* \"#utility.yul\":19988:19992   */\n      0x00\n        /* \"#utility.yul\":20026:20028   */\n      0x20\n        /* \"#utility.yul\":20015:20024   */\n      dup3\n        /* \"#utility.yul\":20011:20029   */\n      add\n        /* \"#utility.yul\":20003:20029   */\n      swap1\n      pop\n        /* \"#utility.yul\":20039:20110   */\n      tag_436\n        /* \"#utility.yul\":20107:20108   */\n      0x00\n        /* \"#utility.yul\":20096:20105   */\n      dup4\n        /* \"#utility.yul\":20092:20109   */\n      add\n        /* \"#utility.yul\":20083:20089   */\n      dup5\n        /* \"#utility.yul\":20039:20110   */\n      tag_229\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":19895:20117   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f9e69d45e7bae3e5e6b61513fb3531f567366fc3841f4f6a1382a7d9dbbdeea064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 177,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:7",
										"nodeType": "YulBlock",
										"src": "0:5231:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f600555348015610013575f80fd5b506040518060400160405280601281526020017f43726f7764736f757263696e67546f6b656e00000000000000000000000000008152506040518060400160405280600381526020017f4353540000000000000000000000000000000000000000000000000000000000815250816003908161008f91906102e1565b50806004908161009f91906102e1565b5050506103b0565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061012257607f821691505b602082108103610135576101346100de565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261015c565b6101a1868361015c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e56101e06101db846101b9565b6101c2565b6101b9565b9050919050565b5f819050919050565b6101fe836101cb565b61021261020a826101ec565b848454610168565b825550505050565b5f90565b61022661021a565b6102318184846101f5565b505050565b5b81811015610254576102495f8261021e565b600181019050610237565b5050565b601f8211156102995761026a8161013b565b6102738461014d565b81016020851015610282578190505b61029661028e8561014d565b830182610236565b50505b505050565b5f82821c905092915050565b5f6102b95f198460080261029e565b1980831691505092915050565b5f6102d183836102aa565b9150826002028217905092915050565b6102ea826100a7565b67ffffffffffffffff811115610303576103026100b1565b5b61030d825461010b565b610318828285610258565b5f60209050601f831160018114610349575f8415610337578287015190505b61034185826102c6565b8655506103a8565b601f1984166103578661013b565b5f5b8281101561037e57848901518255600182019150602085019450602081019050610359565b8683101561039b5784890151610397601f8916826102aa565b8355505b6001600288020188555050505b505050505050565b611d40806103bd5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063313ce5671161008a57806395d89b411161006457806395d89b4114610274578063a9059cbb14610292578063dd62ed3e146102c2578063fdc3d8d7146102f2576100e8565b8063313ce5671461020a57806351a71b171461022857806370a0823114610244576100e8565b806318160ddd116100c657806318160ddd1461016d5780631d65e77e1461018b57806323b872dd146101be578063257baa3a146101ee576100e8565b806306fdde03146100ec578063095ea7b31461010a5780630b7879aa1461013a575b5f80fd5b6100f4610310565b60405161010191906112f2565b60405180910390f35b610124600480360381019061011f91906113a7565b6103a0565b60405161013191906113ff565b60405180910390f35b610154600480360381019061014f9190611418565b6103c2565b6040516101649493929190611461565b60405180910390f35b610175610419565b60405161018291906114a4565b60405180910390f35b6101a560048036038101906101a09190611418565b610422565b6040516101b594939291906114bd565b60405180910390f35b6101d860048036038101906101d39190611500565b610488565b6040516101e591906113ff565b60405180910390f35b610208600480360381019061020391906115b1565b6104b6565b005b610212610805565b60405161021f919061164a565b60405180910390f35b610242600480360381019061023d9190611418565b61080d565b005b61025e60048036038101906102599190611663565b610b01565b60405161026b91906114a4565b60405180910390f35b61027c610b46565b60405161028991906112f2565b60405180910390f35b6102ac60048036038101906102a791906113a7565b610bd6565b6040516102b991906113ff565b60405180910390f35b6102dc60048036038101906102d7919061168e565b610bf8565b6040516102e991906114a4565b60405180910390f35b6102fa610c7a565b60405161030791906114a4565b60405180910390f35b60606003805461031f906116f9565b80601f016020809104026020016040519081016040528092919081815260200182805461034b906116f9565b80156103965780601f1061036d57610100808354040283529160200191610396565b820191905f5260205f20905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b5f806103aa610c80565b90506103b7818585610c87565b600191505092915050565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b5f600254905090565b5f805f805f60075f8781526020019081526020015f2090508060010154815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020154836003015f9054906101000a900460ff169450945094509450509193509193565b5f80610492610c80565b905061049f858285610c99565b6104aa858585610d2b565b60019150509392505050565b8181905084849050146104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f590611799565b60405180910390fd5b5f8484905011610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611827565b60405180910390fd5b5f805b858590508110156107f3575f86868381811061056557610564611845565b5b90506020020135116105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a3906118bc565b60405180910390fd5b5f8484838181106105c0576105bf611845565b5b9050602002013511610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061194a565b60405180910390fd5b83838281811061061a57610619611845565b5b9050602002013586868381811061063457610633611845565b5b905060200201356106459190611995565b8261065091906119d6565b915060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187878481811061068c5761068b611845565b5b9050602002013581526020018585848181106106ab576106aa611845565b5b9050602002013581526020015f151581525060075f60055481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050506005543373ffffffffffffffffffffffffffffffffffffffff167fffef41c3386c78926fe432f9a2d408f37209532660e385656444e3da578f17d688888581811061079857610797611845565b5b905060200201358787868181106107b2576107b1611845565b5b905060200201356040516107c7929190611a09565b60405180910390a360055f8154809291906107e190611a30565b91905055508080600101915050610546565b506107fe3382610e1b565b5050505050565b5f6012905090565b5f60075f8381526020019081526020015f209050806003015f9054906101000a900460ff1615610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611ae7565b60405180910390fd5b5f8160020154116108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af90611b4f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90611bdd565b60405180910390fd5b60065f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890611c6b565b60405180910390fd5b6001816002015f8282546109f59190611c89565b925050819055505f816002015403610a24576001816003015f6101000a81548160ff0219169083151502179055505b610a55815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338360010154610d2b565b600160065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827f107f668e128e198cf1077b19274c8dd3008737e858e3445d1176cd1d99951beb60405160405180910390a35050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610b55906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b81906116f9565b8015610bcc5780601f10610ba357610100808354040283529160200191610bcc565b820191905f5260205f20905b815481529060010190602001808311610baf57829003601f168201915b5050505050905090565b5f80610be0610c80565b9050610bed818585610d2b565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055481565b5f33905090565b610c948383836001610e9a565b505050565b5f610ca48484610bf8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d255781811015610d16578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d0d93929190611cbc565b60405180910390fd5b610d2484848484035f610e9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d9b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d929190611cf1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e0b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e029190611cf1565b60405180910390fd5b610e16838383611069565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e829190611cf1565b60405180910390fd5b610e965f8383611069565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f019190611cf1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f719190611cf1565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611063578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161105a91906114a4565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110b9578060025f8282546110ad91906119d6565b92505081905550611187565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611142578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161113993929190611cbc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ce578060025f8282540392505081905550611218565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161127591906114a4565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112c482611282565b6112ce818561128c565b93506112de81856020860161129c565b6112e7816112aa565b840191505092915050565b5f6020820190508181035f83015261130a81846112ba565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113438261131a565b9050919050565b61135381611339565b811461135d575f80fd5b50565b5f8135905061136e8161134a565b92915050565b5f819050919050565b61138681611374565b8114611390575f80fd5b50565b5f813590506113a18161137d565b92915050565b5f80604083850312156113bd576113bc611312565b5b5f6113ca85828601611360565b92505060206113db85828601611393565b9150509250929050565b5f8115159050919050565b6113f9816113e5565b82525050565b5f6020820190506114125f8301846113f0565b92915050565b5f6020828403121561142d5761142c611312565b5b5f61143a84828501611393565b91505092915050565b61144c81611339565b82525050565b61145b81611374565b82525050565b5f6080820190506114745f830187611443565b6114816020830186611452565b61148e6040830185611452565b61149b60608301846113f0565b95945050505050565b5f6020820190506114b75f830184611452565b92915050565b5f6080820190506114d05f830187611452565b6114dd6020830186611443565b6114ea6040830185611452565b6114f760608301846113f0565b95945050505050565b5f805f6060848603121561151757611516611312565b5b5f61152486828701611360565b935050602061153586828701611360565b925050604061154686828701611393565b9150509250925092565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261157157611570611550565b5b8235905067ffffffffffffffff81111561158e5761158d611554565b5b6020830191508360208202830111156115aa576115a9611558565b5b9250929050565b5f805f80604085870312156115c9576115c8611312565b5b5f85013567ffffffffffffffff8111156115e6576115e5611316565b5b6115f28782880161155c565b9450945050602085013567ffffffffffffffff81111561161557611614611316565b5b6116218782880161155c565b925092505092959194509250565b5f60ff82169050919050565b6116448161162f565b82525050565b5f60208201905061165d5f83018461163b565b92915050565b5f6020828403121561167857611677611312565b5b5f61168584828501611360565b91505092915050565b5f80604083850312156116a4576116a3611312565b5b5f6116b185828601611360565b92505060206116c285828601611360565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061171057607f821691505b602082108103611723576117226116cc565b5b50919050565b7f546865206c656e677468206f66205461736b7320616e642052657169726564205f8201527f54696d657320646f6e2774206d61746368212121000000000000000000000000602082015250565b5f61178360348361128c565b915061178e82611729565b604082019050919050565b5f6020820190508181035f8301526117b081611777565b9050919050565b7f4174206c656173742068617665206f6e65207461736b20616e642072657169725f8201527f65642074696d6573212121000000000000000000000000000000000000000000602082015250565b5f611811602b8361128c565b915061181c826117b7565b604082019050919050565b5f6020820190508181035f83015261183e81611805565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f526577617264206d75737420626520706f7369747665212121000000000000005f82015250565b5f6118a660198361128c565b91506118b182611872565b602082019050919050565b5f6020820190508181035f8301526118d38161189a565b9050919050565b7f5265717569726564205375626d697373696f6e206d75737420626520706f73745f8201527f6976652121210000000000000000000000000000000000000000000000000000602082015250565b5f61193460268361128c565b915061193f826118da565b604082019050919050565b5f6020820190508181035f83015261196181611928565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61199f82611374565b91506119aa83611374565b92508282026119b881611374565b915082820484148315176119cf576119ce611968565b5b5092915050565b5f6119e082611374565b91506119eb83611374565b9250828201905080821115611a0357611a02611968565b5b92915050565b5f604082019050611a1c5f830185611452565b611a296020830184611452565b9392505050565b5f611a3a82611374565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6c57611a6b611968565b5b600182019050919050565b7f43757272656e74205461736b20686173206265656e20636f6d706c65746564215f8201527f2121000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ad160228361128c565b9150611adc82611a77565b604082019050919050565b5f6020820190508181035f830152611afe81611ac5565b9050919050565b7f4e6f207375626d697373696f6e206973207265717569726564212121000000005f82015250565b5f611b39601c8361128c565b9150611b4482611b05565b602082019050919050565b5f6020820190508181035f830152611b6681611b2d565b9050919050565b7f5461736b20506f7374657220616e64205375626d6974746572206973207468655f8201527f2073616d65212121000000000000000000000000000000000000000000000000602082015250565b5f611bc760288361128c565b9150611bd282611b6d565b604082019050919050565b5f6020820190508181035f830152611bf481611bbb565b9050919050565b7f52657761726420686173206265656e2072656c656173656420666f72207468655f8201527f2063757272656e74207375626d69747465722121210000000000000000000000602082015250565b5f611c5560358361128c565b9150611c6082611bfb565b604082019050919050565b5f6020820190508181035f830152611c8281611c49565b9050919050565b5f611c9382611374565b9150611c9e83611374565b9250828203905081811115611cb657611cb5611968565b5b92915050565b5f606082019050611ccf5f830186611443565b611cdc6020830185611452565b611ce96040830184611452565b949350505050565b5f602082019050611d045f830184611443565b9291505056fea2646970667358221220f9e69d45e7bae3e5e6b61513fb3531f567366fc3841f4f6a1382a7d9dbbdeea064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43726F7764736F757263696E67546F6B656E0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4353540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST POP POP POP PUSH2 0x3B0 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x122 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x135 JUMPI PUSH2 0x134 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x197 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x15C JUMP JUMPDEST PUSH2 0x1A1 DUP7 DUP4 PUSH2 0x15C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E5 PUSH2 0x1E0 PUSH2 0x1DB DUP5 PUSH2 0x1B9 JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE DUP4 PUSH2 0x1CB JUMP JUMPDEST PUSH2 0x212 PUSH2 0x20A DUP3 PUSH2 0x1EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x168 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x21A JUMP JUMPDEST PUSH2 0x231 DUP2 DUP5 DUP5 PUSH2 0x1F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH2 0x249 PUSH0 DUP3 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x237 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x299 JUMPI PUSH2 0x26A DUP2 PUSH2 0x13B JUMP JUMPDEST PUSH2 0x273 DUP5 PUSH2 0x14D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x282 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x296 PUSH2 0x28E DUP6 PUSH2 0x14D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x236 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2B9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x29E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D1 DUP4 DUP4 PUSH2 0x2AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2EA DUP3 PUSH2 0xA7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x303 JUMPI PUSH2 0x302 PUSH2 0xB1 JUMP JUMPDEST JUMPDEST PUSH2 0x30D DUP3 SLOAD PUSH2 0x10B JUMP JUMPDEST PUSH2 0x318 DUP3 DUP3 DUP6 PUSH2 0x258 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x349 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x337 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x341 DUP6 DUP3 PUSH2 0x2C6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x357 DUP7 PUSH2 0x13B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x37E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x359 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x39B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x397 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D40 DUP1 PUSH2 0x3BD PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xFDC3D8D7 EQ PUSH2 0x2F2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x51A71B17 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x244 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x1D65E77E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x257BAA3A EQ PUSH2 0x1EE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xB7879AA EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3AA PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B7 DUP2 DUP6 DUP6 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x492 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0x49F DUP6 DUP3 DUP6 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP GT PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST DUP3 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68B PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFEF41C3386C78926FE432F9A2D408F37209532660E385656444E3DA578F17D6 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x798 JUMPI PUSH2 0x797 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x7B2 JUMPI PUSH2 0x7B1 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7E1 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x546 JUMP JUMPDEST POP PUSH2 0x7FE CALLER DUP3 PUSH2 0xE1B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x869 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA24 JUMPI PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA55 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x107F668E128E198CF1077B19274C8DD3008737E858E3445D1176CD1D99951BEB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB55 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB81 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBE0 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0xBED DUP2 DUP6 DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC94 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA4 DUP5 DUP5 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD25 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD16 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE16 DUP4 DUP4 DUP4 PUSH2 0x1069 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE96 PUSH0 DUP4 DUP4 PUSH2 0x1069 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1063 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1187 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1142 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1139 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11CE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1218 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 DUP3 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x12CE DUP2 DUP6 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH2 0x12DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x129C JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x130A DUP2 DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1343 DUP3 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1353 DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP2 EQ PUSH2 0x135D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136E DUP2 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1374 JUMP JUMPDEST DUP2 EQ PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A1 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BD JUMPI PUSH2 0x13BC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CA DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13DB DUP6 DUP3 DUP7 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1412 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142D JUMPI PUSH2 0x142C PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143A DUP5 DUP3 DUP6 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1374 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH0 DUP4 ADD DUP8 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1481 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x148E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x14EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1524 DUP7 DUP3 DUP8 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1535 DUP7 DUP3 DUP8 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1546 DUP7 DUP3 DUP8 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1554 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15A9 PUSH2 0x1558 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15C9 JUMPI PUSH2 0x15C8 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH2 0x15F2 DUP8 DUP3 DUP9 ADD PUSH2 0x155C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH2 0x1621 DUP8 DUP3 DUP9 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH0 DUP4 ADD DUP5 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH2 0x1677 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1685 DUP5 DUP3 DUP6 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1710 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1723 JUMPI PUSH2 0x1722 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865206C656E677468206F66205461736B7320616E64205265716972656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x54696D657320646F6E2774206D61746368212121000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1783 PUSH1 0x34 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x178E DUP3 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B0 DUP2 PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4174206C656173742068617665206F6E65207461736B20616E64207265716972 PUSH0 DUP3 ADD MSTORE PUSH32 0x65642074696D6573212121000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH1 0x2B DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x526577617264206D75737420626520706F736974766521212100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 PUSH1 0x19 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x18B1 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D3 DUP2 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717569726564205375626D697373696F6E206D75737420626520706F7374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6976652121210000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1934 PUSH1 0x26 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x193F DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1961 DUP2 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x199F DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19B8 DUP2 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x1968 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19E0 DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EB DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A1C PUSH0 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1A29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1968 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E74205461736B20686173206265656E20636F6D706C6574656421 PUSH0 DUP3 ADD MSTORE PUSH32 0x2121000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD1 PUSH1 0x22 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADC DUP3 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFE DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207375626D697373696F6E20697320726571756972656421212100000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B39 PUSH1 0x1C DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B44 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B66 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461736B20506F7374657220616E64205375626D697474657220697320746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x2073616D65212121000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 PUSH1 0x28 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420686173206265656E2072656C656173656420666F7220746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74207375626D69747465722121210000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C55 PUSH1 0x35 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C60 DUP3 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CB6 JUMPI PUSH2 0x1CB5 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CCF PUSH0 DUP4 ADD DUP7 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1CDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1CE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D04 PUSH0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE6 SWAP14 GASLIMIT 0xE7 0xBA 0xE3 0xE5 0xE6 0xB6 ISZERO SGT 0xFB CALLDATALOAD BALANCE CREATE2 PUSH8 0x366FC3841F4F6A13 DUP3 0xA7 0xD9 0xDB 0xBD 0xEE LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "173:3972:6:-:0;;;852:1;824:29;;979:50;;;;;;;;;;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;173:3972:6;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;173:3972:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TasksList_988": {
									"entryPoint": 962,
									"id": 988,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_690": {
									"entryPoint": 3207,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3738,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 3611,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3200,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3225,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3371,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4201,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addTasks_1106": {
									"entryPoint": 1206,
									"id": 1106,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 3064,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 928,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2817,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 2053,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTask_1228": {
									"entryPoint": 1058,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@name_345": {
									"entryPoint": 784,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextTaskId_977": {
									"entryPoint": 3194,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@redeemReward_1196": {
									"entryPoint": 2061,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2886,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1049,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1160,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 3030,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7356,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5309,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5836,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 5464,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368": {
									"entryPoint": 6071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1": {
									"entryPoint": 6258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f": {
									"entryPoint": 5929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d": {
									"entryPoint": 6917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b": {
									"entryPoint": 6775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20120:7",
										"nodeType": "YulBlock",
										"src": "0:20120:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3405:263:7",
													"nodeType": "YulBlock",
													"src": "3405:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3451:83:7",
																"nodeType": "YulBlock",
																"src": "3451:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3453:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3453:77:7"
																			},
																			"nativeSrc": "3453:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3453:79:7"
																		},
																		"nativeSrc": "3453:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3453:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3426:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:7"
																		},
																		"nativeSrc": "3422:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3447:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3418:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:7"
																},
																"nativeSrc": "3418:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3418:32:7"
															},
															"nativeSrc": "3415:119:7",
															"nodeType": "YulIf",
															"src": "3415:119:7"
														},
														{
															"nativeSrc": "3544:117:7",
															"nodeType": "YulBlock",
															"src": "3544:117:7",
															"statements": [
																{
																	"nativeSrc": "3559:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3559:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3573:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3573:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3563:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3563:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3588:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3588:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:7"
																				},
																				"nativeSrc": "3619:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3598:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3598:20:7"
																		},
																		"nativeSrc": "3598:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3598:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3588:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3588:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3339:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3375:9:7",
														"nodeType": "YulTypedName",
														"src": "3375:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3386:7:7",
														"nodeType": "YulTypedName",
														"src": "3386:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3398:6:7",
														"nodeType": "YulTypedName",
														"src": "3398:6:7",
														"type": ""
													}
												],
												"src": "3339:329:7"
											},
											{
												"body": {
													"nativeSrc": "3739:53:7",
													"nodeType": "YulBlock",
													"src": "3739:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3756:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3756:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3779:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3779:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3761:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3761:17:7"
																		},
																		"nativeSrc": "3761:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3749:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:7"
																},
																"nativeSrc": "3749:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3749:37:7"
															},
															"nativeSrc": "3749:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3749:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3674:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3727:5:7",
														"nodeType": "YulTypedName",
														"src": "3727:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3734:3:7",
														"nodeType": "YulTypedName",
														"src": "3734:3:7",
														"type": ""
													}
												],
												"src": "3674:118:7"
											},
											{
												"body": {
													"nativeSrc": "3863:53:7",
													"nodeType": "YulBlock",
													"src": "3863:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3880:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3880:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3903:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3903:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3885:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3885:17:7"
																		},
																		"nativeSrc": "3885:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3885:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3873:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:7"
																},
																"nativeSrc": "3873:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3873:37:7"
															},
															"nativeSrc": "3873:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3873:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3798:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3851:5:7",
														"nodeType": "YulTypedName",
														"src": "3851:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3858:3:7",
														"nodeType": "YulTypedName",
														"src": "3858:3:7",
														"type": ""
													}
												],
												"src": "3798:118:7"
											},
											{
												"body": {
													"nativeSrc": "4098:365:7",
													"nodeType": "YulBlock",
													"src": "4098:365:7",
													"statements": [
														{
															"nativeSrc": "4108:27:7",
															"nodeType": "YulAssignment",
															"src": "4108:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4120:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4120:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4131:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4131:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4116:3:7"
																},
																"nativeSrc": "4116:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4116:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4108:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4108:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4189:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4189:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4202:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4202:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4213:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4213:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4198:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:7"
																		},
																		"nativeSrc": "4198:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4198:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4145:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4145:43:7"
																},
																"nativeSrc": "4145:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4145:71:7"
															},
															"nativeSrc": "4145:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4145:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4270:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4270:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4283:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4294:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4294:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:7"
																		},
																		"nativeSrc": "4279:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4226:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4226:43:7"
																},
																"nativeSrc": "4226:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4226:72:7"
															},
															"nativeSrc": "4226:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4226:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4352:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4352:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4365:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4365:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4376:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4376:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4361:3:7"
																		},
																		"nativeSrc": "4361:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4361:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4308:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:43:7"
																},
																"nativeSrc": "4308:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4308:72:7"
															},
															"nativeSrc": "4308:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4308:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4428:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4428:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4441:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4441:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4452:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4452:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:3:7"
																		},
																		"nativeSrc": "4437:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4437:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4390:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "4390:37:7"
																},
																"nativeSrc": "4390:66:7",
																"nodeType": "YulFunctionCall",
																"src": "4390:66:7"
															},
															"nativeSrc": "4390:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "4390:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "3922:541:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4046:9:7",
														"nodeType": "YulTypedName",
														"src": "4046:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4058:6:7",
														"nodeType": "YulTypedName",
														"src": "4058:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4066:6:7",
														"nodeType": "YulTypedName",
														"src": "4066:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4074:6:7",
														"nodeType": "YulTypedName",
														"src": "4074:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4082:6:7",
														"nodeType": "YulTypedName",
														"src": "4082:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4093:4:7",
														"nodeType": "YulTypedName",
														"src": "4093:4:7",
														"type": ""
													}
												],
												"src": "3922:541:7"
											},
											{
												"body": {
													"nativeSrc": "4567:124:7",
													"nodeType": "YulBlock",
													"src": "4567:124:7",
													"statements": [
														{
															"nativeSrc": "4577:26:7",
															"nodeType": "YulAssignment",
															"src": "4577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4585:3:7"
																},
																"nativeSrc": "4585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4657:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4657:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4670:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4670:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4681:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4681:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4666:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:7"
																		},
																		"nativeSrc": "4666:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4666:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4613:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4613:43:7"
																},
																"nativeSrc": "4613:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4613:71:7"
															},
															"nativeSrc": "4613:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4613:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4469:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4539:9:7",
														"nodeType": "YulTypedName",
														"src": "4539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4551:6:7",
														"nodeType": "YulTypedName",
														"src": "4551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4562:4:7",
														"nodeType": "YulTypedName",
														"src": "4562:4:7",
														"type": ""
													}
												],
												"src": "4469:222:7"
											},
											{
												"body": {
													"nativeSrc": "4873:365:7",
													"nodeType": "YulBlock",
													"src": "4873:365:7",
													"statements": [
														{
															"nativeSrc": "4883:27:7",
															"nodeType": "YulAssignment",
															"src": "4883:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4895:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4895:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4906:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4906:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4891:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4891:3:7"
																},
																"nativeSrc": "4891:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4891:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4883:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4883:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4964:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4977:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4977:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4988:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4988:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4973:3:7"
																		},
																		"nativeSrc": "4973:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4973:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4920:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4920:43:7"
																},
																"nativeSrc": "4920:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4920:71:7"
															},
															"nativeSrc": "4920:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4920:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5045:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5045:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5058:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5058:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5069:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5069:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5054:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5054:3:7"
																		},
																		"nativeSrc": "5054:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5001:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5001:43:7"
																},
																"nativeSrc": "5001:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5001:72:7"
															},
															"nativeSrc": "5001:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5001:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5127:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5127:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5140:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5140:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5151:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5151:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5136:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5136:3:7"
																		},
																		"nativeSrc": "5136:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5136:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5083:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5083:43:7"
																},
																"nativeSrc": "5083:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5083:72:7"
															},
															"nativeSrc": "5083:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5083:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5203:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5203:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5216:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5216:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5227:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5227:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5212:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5212:3:7"
																		},
																		"nativeSrc": "5212:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5212:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5165:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "5165:37:7"
																},
																"nativeSrc": "5165:66:7",
																"nodeType": "YulFunctionCall",
																"src": "5165:66:7"
															},
															"nativeSrc": "5165:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "5165:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4697:541:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4821:9:7",
														"nodeType": "YulTypedName",
														"src": "4821:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4833:6:7",
														"nodeType": "YulTypedName",
														"src": "4833:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4841:6:7",
														"nodeType": "YulTypedName",
														"src": "4841:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4849:6:7",
														"nodeType": "YulTypedName",
														"src": "4849:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4857:6:7",
														"nodeType": "YulTypedName",
														"src": "4857:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4868:4:7",
														"nodeType": "YulTypedName",
														"src": "4868:4:7",
														"type": ""
													}
												],
												"src": "4697:541:7"
											},
											{
												"body": {
													"nativeSrc": "5344:519:7",
													"nodeType": "YulBlock",
													"src": "5344:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5390:83:7",
																"nodeType": "YulBlock",
																"src": "5390:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5392:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5392:77:7"
																			},
																			"nativeSrc": "5392:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5392:79:7"
																		},
																		"nativeSrc": "5392:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5392:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5365:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5365:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5361:3:7"
																		},
																		"nativeSrc": "5361:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5361:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5386:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5386:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5357:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5357:3:7"
																},
																"nativeSrc": "5357:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5357:32:7"
															},
															"nativeSrc": "5354:119:7",
															"nodeType": "YulIf",
															"src": "5354:119:7"
														},
														{
															"nativeSrc": "5483:117:7",
															"nodeType": "YulBlock",
															"src": "5483:117:7",
															"statements": [
																{
																	"nativeSrc": "5498:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5498:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5512:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5512:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5502:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5502:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5527:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5527:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5562:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5562:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5573:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5573:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5558:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5558:3:7"
																				},
																				"nativeSrc": "5558:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5558:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5582:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5582:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5537:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5537:20:7"
																		},
																		"nativeSrc": "5537:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5537:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5527:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5527:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5610:118:7",
															"nodeType": "YulBlock",
															"src": "5610:118:7",
															"statements": [
																{
																	"nativeSrc": "5625:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5625:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5639:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5639:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5629:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5629:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5655:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5655:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5690:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5690:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5701:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5701:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5686:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5686:3:7"
																				},
																				"nativeSrc": "5686:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5686:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5710:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5665:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5665:20:7"
																		},
																		"nativeSrc": "5665:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5655:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5655:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5738:118:7",
															"nodeType": "YulBlock",
															"src": "5738:118:7",
															"statements": [
																{
																	"nativeSrc": "5753:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5753:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5767:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5767:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5757:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5757:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5783:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5783:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5818:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5818:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5829:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5829:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5814:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5814:3:7"
																				},
																				"nativeSrc": "5814:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5838:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5838:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5793:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5793:20:7"
																		},
																		"nativeSrc": "5793:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5793:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5783:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5783:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5244:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5298:9:7",
														"nodeType": "YulTypedName",
														"src": "5298:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5309:7:7",
														"nodeType": "YulTypedName",
														"src": "5309:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5321:6:7",
														"nodeType": "YulTypedName",
														"src": "5321:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5329:6:7",
														"nodeType": "YulTypedName",
														"src": "5329:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5337:6:7",
														"nodeType": "YulTypedName",
														"src": "5337:6:7",
														"type": ""
													}
												],
												"src": "5244:619:7"
											},
											{
												"body": {
													"nativeSrc": "5958:28:7",
													"nodeType": "YulBlock",
													"src": "5958:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5975:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5975:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5978:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5978:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5968:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5968:6:7"
																},
																"nativeSrc": "5968:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5968:12:7"
															},
															"nativeSrc": "5968:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5968:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5869:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5869:117:7"
											},
											{
												"body": {
													"nativeSrc": "6081:28:7",
													"nodeType": "YulBlock",
													"src": "6081:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6098:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6098:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6101:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6091:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6091:6:7"
																},
																"nativeSrc": "6091:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6091:12:7"
															},
															"nativeSrc": "6091:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "6091:12:7"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5992:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5992:117:7"
											},
											{
												"body": {
													"nativeSrc": "6204:28:7",
													"nodeType": "YulBlock",
													"src": "6204:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6221:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6221:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6224:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6224:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6214:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:7"
																},
																"nativeSrc": "6214:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6214:12:7"
															},
															"nativeSrc": "6214:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "6214:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "6115:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6115:117:7"
											},
											{
												"body": {
													"nativeSrc": "6345:478:7",
													"nodeType": "YulBlock",
													"src": "6345:478:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6394:83:7",
																"nodeType": "YulBlock",
																"src": "6394:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6396:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6396:77:7"
																			},
																			"nativeSrc": "6396:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6396:79:7"
																		},
																		"nativeSrc": "6396:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6396:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6373:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6373:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6381:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6381:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6369:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6369:3:7"
																				},
																				"nativeSrc": "6369:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6369:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6388:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6388:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:7"
																		},
																		"nativeSrc": "6365:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6365:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6358:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6358:6:7"
																},
																"nativeSrc": "6358:35:7",
																"nodeType": "YulFunctionCall",
																"src": "6358:35:7"
															},
															"nativeSrc": "6355:122:7",
															"nodeType": "YulIf",
															"src": "6355:122:7"
														},
														{
															"nativeSrc": "6486:30:7",
															"nodeType": "YulAssignment",
															"src": "6486:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6509:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6509:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6496:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6496:12:7"
																},
																"nativeSrc": "6496:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6496:20:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6486:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6486:6:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6559:83:7",
																"nodeType": "YulBlock",
																"src": "6559:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "6561:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6561:77:7"
																			},
																			"nativeSrc": "6561:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6561:79:7"
																		},
																		"nativeSrc": "6561:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6561:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6531:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6531:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6539:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6539:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6528:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6528:2:7"
																},
																"nativeSrc": "6528:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6528:30:7"
															},
															"nativeSrc": "6525:117:7",
															"nodeType": "YulIf",
															"src": "6525:117:7"
														},
														{
															"nativeSrc": "6651:29:7",
															"nodeType": "YulAssignment",
															"src": "6651:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6667:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6667:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6675:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6675:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6663:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6663:3:7"
																},
																"nativeSrc": "6663:17:7",
																"nodeType": "YulFunctionCall",
																"src": "6663:17:7"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "6651:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "6651:8:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6734:83:7",
																"nodeType": "YulBlock",
																"src": "6734:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "6736:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6736:77:7"
																			},
																			"nativeSrc": "6736:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6736:79:7"
																		},
																		"nativeSrc": "6736:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6736:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "6699:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6699:8:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "6713:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6713:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6721:4:7",
																						"nodeType": "YulLiteral",
																						"src": "6721:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6709:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6709:3:7"
																				},
																				"nativeSrc": "6709:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6709:17:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6695:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:7"
																		},
																		"nativeSrc": "6695:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6695:32:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6729:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6729:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6692:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6692:2:7"
																},
																"nativeSrc": "6692:41:7",
																"nodeType": "YulFunctionCall",
																"src": "6692:41:7"
															},
															"nativeSrc": "6689:128:7",
															"nodeType": "YulIf",
															"src": "6689:128:7"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6255:568:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6312:6:7",
														"nodeType": "YulTypedName",
														"src": "6312:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6320:3:7",
														"nodeType": "YulTypedName",
														"src": "6320:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "6328:8:7",
														"nodeType": "YulTypedName",
														"src": "6328:8:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6338:6:7",
														"nodeType": "YulTypedName",
														"src": "6338:6:7",
														"type": ""
													}
												],
												"src": "6255:568:7"
											},
											{
												"body": {
													"nativeSrc": "6982:781:7",
													"nodeType": "YulBlock",
													"src": "6982:781:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7028:83:7",
																"nodeType": "YulBlock",
																"src": "7028:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7030:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7030:77:7"
																			},
																			"nativeSrc": "7030:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7030:79:7"
																		},
																		"nativeSrc": "7030:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7030:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7003:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7003:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7012:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6999:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6999:3:7"
																		},
																		"nativeSrc": "6999:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6999:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7024:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7024:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6995:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:7"
																},
																"nativeSrc": "6995:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6995:32:7"
															},
															"nativeSrc": "6992:119:7",
															"nodeType": "YulIf",
															"src": "6992:119:7"
														},
														{
															"nativeSrc": "7121:312:7",
															"nodeType": "YulBlock",
															"src": "7121:312:7",
															"statements": [
																{
																	"nativeSrc": "7136:45:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7136:45:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7167:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7167:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7178:1:7",
																						"nodeType": "YulLiteral",
																						"src": "7178:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7163:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7163:3:7"
																				},
																				"nativeSrc": "7163:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7163:17:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7150:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "7150:12:7"
																		},
																		"nativeSrc": "7150:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7150:31:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7140:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7140:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7228:83:7",
																		"nodeType": "YulBlock",
																		"src": "7228:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7230:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7230:77:7"
																					},
																					"nativeSrc": "7230:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7230:79:7"
																				},
																				"nativeSrc": "7230:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7230:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7200:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7200:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7208:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7208:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7197:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7197:2:7"
																		},
																		"nativeSrc": "7197:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7197:30:7"
																	},
																	"nativeSrc": "7194:117:7",
																	"nodeType": "YulIf",
																	"src": "7194:117:7"
																},
																{
																	"nativeSrc": "7325:98:7",
																	"nodeType": "YulAssignment",
																	"src": "7325:98:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7395:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7395:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7406:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7406:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7391:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7391:3:7"
																				},
																				"nativeSrc": "7391:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7391:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7415:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7415:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "7343:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "7343:47:7"
																		},
																		"nativeSrc": "7343:80:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7343:80:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7325:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7325:6:7"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "7333:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7333:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7443:313:7",
															"nodeType": "YulBlock",
															"src": "7443:313:7",
															"statements": [
																{
																	"nativeSrc": "7458:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7458:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7489:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7500:2:7",
																						"nodeType": "YulLiteral",
																						"src": "7500:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7485:3:7"
																				},
																				"nativeSrc": "7485:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7485:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7472:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "7472:12:7"
																		},
																		"nativeSrc": "7472:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7472:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7462:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7462:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7551:83:7",
																		"nodeType": "YulBlock",
																		"src": "7551:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7553:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "7553:77:7"
																					},
																					"nativeSrc": "7553:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7553:79:7"
																				},
																				"nativeSrc": "7553:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7553:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7523:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7523:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7531:18:7",
																				"nodeType": "YulLiteral",
																				"src": "7531:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7520:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7520:2:7"
																		},
																		"nativeSrc": "7520:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7520:30:7"
																	},
																	"nativeSrc": "7517:117:7",
																	"nodeType": "YulIf",
																	"src": "7517:117:7"
																},
																{
																	"nativeSrc": "7648:98:7",
																	"nodeType": "YulAssignment",
																	"src": "7648:98:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7718:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7718:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7729:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7729:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7714:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7714:3:7"
																				},
																				"nativeSrc": "7714:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7714:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7738:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7738:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nativeSrc": "7666:47:7",
																			"nodeType": "YulIdentifier",
																			"src": "7666:47:7"
																		},
																		"nativeSrc": "7666:80:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7666:80:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7648:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7648:6:7"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "7656:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7656:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6829:934:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6928:9:7",
														"nodeType": "YulTypedName",
														"src": "6928:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6939:7:7",
														"nodeType": "YulTypedName",
														"src": "6939:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6951:6:7",
														"nodeType": "YulTypedName",
														"src": "6951:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6959:6:7",
														"nodeType": "YulTypedName",
														"src": "6959:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6967:6:7",
														"nodeType": "YulTypedName",
														"src": "6967:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6975:6:7",
														"nodeType": "YulTypedName",
														"src": "6975:6:7",
														"type": ""
													}
												],
												"src": "6829:934:7"
											},
											{
												"body": {
													"nativeSrc": "7812:43:7",
													"nodeType": "YulBlock",
													"src": "7812:43:7",
													"statements": [
														{
															"nativeSrc": "7822:27:7",
															"nodeType": "YulAssignment",
															"src": "7822:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7837:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7837:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7844:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7844:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7833:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7833:3:7"
																},
																"nativeSrc": "7833:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7833:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7822:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "7822:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7769:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7794:5:7",
														"nodeType": "YulTypedName",
														"src": "7794:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7804:7:7",
														"nodeType": "YulTypedName",
														"src": "7804:7:7",
														"type": ""
													}
												],
												"src": "7769:86:7"
											},
											{
												"body": {
													"nativeSrc": "7922:51:7",
													"nodeType": "YulBlock",
													"src": "7922:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7939:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7939:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7960:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7960:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7944:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "7944:15:7"
																		},
																		"nativeSrc": "7944:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7932:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7932:6:7"
																},
																"nativeSrc": "7932:35:7",
																"nodeType": "YulFunctionCall",
																"src": "7932:35:7"
															},
															"nativeSrc": "7932:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "7932:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7861:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7910:5:7",
														"nodeType": "YulTypedName",
														"src": "7910:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7917:3:7",
														"nodeType": "YulTypedName",
														"src": "7917:3:7",
														"type": ""
													}
												],
												"src": "7861:112:7"
											},
											{
												"body": {
													"nativeSrc": "8073:120:7",
													"nodeType": "YulBlock",
													"src": "8073:120:7",
													"statements": [
														{
															"nativeSrc": "8083:26:7",
															"nodeType": "YulAssignment",
															"src": "8083:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8095:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8095:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8106:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8106:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8091:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8091:3:7"
																},
																"nativeSrc": "8091:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8091:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8083:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8083:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8159:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8159:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8183:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8183:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8168:3:7"
																		},
																		"nativeSrc": "8168:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8168:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "8119:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "8119:39:7"
																},
																"nativeSrc": "8119:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8119:67:7"
															},
															"nativeSrc": "8119:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "8119:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7979:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8045:9:7",
														"nodeType": "YulTypedName",
														"src": "8045:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8057:6:7",
														"nodeType": "YulTypedName",
														"src": "8057:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8068:4:7",
														"nodeType": "YulTypedName",
														"src": "8068:4:7",
														"type": ""
													}
												],
												"src": "7979:214:7"
											},
											{
												"body": {
													"nativeSrc": "8265:263:7",
													"nodeType": "YulBlock",
													"src": "8265:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8311:83:7",
																"nodeType": "YulBlock",
																"src": "8311:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8313:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8313:77:7"
																			},
																			"nativeSrc": "8313:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:79:7"
																		},
																		"nativeSrc": "8313:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8286:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8286:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8295:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8295:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8282:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8282:3:7"
																		},
																		"nativeSrc": "8282:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8282:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8307:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8307:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8278:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:7"
																},
																"nativeSrc": "8278:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8278:32:7"
															},
															"nativeSrc": "8275:119:7",
															"nodeType": "YulIf",
															"src": "8275:119:7"
														},
														{
															"nativeSrc": "8404:117:7",
															"nodeType": "YulBlock",
															"src": "8404:117:7",
															"statements": [
																{
																	"nativeSrc": "8419:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8419:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8433:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8433:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8423:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8423:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8448:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8448:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8483:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8483:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8494:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8494:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8479:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8479:3:7"
																				},
																				"nativeSrc": "8479:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8479:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8503:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8503:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8458:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8458:20:7"
																		},
																		"nativeSrc": "8458:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8458:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8448:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8448:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "8199:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8235:9:7",
														"nodeType": "YulTypedName",
														"src": "8235:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8246:7:7",
														"nodeType": "YulTypedName",
														"src": "8246:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8258:6:7",
														"nodeType": "YulTypedName",
														"src": "8258:6:7",
														"type": ""
													}
												],
												"src": "8199:329:7"
											},
											{
												"body": {
													"nativeSrc": "8617:391:7",
													"nodeType": "YulBlock",
													"src": "8617:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8663:83:7",
																"nodeType": "YulBlock",
																"src": "8663:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8665:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8665:77:7"
																			},
																			"nativeSrc": "8665:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8665:79:7"
																		},
																		"nativeSrc": "8665:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8665:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8638:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8638:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8634:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:7"
																		},
																		"nativeSrc": "8634:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8634:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8659:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8659:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:7"
																},
																"nativeSrc": "8630:32:7",
																"nodeType": "YulFunctionCall",
																"src": "8630:32:7"
															},
															"nativeSrc": "8627:119:7",
															"nodeType": "YulIf",
															"src": "8627:119:7"
														},
														{
															"nativeSrc": "8756:117:7",
															"nodeType": "YulBlock",
															"src": "8756:117:7",
															"statements": [
																{
																	"nativeSrc": "8771:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8771:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8785:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8785:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8775:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8775:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8800:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8800:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8835:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8835:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8846:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8846:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8831:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8831:3:7"
																				},
																				"nativeSrc": "8831:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8831:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8855:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8855:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8810:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8810:20:7"
																		},
																		"nativeSrc": "8810:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8810:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8800:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8800:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8883:118:7",
															"nodeType": "YulBlock",
															"src": "8883:118:7",
															"statements": [
																{
																	"nativeSrc": "8898:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8898:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8912:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8902:6:7",
																			"nodeType": "YulTypedName",
																			"src": "8902:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8928:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8928:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8963:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8963:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8974:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8974:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8959:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8959:3:7"
																				},
																				"nativeSrc": "8959:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8959:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8983:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8983:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8938:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8938:20:7"
																		},
																		"nativeSrc": "8938:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8938:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8928:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8928:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8534:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8579:9:7",
														"nodeType": "YulTypedName",
														"src": "8579:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8590:7:7",
														"nodeType": "YulTypedName",
														"src": "8590:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8602:6:7",
														"nodeType": "YulTypedName",
														"src": "8602:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8610:6:7",
														"nodeType": "YulTypedName",
														"src": "8610:6:7",
														"type": ""
													}
												],
												"src": "8534:474:7"
											},
											{
												"body": {
													"nativeSrc": "9042:152:7",
													"nodeType": "YulBlock",
													"src": "9042:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9059:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9059:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9062:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9062:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9052:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9052:6:7"
																},
																"nativeSrc": "9052:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9052:88:7"
															},
															"nativeSrc": "9052:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9052:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9156:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9156:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9159:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9159:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:7"
																},
																"nativeSrc": "9149:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9149:15:7"
															},
															"nativeSrc": "9149:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9149:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9180:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9183:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9183:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9173:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9173:6:7"
																},
																"nativeSrc": "9173:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9173:15:7"
															},
															"nativeSrc": "9173:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9173:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9014:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9014:180:7"
											},
											{
												"body": {
													"nativeSrc": "9251:269:7",
													"nodeType": "YulBlock",
													"src": "9251:269:7",
													"statements": [
														{
															"nativeSrc": "9261:22:7",
															"nodeType": "YulAssignment",
															"src": "9261:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9275:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9275:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9281:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9281:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9271:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9271:3:7"
																},
																"nativeSrc": "9271:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9271:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9261:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:7"
																}
															]
														},
														{
															"nativeSrc": "9292:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9292:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9322:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9322:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9328:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9328:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9318:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9318:3:7"
																},
																"nativeSrc": "9318:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9318:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9296:18:7",
																	"nodeType": "YulTypedName",
																	"src": "9296:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9369:51:7",
																"nodeType": "YulBlock",
																"src": "9369:51:7",
																"statements": [
																	{
																		"nativeSrc": "9383:27:7",
																		"nodeType": "YulAssignment",
																		"src": "9383:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9397:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9397:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9405:4:7",
																					"nodeType": "YulLiteral",
																					"src": "9405:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9393:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9393:3:7"
																			},
																			"nativeSrc": "9393:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9393:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9383:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9383:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9349:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9349:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:7"
																},
																"nativeSrc": "9342:26:7",
																"nodeType": "YulFunctionCall",
																"src": "9342:26:7"
															},
															"nativeSrc": "9339:81:7",
															"nodeType": "YulIf",
															"src": "9339:81:7"
														},
														{
															"body": {
																"nativeSrc": "9472:42:7",
																"nodeType": "YulBlock",
																"src": "9472:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9486:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9486:16:7"
																			},
																			"nativeSrc": "9486:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9486:18:7"
																		},
																		"nativeSrc": "9486:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9486:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9436:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "9436:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9459:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9459:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9467:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9467:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9456:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9456:2:7"
																		},
																		"nativeSrc": "9456:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9456:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9433:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9433:2:7"
																},
																"nativeSrc": "9433:38:7",
																"nodeType": "YulFunctionCall",
																"src": "9433:38:7"
															},
															"nativeSrc": "9430:84:7",
															"nodeType": "YulIf",
															"src": "9430:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9200:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9235:4:7",
														"nodeType": "YulTypedName",
														"src": "9235:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9244:6:7",
														"nodeType": "YulTypedName",
														"src": "9244:6:7",
														"type": ""
													}
												],
												"src": "9200:320:7"
											},
											{
												"body": {
													"nativeSrc": "9632:133:7",
													"nodeType": "YulBlock",
													"src": "9632:133:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9654:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9654:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9662:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9662:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9650:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9650:3:7"
																		},
																		"nativeSrc": "9650:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9650:14:7"
																	},
																	{
																		"hexValue": "546865206c656e677468206f66205461736b7320616e64205265716972656420",
																		"kind": "string",
																		"nativeSrc": "9666:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9666:34:7",
																		"type": "",
																		"value": "The length of Tasks and Reqired "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9643:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9643:6:7"
																},
																"nativeSrc": "9643:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9643:58:7"
															},
															"nativeSrc": "9643:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9643:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9722:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9722:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9730:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9730:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9718:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9718:3:7"
																		},
																		"nativeSrc": "9718:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9718:15:7"
																	},
																	{
																		"hexValue": "54696d657320646f6e2774206d61746368212121",
																		"kind": "string",
																		"nativeSrc": "9735:22:7",
																		"nodeType": "YulLiteral",
																		"src": "9735:22:7",
																		"type": "",
																		"value": "Times don't match!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9711:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9711:6:7"
																},
																"nativeSrc": "9711:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9711:47:7"
															},
															"nativeSrc": "9711:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9711:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f",
												"nativeSrc": "9526:239:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9624:6:7",
														"nodeType": "YulTypedName",
														"src": "9624:6:7",
														"type": ""
													}
												],
												"src": "9526:239:7"
											},
											{
												"body": {
													"nativeSrc": "9917:220:7",
													"nodeType": "YulBlock",
													"src": "9917:220:7",
													"statements": [
														{
															"nativeSrc": "9927:74:7",
															"nodeType": "YulAssignment",
															"src": "9927:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9993:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9993:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9998:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9998:2:7",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9934:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9934:58:7"
																},
																"nativeSrc": "9934:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9934:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9927:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10099:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10099:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f",
																	"nativeSrc": "10010:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10010:88:7"
																},
																"nativeSrc": "10010:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10010:93:7"
															},
															"nativeSrc": "10010:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10010:93:7"
														},
														{
															"nativeSrc": "10112:19:7",
															"nodeType": "YulAssignment",
															"src": "10112:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10123:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10123:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10128:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10128:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10119:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10119:3:7"
																},
																"nativeSrc": "10119:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10119:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10112:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9771:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9905:3:7",
														"nodeType": "YulTypedName",
														"src": "9905:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9913:3:7",
														"nodeType": "YulTypedName",
														"src": "9913:3:7",
														"type": ""
													}
												],
												"src": "9771:366:7"
											},
											{
												"body": {
													"nativeSrc": "10314:248:7",
													"nodeType": "YulBlock",
													"src": "10314:248:7",
													"statements": [
														{
															"nativeSrc": "10324:26:7",
															"nodeType": "YulAssignment",
															"src": "10324:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10336:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10336:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10347:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10347:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10332:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10332:3:7"
																},
																"nativeSrc": "10332:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10332:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10324:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10324:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10371:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10371:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10382:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10382:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10367:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10367:3:7"
																		},
																		"nativeSrc": "10367:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10367:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10390:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10390:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10396:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10396:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10386:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10386:3:7"
																		},
																		"nativeSrc": "10386:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10386:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10360:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10360:6:7"
																},
																"nativeSrc": "10360:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10360:47:7"
															},
															"nativeSrc": "10360:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10360:47:7"
														},
														{
															"nativeSrc": "10416:139:7",
															"nodeType": "YulAssignment",
															"src": "10416:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10550:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10550:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10424:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10424:124:7"
																},
																"nativeSrc": "10424:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10424:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10416:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10416:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10143:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10294:9:7",
														"nodeType": "YulTypedName",
														"src": "10294:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10309:4:7",
														"nodeType": "YulTypedName",
														"src": "10309:4:7",
														"type": ""
													}
												],
												"src": "10143:419:7"
											},
											{
												"body": {
													"nativeSrc": "10674:124:7",
													"nodeType": "YulBlock",
													"src": "10674:124:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10696:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10696:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10704:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10704:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10692:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10692:3:7"
																		},
																		"nativeSrc": "10692:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10692:14:7"
																	},
																	{
																		"hexValue": "4174206c656173742068617665206f6e65207461736b20616e64207265716972",
																		"kind": "string",
																		"nativeSrc": "10708:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10708:34:7",
																		"type": "",
																		"value": "At least have one task and reqir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10685:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10685:6:7"
																},
																"nativeSrc": "10685:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10685:58:7"
															},
															"nativeSrc": "10685:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10685:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10764:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10764:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10772:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10772:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10760:3:7"
																		},
																		"nativeSrc": "10760:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10760:15:7"
																	},
																	{
																		"hexValue": "65642074696d6573212121",
																		"kind": "string",
																		"nativeSrc": "10777:13:7",
																		"nodeType": "YulLiteral",
																		"src": "10777:13:7",
																		"type": "",
																		"value": "ed times!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10753:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10753:6:7"
																},
																"nativeSrc": "10753:38:7",
																"nodeType": "YulFunctionCall",
																"src": "10753:38:7"
															},
															"nativeSrc": "10753:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "10753:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368",
												"nativeSrc": "10568:230:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10666:6:7",
														"nodeType": "YulTypedName",
														"src": "10666:6:7",
														"type": ""
													}
												],
												"src": "10568:230:7"
											},
											{
												"body": {
													"nativeSrc": "10950:220:7",
													"nodeType": "YulBlock",
													"src": "10950:220:7",
													"statements": [
														{
															"nativeSrc": "10960:74:7",
															"nodeType": "YulAssignment",
															"src": "10960:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11026:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11026:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11031:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11031:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10967:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10967:58:7"
																},
																"nativeSrc": "10967:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10967:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10960:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10960:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11132:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11132:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368",
																	"nativeSrc": "11043:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11043:88:7"
																},
																"nativeSrc": "11043:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11043:93:7"
															},
															"nativeSrc": "11043:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11043:93:7"
														},
														{
															"nativeSrc": "11145:19:7",
															"nodeType": "YulAssignment",
															"src": "11145:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11156:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11156:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11161:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11161:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:7"
																},
																"nativeSrc": "11152:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11152:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11145:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11145:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10804:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10938:3:7",
														"nodeType": "YulTypedName",
														"src": "10938:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10946:3:7",
														"nodeType": "YulTypedName",
														"src": "10946:3:7",
														"type": ""
													}
												],
												"src": "10804:366:7"
											},
											{
												"body": {
													"nativeSrc": "11347:248:7",
													"nodeType": "YulBlock",
													"src": "11347:248:7",
													"statements": [
														{
															"nativeSrc": "11357:26:7",
															"nodeType": "YulAssignment",
															"src": "11357:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11369:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11369:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11380:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11380:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11365:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:7"
																},
																"nativeSrc": "11365:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11365:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11357:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11357:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11415:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11415:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11400:3:7"
																		},
																		"nativeSrc": "11400:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11400:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11423:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11423:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11429:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11429:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11419:3:7"
																		},
																		"nativeSrc": "11419:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11419:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11393:6:7"
																},
																"nativeSrc": "11393:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11393:47:7"
															},
															"nativeSrc": "11393:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11393:47:7"
														},
														{
															"nativeSrc": "11449:139:7",
															"nodeType": "YulAssignment",
															"src": "11449:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11583:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11583:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11457:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11457:124:7"
																},
																"nativeSrc": "11457:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11457:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11449:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11449:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11176:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11327:9:7",
														"nodeType": "YulTypedName",
														"src": "11327:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11342:4:7",
														"nodeType": "YulTypedName",
														"src": "11342:4:7",
														"type": ""
													}
												],
												"src": "11176:419:7"
											},
											{
												"body": {
													"nativeSrc": "11629:152:7",
													"nodeType": "YulBlock",
													"src": "11629:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11646:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11646:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11649:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11649:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11639:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11639:6:7"
																},
																"nativeSrc": "11639:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11639:88:7"
															},
															"nativeSrc": "11639:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11639:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11743:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11743:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11746:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11746:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11736:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:7"
																},
																"nativeSrc": "11736:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11736:15:7"
															},
															"nativeSrc": "11736:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11736:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11767:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11767:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11770:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11770:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11760:6:7"
																},
																"nativeSrc": "11760:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11760:15:7"
															},
															"nativeSrc": "11760:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11760:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "11601:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11601:180:7"
											},
											{
												"body": {
													"nativeSrc": "11893:69:7",
													"nodeType": "YulBlock",
													"src": "11893:69:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11915:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11923:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11923:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11911:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11911:3:7"
																		},
																		"nativeSrc": "11911:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11911:14:7"
																	},
																	{
																		"hexValue": "526577617264206d75737420626520706f7369747665212121",
																		"kind": "string",
																		"nativeSrc": "11927:27:7",
																		"nodeType": "YulLiteral",
																		"src": "11927:27:7",
																		"type": "",
																		"value": "Reward must be positve!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11904:6:7"
																},
																"nativeSrc": "11904:51:7",
																"nodeType": "YulFunctionCall",
																"src": "11904:51:7"
															},
															"nativeSrc": "11904:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "11904:51:7"
														}
													]
												},
												"name": "store_literal_in_memory_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1",
												"nativeSrc": "11787:175:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11885:6:7",
														"nodeType": "YulTypedName",
														"src": "11885:6:7",
														"type": ""
													}
												],
												"src": "11787:175:7"
											},
											{
												"body": {
													"nativeSrc": "12114:220:7",
													"nodeType": "YulBlock",
													"src": "12114:220:7",
													"statements": [
														{
															"nativeSrc": "12124:74:7",
															"nodeType": "YulAssignment",
															"src": "12124:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12190:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12190:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12195:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12195:2:7",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12131:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12131:58:7"
																},
																"nativeSrc": "12131:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12131:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12124:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12124:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12296:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12296:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1",
																	"nativeSrc": "12207:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12207:88:7"
																},
																"nativeSrc": "12207:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12207:93:7"
															},
															"nativeSrc": "12207:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12207:93:7"
														},
														{
															"nativeSrc": "12309:19:7",
															"nodeType": "YulAssignment",
															"src": "12309:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12320:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12320:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12325:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12325:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12316:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12316:3:7"
																},
																"nativeSrc": "12316:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12316:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12309:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12309:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11968:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12102:3:7",
														"nodeType": "YulTypedName",
														"src": "12102:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12110:3:7",
														"nodeType": "YulTypedName",
														"src": "12110:3:7",
														"type": ""
													}
												],
												"src": "11968:366:7"
											},
											{
												"body": {
													"nativeSrc": "12511:248:7",
													"nodeType": "YulBlock",
													"src": "12511:248:7",
													"statements": [
														{
															"nativeSrc": "12521:26:7",
															"nodeType": "YulAssignment",
															"src": "12521:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12533:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12533:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12544:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12544:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12529:3:7"
																},
																"nativeSrc": "12529:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12529:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12521:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12521:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12568:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12568:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12579:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12579:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12564:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12564:3:7"
																		},
																		"nativeSrc": "12564:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12564:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12587:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12593:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12593:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12583:3:7"
																		},
																		"nativeSrc": "12583:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12583:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12557:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12557:6:7"
																},
																"nativeSrc": "12557:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12557:47:7"
															},
															"nativeSrc": "12557:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12557:47:7"
														},
														{
															"nativeSrc": "12613:139:7",
															"nodeType": "YulAssignment",
															"src": "12613:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12747:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12747:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12621:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12621:124:7"
																},
																"nativeSrc": "12621:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12621:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12613:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12613:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12340:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12491:9:7",
														"nodeType": "YulTypedName",
														"src": "12491:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12506:4:7",
														"nodeType": "YulTypedName",
														"src": "12506:4:7",
														"type": ""
													}
												],
												"src": "12340:419:7"
											},
											{
												"body": {
													"nativeSrc": "12871:119:7",
													"nodeType": "YulBlock",
													"src": "12871:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12893:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12893:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12901:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12901:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12889:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12889:3:7"
																		},
																		"nativeSrc": "12889:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12889:14:7"
																	},
																	{
																		"hexValue": "5265717569726564205375626d697373696f6e206d75737420626520706f7374",
																		"kind": "string",
																		"nativeSrc": "12905:34:7",
																		"nodeType": "YulLiteral",
																		"src": "12905:34:7",
																		"type": "",
																		"value": "Required Submission must be post"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12882:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12882:6:7"
																},
																"nativeSrc": "12882:58:7",
																"nodeType": "YulFunctionCall",
																"src": "12882:58:7"
															},
															"nativeSrc": "12882:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "12882:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12961:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12961:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12969:2:7",
																				"nodeType": "YulLiteral",
																				"src": "12969:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12957:3:7"
																		},
																		"nativeSrc": "12957:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12957:15:7"
																	},
																	{
																		"hexValue": "697665212121",
																		"kind": "string",
																		"nativeSrc": "12974:8:7",
																		"nodeType": "YulLiteral",
																		"src": "12974:8:7",
																		"type": "",
																		"value": "ive!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12950:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12950:6:7"
																},
																"nativeSrc": "12950:33:7",
																"nodeType": "YulFunctionCall",
																"src": "12950:33:7"
															},
															"nativeSrc": "12950:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "12950:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24",
												"nativeSrc": "12765:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12863:6:7",
														"nodeType": "YulTypedName",
														"src": "12863:6:7",
														"type": ""
													}
												],
												"src": "12765:225:7"
											},
											{
												"body": {
													"nativeSrc": "13142:220:7",
													"nodeType": "YulBlock",
													"src": "13142:220:7",
													"statements": [
														{
															"nativeSrc": "13152:74:7",
															"nodeType": "YulAssignment",
															"src": "13152:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13218:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13218:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13223:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13223:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13159:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13159:58:7"
																},
																"nativeSrc": "13159:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13159:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13152:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13152:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13324:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13324:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24",
																	"nativeSrc": "13235:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13235:88:7"
																},
																"nativeSrc": "13235:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13235:93:7"
															},
															"nativeSrc": "13235:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13235:93:7"
														},
														{
															"nativeSrc": "13337:19:7",
															"nodeType": "YulAssignment",
															"src": "13337:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13348:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13348:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13353:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13344:3:7"
																},
																"nativeSrc": "13344:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13344:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13337:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13337:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12996:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13130:3:7",
														"nodeType": "YulTypedName",
														"src": "13130:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13138:3:7",
														"nodeType": "YulTypedName",
														"src": "13138:3:7",
														"type": ""
													}
												],
												"src": "12996:366:7"
											},
											{
												"body": {
													"nativeSrc": "13539:248:7",
													"nodeType": "YulBlock",
													"src": "13539:248:7",
													"statements": [
														{
															"nativeSrc": "13549:26:7",
															"nodeType": "YulAssignment",
															"src": "13549:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13561:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13561:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13572:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13572:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13557:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13557:3:7"
																},
																"nativeSrc": "13557:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13557:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13549:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13549:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13596:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13596:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13607:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13607:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13592:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13592:3:7"
																		},
																		"nativeSrc": "13592:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13592:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13615:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13615:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13621:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13621:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13611:3:7"
																		},
																		"nativeSrc": "13611:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13611:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13585:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:7"
																},
																"nativeSrc": "13585:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13585:47:7"
															},
															"nativeSrc": "13585:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13585:47:7"
														},
														{
															"nativeSrc": "13641:139:7",
															"nodeType": "YulAssignment",
															"src": "13641:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13775:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13775:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13649:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13649:124:7"
																},
																"nativeSrc": "13649:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13649:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13641:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13641:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13368:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13519:9:7",
														"nodeType": "YulTypedName",
														"src": "13519:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13534:4:7",
														"nodeType": "YulTypedName",
														"src": "13534:4:7",
														"type": ""
													}
												],
												"src": "13368:419:7"
											},
											{
												"body": {
													"nativeSrc": "13821:152:7",
													"nodeType": "YulBlock",
													"src": "13821:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13838:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13838:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13841:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13841:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13831:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13831:6:7"
																},
																"nativeSrc": "13831:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13831:88:7"
															},
															"nativeSrc": "13831:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13831:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13935:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13935:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13938:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13938:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13928:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13928:6:7"
																},
																"nativeSrc": "13928:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13928:15:7"
															},
															"nativeSrc": "13928:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13928:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13962:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13962:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13952:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13952:6:7"
																},
																"nativeSrc": "13952:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13952:15:7"
															},
															"nativeSrc": "13952:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13952:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13793:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13793:180:7"
											},
											{
												"body": {
													"nativeSrc": "14027:362:7",
													"nodeType": "YulBlock",
													"src": "14027:362:7",
													"statements": [
														{
															"nativeSrc": "14037:25:7",
															"nodeType": "YulAssignment",
															"src": "14037:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14060:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14060:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14042:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14042:17:7"
																},
																"nativeSrc": "14042:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14042:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14037:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14037:1:7"
																}
															]
														},
														{
															"nativeSrc": "14071:25:7",
															"nodeType": "YulAssignment",
															"src": "14071:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14094:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14094:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14076:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14076:17:7"
																},
																"nativeSrc": "14076:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14076:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14071:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14071:1:7"
																}
															]
														},
														{
															"nativeSrc": "14105:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "14105:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14128:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14128:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14131:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14131:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14124:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14124:3:7"
																},
																"nativeSrc": "14124:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14124:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14109:11:7",
																	"nodeType": "YulTypedName",
																	"src": "14109:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14142:41:7",
															"nodeType": "YulAssignment",
															"src": "14142:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14171:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "14171:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14153:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14153:17:7"
																},
																"nativeSrc": "14153:30:7",
																"nodeType": "YulFunctionCall",
																"src": "14153:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14142:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "14142:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14360:22:7",
																"nodeType": "YulBlock",
																"src": "14360:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14362:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14362:16:7"
																			},
																			"nativeSrc": "14362:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14362:18:7"
																		},
																		"nativeSrc": "14362:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14362:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14293:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "14293:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14286:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "14286:6:7"
																				},
																				"nativeSrc": "14286:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14286:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14316:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "14316:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14323:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "14323:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14332:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "14332:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14319:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "14319:3:7"
																						},
																						"nativeSrc": "14319:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "14319:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14313:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "14313:2:7"
																				},
																				"nativeSrc": "14313:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "14313:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14266:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14266:2:7"
																		},
																		"nativeSrc": "14266:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14266:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14246:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14246:6:7"
																},
																"nativeSrc": "14246:113:7",
																"nodeType": "YulFunctionCall",
																"src": "14246:113:7"
															},
															"nativeSrc": "14243:139:7",
															"nodeType": "YulIf",
															"src": "14243:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "13979:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14010:1:7",
														"nodeType": "YulTypedName",
														"src": "14010:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14013:1:7",
														"nodeType": "YulTypedName",
														"src": "14013:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14019:7:7",
														"nodeType": "YulTypedName",
														"src": "14019:7:7",
														"type": ""
													}
												],
												"src": "13979:410:7"
											},
											{
												"body": {
													"nativeSrc": "14439:147:7",
													"nodeType": "YulBlock",
													"src": "14439:147:7",
													"statements": [
														{
															"nativeSrc": "14449:25:7",
															"nodeType": "YulAssignment",
															"src": "14449:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14472:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14472:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14454:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14454:17:7"
																},
																"nativeSrc": "14454:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14454:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14449:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14449:1:7"
																}
															]
														},
														{
															"nativeSrc": "14483:25:7",
															"nodeType": "YulAssignment",
															"src": "14483:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14506:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14506:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14488:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14488:17:7"
																},
																"nativeSrc": "14488:20:7",
																"nodeType": "YulFunctionCall",
																"src": "14488:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14483:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "14483:1:7"
																}
															]
														},
														{
															"nativeSrc": "14517:16:7",
															"nodeType": "YulAssignment",
															"src": "14517:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14528:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14528:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14531:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14531:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14524:3:7"
																},
																"nativeSrc": "14524:9:7",
																"nodeType": "YulFunctionCall",
																"src": "14524:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14517:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14517:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14557:22:7",
																"nodeType": "YulBlock",
																"src": "14557:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14559:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14559:16:7"
																			},
																			"nativeSrc": "14559:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14559:18:7"
																		},
																		"nativeSrc": "14559:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14559:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14549:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "14549:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14552:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14552:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14546:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "14546:2:7"
																},
																"nativeSrc": "14546:10:7",
																"nodeType": "YulFunctionCall",
																"src": "14546:10:7"
															},
															"nativeSrc": "14543:36:7",
															"nodeType": "YulIf",
															"src": "14543:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14395:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14426:1:7",
														"nodeType": "YulTypedName",
														"src": "14426:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14429:1:7",
														"nodeType": "YulTypedName",
														"src": "14429:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14435:3:7",
														"nodeType": "YulTypedName",
														"src": "14435:3:7",
														"type": ""
													}
												],
												"src": "14395:191:7"
											},
											{
												"body": {
													"nativeSrc": "14718:206:7",
													"nodeType": "YulBlock",
													"src": "14718:206:7",
													"statements": [
														{
															"nativeSrc": "14728:26:7",
															"nodeType": "YulAssignment",
															"src": "14728:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14740:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14740:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14751:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14751:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14736:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14736:3:7"
																},
																"nativeSrc": "14736:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14736:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14728:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14728:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14808:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14808:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14821:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14832:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14832:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14817:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14817:3:7"
																		},
																		"nativeSrc": "14817:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14817:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14764:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14764:43:7"
																},
																"nativeSrc": "14764:71:7",
																"nodeType": "YulFunctionCall",
																"src": "14764:71:7"
															},
															"nativeSrc": "14764:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "14764:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14889:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14889:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14902:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14902:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14913:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14913:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14898:3:7"
																		},
																		"nativeSrc": "14898:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14898:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14845:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14845:43:7"
																},
																"nativeSrc": "14845:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14845:72:7"
															},
															"nativeSrc": "14845:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14845:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14592:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14682:9:7",
														"nodeType": "YulTypedName",
														"src": "14682:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14694:6:7",
														"nodeType": "YulTypedName",
														"src": "14694:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14702:6:7",
														"nodeType": "YulTypedName",
														"src": "14702:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14713:4:7",
														"nodeType": "YulTypedName",
														"src": "14713:4:7",
														"type": ""
													}
												],
												"src": "14592:332:7"
											},
											{
												"body": {
													"nativeSrc": "14973:190:7",
													"nodeType": "YulBlock",
													"src": "14973:190:7",
													"statements": [
														{
															"nativeSrc": "14983:33:7",
															"nodeType": "YulAssignment",
															"src": "14983:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15010:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15010:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14992:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "14992:17:7"
																},
																"nativeSrc": "14992:24:7",
																"nodeType": "YulFunctionCall",
																"src": "14992:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14983:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "14983:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15106:22:7",
																"nodeType": "YulBlock",
																"src": "15106:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15108:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15108:16:7"
																			},
																			"nativeSrc": "15108:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15108:18:7"
																		},
																		"nativeSrc": "15108:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15108:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15031:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15031:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15038:66:7",
																		"nodeType": "YulLiteral",
																		"src": "15038:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15028:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15028:2:7"
																},
																"nativeSrc": "15028:77:7",
																"nodeType": "YulFunctionCall",
																"src": "15028:77:7"
															},
															"nativeSrc": "15025:103:7",
															"nodeType": "YulIf",
															"src": "15025:103:7"
														},
														{
															"nativeSrc": "15137:20:7",
															"nodeType": "YulAssignment",
															"src": "15137:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15148:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15155:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15155:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15144:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15144:3:7"
																},
																"nativeSrc": "15144:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15144:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "15137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15137:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14930:233:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14959:5:7",
														"nodeType": "YulTypedName",
														"src": "14959:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14969:3:7",
														"nodeType": "YulTypedName",
														"src": "14969:3:7",
														"type": ""
													}
												],
												"src": "14930:233:7"
											},
											{
												"body": {
													"nativeSrc": "15275:115:7",
													"nodeType": "YulBlock",
													"src": "15275:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15297:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15297:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15305:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15305:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15293:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15293:3:7"
																		},
																		"nativeSrc": "15293:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15293:14:7"
																	},
																	{
																		"hexValue": "43757272656e74205461736b20686173206265656e20636f6d706c6574656421",
																		"kind": "string",
																		"nativeSrc": "15309:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15309:34:7",
																		"type": "",
																		"value": "Current Task has been completed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15286:6:7"
																},
																"nativeSrc": "15286:58:7",
																"nodeType": "YulFunctionCall",
																"src": "15286:58:7"
															},
															"nativeSrc": "15286:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "15286:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15365:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15365:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15373:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15373:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15361:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15361:3:7"
																		},
																		"nativeSrc": "15361:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15361:15:7"
																	},
																	{
																		"hexValue": "2121",
																		"kind": "string",
																		"nativeSrc": "15378:4:7",
																		"nodeType": "YulLiteral",
																		"src": "15378:4:7",
																		"type": "",
																		"value": "!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15354:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15354:6:7"
																},
																"nativeSrc": "15354:29:7",
																"nodeType": "YulFunctionCall",
																"src": "15354:29:7"
															},
															"nativeSrc": "15354:29:7",
															"nodeType": "YulExpressionStatement",
															"src": "15354:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b",
												"nativeSrc": "15169:221:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15267:6:7",
														"nodeType": "YulTypedName",
														"src": "15267:6:7",
														"type": ""
													}
												],
												"src": "15169:221:7"
											},
											{
												"body": {
													"nativeSrc": "15542:220:7",
													"nodeType": "YulBlock",
													"src": "15542:220:7",
													"statements": [
														{
															"nativeSrc": "15552:74:7",
															"nodeType": "YulAssignment",
															"src": "15552:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15618:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15618:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15623:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15623:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15559:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15559:58:7"
																},
																"nativeSrc": "15559:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15559:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15552:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15552:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15724:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15724:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b",
																	"nativeSrc": "15635:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15635:88:7"
																},
																"nativeSrc": "15635:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15635:93:7"
															},
															"nativeSrc": "15635:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15635:93:7"
														},
														{
															"nativeSrc": "15737:19:7",
															"nodeType": "YulAssignment",
															"src": "15737:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15748:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15748:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15753:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15753:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15744:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15744:3:7"
																},
																"nativeSrc": "15744:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15744:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15737:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15737:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15396:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15530:3:7",
														"nodeType": "YulTypedName",
														"src": "15530:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15538:3:7",
														"nodeType": "YulTypedName",
														"src": "15538:3:7",
														"type": ""
													}
												],
												"src": "15396:366:7"
											},
											{
												"body": {
													"nativeSrc": "15939:248:7",
													"nodeType": "YulBlock",
													"src": "15939:248:7",
													"statements": [
														{
															"nativeSrc": "15949:26:7",
															"nodeType": "YulAssignment",
															"src": "15949:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15961:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15961:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15972:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15972:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15957:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15957:3:7"
																},
																"nativeSrc": "15957:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15957:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15949:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15949:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15996:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15996:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16007:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16007:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15992:3:7"
																		},
																		"nativeSrc": "15992:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15992:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16015:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16015:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16021:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16021:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16011:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16011:3:7"
																		},
																		"nativeSrc": "16011:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16011:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15985:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15985:6:7"
																},
																"nativeSrc": "15985:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15985:47:7"
															},
															"nativeSrc": "15985:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15985:47:7"
														},
														{
															"nativeSrc": "16041:139:7",
															"nodeType": "YulAssignment",
															"src": "16041:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16175:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16175:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16049:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16049:124:7"
																},
																"nativeSrc": "16049:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16049:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16041:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16041:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15768:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15919:9:7",
														"nodeType": "YulTypedName",
														"src": "15919:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15934:4:7",
														"nodeType": "YulTypedName",
														"src": "15934:4:7",
														"type": ""
													}
												],
												"src": "15768:419:7"
											},
											{
												"body": {
													"nativeSrc": "16299:72:7",
													"nodeType": "YulBlock",
													"src": "16299:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16321:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16321:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16329:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16329:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16317:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16317:3:7"
																		},
																		"nativeSrc": "16317:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16317:14:7"
																	},
																	{
																		"hexValue": "4e6f207375626d697373696f6e206973207265717569726564212121",
																		"kind": "string",
																		"nativeSrc": "16333:30:7",
																		"nodeType": "YulLiteral",
																		"src": "16333:30:7",
																		"type": "",
																		"value": "No submission is required!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16310:6:7"
																},
																"nativeSrc": "16310:54:7",
																"nodeType": "YulFunctionCall",
																"src": "16310:54:7"
															},
															"nativeSrc": "16310:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "16310:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d",
												"nativeSrc": "16193:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16291:6:7",
														"nodeType": "YulTypedName",
														"src": "16291:6:7",
														"type": ""
													}
												],
												"src": "16193:178:7"
											},
											{
												"body": {
													"nativeSrc": "16523:220:7",
													"nodeType": "YulBlock",
													"src": "16523:220:7",
													"statements": [
														{
															"nativeSrc": "16533:74:7",
															"nodeType": "YulAssignment",
															"src": "16533:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16599:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16599:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16604:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16604:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16540:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16540:58:7"
																},
																"nativeSrc": "16540:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16540:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16533:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16533:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16705:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16705:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d",
																	"nativeSrc": "16616:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16616:88:7"
																},
																"nativeSrc": "16616:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16616:93:7"
															},
															"nativeSrc": "16616:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16616:93:7"
														},
														{
															"nativeSrc": "16718:19:7",
															"nodeType": "YulAssignment",
															"src": "16718:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16729:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16729:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16734:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16734:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16725:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16725:3:7"
																},
																"nativeSrc": "16725:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16725:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16718:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16718:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16377:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16511:3:7",
														"nodeType": "YulTypedName",
														"src": "16511:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16519:3:7",
														"nodeType": "YulTypedName",
														"src": "16519:3:7",
														"type": ""
													}
												],
												"src": "16377:366:7"
											},
											{
												"body": {
													"nativeSrc": "16920:248:7",
													"nodeType": "YulBlock",
													"src": "16920:248:7",
													"statements": [
														{
															"nativeSrc": "16930:26:7",
															"nodeType": "YulAssignment",
															"src": "16930:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16942:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16942:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16953:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16953:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16938:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16938:3:7"
																},
																"nativeSrc": "16938:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16938:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16930:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16930:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16977:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16977:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16988:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16988:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16973:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16973:3:7"
																		},
																		"nativeSrc": "16973:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16973:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16996:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16996:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17002:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17002:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16992:3:7"
																		},
																		"nativeSrc": "16992:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16992:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16966:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16966:6:7"
																},
																"nativeSrc": "16966:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16966:47:7"
															},
															"nativeSrc": "16966:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16966:47:7"
														},
														{
															"nativeSrc": "17022:139:7",
															"nodeType": "YulAssignment",
															"src": "17022:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17156:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17156:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17030:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17030:124:7"
																},
																"nativeSrc": "17030:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17030:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17022:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17022:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16749:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16900:9:7",
														"nodeType": "YulTypedName",
														"src": "16900:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16915:4:7",
														"nodeType": "YulTypedName",
														"src": "16915:4:7",
														"type": ""
													}
												],
												"src": "16749:419:7"
											},
											{
												"body": {
													"nativeSrc": "17280:121:7",
													"nodeType": "YulBlock",
													"src": "17280:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17302:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17302:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17310:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17310:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17298:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17298:3:7"
																		},
																		"nativeSrc": "17298:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17298:14:7"
																	},
																	{
																		"hexValue": "5461736b20506f7374657220616e64205375626d697474657220697320746865",
																		"kind": "string",
																		"nativeSrc": "17314:34:7",
																		"nodeType": "YulLiteral",
																		"src": "17314:34:7",
																		"type": "",
																		"value": "Task Poster and Submitter is the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17291:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17291:6:7"
																},
																"nativeSrc": "17291:58:7",
																"nodeType": "YulFunctionCall",
																"src": "17291:58:7"
															},
															"nativeSrc": "17291:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "17291:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17370:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17378:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17378:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17366:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17366:3:7"
																		},
																		"nativeSrc": "17366:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17366:15:7"
																	},
																	{
																		"hexValue": "2073616d65212121",
																		"kind": "string",
																		"nativeSrc": "17383:10:7",
																		"nodeType": "YulLiteral",
																		"src": "17383:10:7",
																		"type": "",
																		"value": " same!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17359:6:7"
																},
																"nativeSrc": "17359:35:7",
																"nodeType": "YulFunctionCall",
																"src": "17359:35:7"
															},
															"nativeSrc": "17359:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "17359:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142",
												"nativeSrc": "17174:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17272:6:7",
														"nodeType": "YulTypedName",
														"src": "17272:6:7",
														"type": ""
													}
												],
												"src": "17174:227:7"
											},
											{
												"body": {
													"nativeSrc": "17553:220:7",
													"nodeType": "YulBlock",
													"src": "17553:220:7",
													"statements": [
														{
															"nativeSrc": "17563:74:7",
															"nodeType": "YulAssignment",
															"src": "17563:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17629:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17629:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17634:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17634:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17570:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17570:58:7"
																},
																"nativeSrc": "17570:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17570:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17563:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17563:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17735:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17735:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142",
																	"nativeSrc": "17646:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17646:88:7"
																},
																"nativeSrc": "17646:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17646:93:7"
															},
															"nativeSrc": "17646:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17646:93:7"
														},
														{
															"nativeSrc": "17748:19:7",
															"nodeType": "YulAssignment",
															"src": "17748:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17759:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17759:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17764:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17764:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17755:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17755:3:7"
																},
																"nativeSrc": "17755:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17755:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17748:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17748:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17407:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17541:3:7",
														"nodeType": "YulTypedName",
														"src": "17541:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17549:3:7",
														"nodeType": "YulTypedName",
														"src": "17549:3:7",
														"type": ""
													}
												],
												"src": "17407:366:7"
											},
											{
												"body": {
													"nativeSrc": "17950:248:7",
													"nodeType": "YulBlock",
													"src": "17950:248:7",
													"statements": [
														{
															"nativeSrc": "17960:26:7",
															"nodeType": "YulAssignment",
															"src": "17960:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17972:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17972:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17983:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17983:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17968:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17968:3:7"
																},
																"nativeSrc": "17968:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17968:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17960:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17960:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18007:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18007:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18018:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18018:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18003:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18003:3:7"
																		},
																		"nativeSrc": "18003:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18003:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18026:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18026:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18032:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18032:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18022:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18022:3:7"
																		},
																		"nativeSrc": "18022:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18022:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17996:6:7"
																},
																"nativeSrc": "17996:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17996:47:7"
															},
															"nativeSrc": "17996:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17996:47:7"
														},
														{
															"nativeSrc": "18052:139:7",
															"nodeType": "YulAssignment",
															"src": "18052:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18186:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18186:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18060:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18060:124:7"
																},
																"nativeSrc": "18060:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18060:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18052:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18052:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17779:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17930:9:7",
														"nodeType": "YulTypedName",
														"src": "17930:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17945:4:7",
														"nodeType": "YulTypedName",
														"src": "17945:4:7",
														"type": ""
													}
												],
												"src": "17779:419:7"
											},
											{
												"body": {
													"nativeSrc": "18310:134:7",
													"nodeType": "YulBlock",
													"src": "18310:134:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18332:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18332:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18340:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18340:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18328:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18328:3:7"
																		},
																		"nativeSrc": "18328:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18328:14:7"
																	},
																	{
																		"hexValue": "52657761726420686173206265656e2072656c656173656420666f7220746865",
																		"kind": "string",
																		"nativeSrc": "18344:34:7",
																		"nodeType": "YulLiteral",
																		"src": "18344:34:7",
																		"type": "",
																		"value": "Reward has been released for the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18321:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18321:6:7"
																},
																"nativeSrc": "18321:58:7",
																"nodeType": "YulFunctionCall",
																"src": "18321:58:7"
															},
															"nativeSrc": "18321:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "18321:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18400:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18400:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18408:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18408:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18396:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18396:3:7"
																		},
																		"nativeSrc": "18396:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18396:15:7"
																	},
																	{
																		"hexValue": "2063757272656e74207375626d6974746572212121",
																		"kind": "string",
																		"nativeSrc": "18413:23:7",
																		"nodeType": "YulLiteral",
																		"src": "18413:23:7",
																		"type": "",
																		"value": " current submitter!!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18389:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18389:6:7"
																},
																"nativeSrc": "18389:48:7",
																"nodeType": "YulFunctionCall",
																"src": "18389:48:7"
															},
															"nativeSrc": "18389:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "18389:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001",
												"nativeSrc": "18204:240:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18302:6:7",
														"nodeType": "YulTypedName",
														"src": "18302:6:7",
														"type": ""
													}
												],
												"src": "18204:240:7"
											},
											{
												"body": {
													"nativeSrc": "18596:220:7",
													"nodeType": "YulBlock",
													"src": "18596:220:7",
													"statements": [
														{
															"nativeSrc": "18606:74:7",
															"nodeType": "YulAssignment",
															"src": "18606:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18672:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18672:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18677:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18677:2:7",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18613:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18613:58:7"
																},
																"nativeSrc": "18613:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18613:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18606:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18606:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18778:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18778:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001",
																	"nativeSrc": "18689:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18689:88:7"
																},
																"nativeSrc": "18689:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18689:93:7"
															},
															"nativeSrc": "18689:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18689:93:7"
														},
														{
															"nativeSrc": "18791:19:7",
															"nodeType": "YulAssignment",
															"src": "18791:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18802:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18802:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18807:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18807:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18798:3:7"
																},
																"nativeSrc": "18798:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18798:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18791:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18791:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18450:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18584:3:7",
														"nodeType": "YulTypedName",
														"src": "18584:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18592:3:7",
														"nodeType": "YulTypedName",
														"src": "18592:3:7",
														"type": ""
													}
												],
												"src": "18450:366:7"
											},
											{
												"body": {
													"nativeSrc": "18993:248:7",
													"nodeType": "YulBlock",
													"src": "18993:248:7",
													"statements": [
														{
															"nativeSrc": "19003:26:7",
															"nodeType": "YulAssignment",
															"src": "19003:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19015:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19015:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19026:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19026:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19011:3:7"
																},
																"nativeSrc": "19011:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19011:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19003:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19003:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19050:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19050:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19061:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19061:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19046:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19046:3:7"
																		},
																		"nativeSrc": "19046:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19046:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19069:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19069:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19075:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19075:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19065:3:7"
																		},
																		"nativeSrc": "19065:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19065:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19039:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19039:6:7"
																},
																"nativeSrc": "19039:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19039:47:7"
															},
															"nativeSrc": "19039:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19039:47:7"
														},
														{
															"nativeSrc": "19095:139:7",
															"nodeType": "YulAssignment",
															"src": "19095:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19229:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19229:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19103:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19103:124:7"
																},
																"nativeSrc": "19103:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19103:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19095:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19095:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18822:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18973:9:7",
														"nodeType": "YulTypedName",
														"src": "18973:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18988:4:7",
														"nodeType": "YulTypedName",
														"src": "18988:4:7",
														"type": ""
													}
												],
												"src": "18822:419:7"
											},
											{
												"body": {
													"nativeSrc": "19292:149:7",
													"nodeType": "YulBlock",
													"src": "19292:149:7",
													"statements": [
														{
															"nativeSrc": "19302:25:7",
															"nodeType": "YulAssignment",
															"src": "19302:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19325:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "19325:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19307:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "19307:17:7"
																},
																"nativeSrc": "19307:20:7",
																"nodeType": "YulFunctionCall",
																"src": "19307:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19302:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "19302:1:7"
																}
															]
														},
														{
															"nativeSrc": "19336:25:7",
															"nodeType": "YulAssignment",
															"src": "19336:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19359:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "19359:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19341:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "19341:17:7"
																},
																"nativeSrc": "19341:20:7",
																"nodeType": "YulFunctionCall",
																"src": "19341:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19336:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "19336:1:7"
																}
															]
														},
														{
															"nativeSrc": "19370:17:7",
															"nodeType": "YulAssignment",
															"src": "19370:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19382:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "19382:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19385:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "19385:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19378:3:7"
																},
																"nativeSrc": "19378:9:7",
																"nodeType": "YulFunctionCall",
																"src": "19378:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19370:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19370:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19412:22:7",
																"nodeType": "YulBlock",
																"src": "19412:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19414:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "19414:16:7"
																			},
																			"nativeSrc": "19414:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19414:18:7"
																		},
																		"nativeSrc": "19414:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19414:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19403:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19403:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "19409:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "19409:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19400:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19400:2:7"
																},
																"nativeSrc": "19400:11:7",
																"nodeType": "YulFunctionCall",
																"src": "19400:11:7"
															},
															"nativeSrc": "19397:37:7",
															"nodeType": "YulIf",
															"src": "19397:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "19247:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19278:1:7",
														"nodeType": "YulTypedName",
														"src": "19278:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19281:1:7",
														"nodeType": "YulTypedName",
														"src": "19281:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19287:4:7",
														"nodeType": "YulTypedName",
														"src": "19287:4:7",
														"type": ""
													}
												],
												"src": "19247:194:7"
											},
											{
												"body": {
													"nativeSrc": "19601:288:7",
													"nodeType": "YulBlock",
													"src": "19601:288:7",
													"statements": [
														{
															"nativeSrc": "19611:26:7",
															"nodeType": "YulAssignment",
															"src": "19611:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19623:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19623:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19634:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19634:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19619:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19619:3:7"
																},
																"nativeSrc": "19619:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19619:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19611:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19611:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19691:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19691:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19704:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19704:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19715:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19715:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19700:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19700:3:7"
																		},
																		"nativeSrc": "19700:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19700:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19647:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19647:43:7"
																},
																"nativeSrc": "19647:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19647:71:7"
															},
															"nativeSrc": "19647:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19647:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19772:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19772:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19785:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19785:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19796:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19796:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19781:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19781:3:7"
																		},
																		"nativeSrc": "19781:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19781:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19728:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19728:43:7"
																},
																"nativeSrc": "19728:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19728:72:7"
															},
															"nativeSrc": "19728:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19728:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19878:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19878:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19863:3:7"
																		},
																		"nativeSrc": "19863:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19863:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19810:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19810:43:7"
																},
																"nativeSrc": "19810:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19810:72:7"
															},
															"nativeSrc": "19810:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19810:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19447:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19557:9:7",
														"nodeType": "YulTypedName",
														"src": "19557:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19569:6:7",
														"nodeType": "YulTypedName",
														"src": "19569:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19577:6:7",
														"nodeType": "YulTypedName",
														"src": "19577:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19585:6:7",
														"nodeType": "YulTypedName",
														"src": "19585:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19596:4:7",
														"nodeType": "YulTypedName",
														"src": "19596:4:7",
														"type": ""
													}
												],
												"src": "19447:442:7"
											},
											{
												"body": {
													"nativeSrc": "19993:124:7",
													"nodeType": "YulBlock",
													"src": "19993:124:7",
													"statements": [
														{
															"nativeSrc": "20003:26:7",
															"nodeType": "YulAssignment",
															"src": "20003:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20015:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20015:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20026:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20026:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20011:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20011:3:7"
																},
																"nativeSrc": "20011:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20011:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20003:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20003:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20083:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20083:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20096:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20096:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20107:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20107:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20092:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20092:3:7"
																		},
																		"nativeSrc": "20092:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20092:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20039:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20039:43:7"
																},
																"nativeSrc": "20039:71:7",
																"nodeType": "YulFunctionCall",
																"src": "20039:71:7"
															},
															"nativeSrc": "20039:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "20039:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "19895:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19965:9:7",
														"nodeType": "YulTypedName",
														"src": "19965:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19977:6:7",
														"nodeType": "YulTypedName",
														"src": "19977:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19988:4:7",
														"nodeType": "YulTypedName",
														"src": "19988:4:7",
														"type": ""
													}
												],
												"src": "19895:222:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The length of Tasks and Reqired \")\n\n        mstore(add(memPtr, 32), \"Times don't match!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368(memPtr) {\n\n        mstore(add(memPtr, 0), \"At least have one task and reqir\")\n\n        mstore(add(memPtr, 32), \"ed times!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward must be positve!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Required Submission must be post\")\n\n        mstore(add(memPtr, 32), \"ive!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Current Task has been completed!\")\n\n        mstore(add(memPtr, 32), \"!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No submission is required!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142(memPtr) {\n\n        mstore(add(memPtr, 0), \"Task Poster and Submitter is the\")\n\n        mstore(add(memPtr, 32), \" same!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward has been released for the\")\n\n        mstore(add(memPtr, 32), \" current submitter!!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063313ce5671161008a57806395d89b411161006457806395d89b4114610274578063a9059cbb14610292578063dd62ed3e146102c2578063fdc3d8d7146102f2576100e8565b8063313ce5671461020a57806351a71b171461022857806370a0823114610244576100e8565b806318160ddd116100c657806318160ddd1461016d5780631d65e77e1461018b57806323b872dd146101be578063257baa3a146101ee576100e8565b806306fdde03146100ec578063095ea7b31461010a5780630b7879aa1461013a575b5f80fd5b6100f4610310565b60405161010191906112f2565b60405180910390f35b610124600480360381019061011f91906113a7565b6103a0565b60405161013191906113ff565b60405180910390f35b610154600480360381019061014f9190611418565b6103c2565b6040516101649493929190611461565b60405180910390f35b610175610419565b60405161018291906114a4565b60405180910390f35b6101a560048036038101906101a09190611418565b610422565b6040516101b594939291906114bd565b60405180910390f35b6101d860048036038101906101d39190611500565b610488565b6040516101e591906113ff565b60405180910390f35b610208600480360381019061020391906115b1565b6104b6565b005b610212610805565b60405161021f919061164a565b60405180910390f35b610242600480360381019061023d9190611418565b61080d565b005b61025e60048036038101906102599190611663565b610b01565b60405161026b91906114a4565b60405180910390f35b61027c610b46565b60405161028991906112f2565b60405180910390f35b6102ac60048036038101906102a791906113a7565b610bd6565b6040516102b991906113ff565b60405180910390f35b6102dc60048036038101906102d7919061168e565b610bf8565b6040516102e991906114a4565b60405180910390f35b6102fa610c7a565b60405161030791906114a4565b60405180910390f35b60606003805461031f906116f9565b80601f016020809104026020016040519081016040528092919081815260200182805461034b906116f9565b80156103965780601f1061036d57610100808354040283529160200191610396565b820191905f5260205f20905b81548152906001019060200180831161037957829003601f168201915b5050505050905090565b5f806103aa610c80565b90506103b7818585610c87565b600191505092915050565b6007602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900460ff16905084565b5f600254905090565b5f805f805f60075f8781526020019081526020015f2090508060010154815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168260020154836003015f9054906101000a900460ff169450945094509450509193509193565b5f80610492610c80565b905061049f858285610c99565b6104aa858585610d2b565b60019150509392505050565b8181905084849050146104fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f590611799565b60405180910390fd5b5f8484905011610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a90611827565b60405180910390fd5b5f805b858590508110156107f3575f86868381811061056557610564611845565b5b90506020020135116105ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a3906118bc565b60405180910390fd5b5f8484838181106105c0576105bf611845565b5b9050602002013511610607576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fe9061194a565b60405180910390fd5b83838281811061061a57610619611845565b5b9050602002013586868381811061063457610633611845565b5b905060200201356106459190611995565b8261065091906119d6565b915060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200187878481811061068c5761068b611845565b5b9050602002013581526020018585848181106106ab576106aa611845565b5b9050602002013581526020015f151581525060075f60055481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548160ff0219169083151502179055509050506005543373ffffffffffffffffffffffffffffffffffffffff167fffef41c3386c78926fe432f9a2d408f37209532660e385656444e3da578f17d688888581811061079857610797611845565b5b905060200201358787868181106107b2576107b1611845565b5b905060200201356040516107c7929190611a09565b60405180910390a360055f8154809291906107e190611a30565b91905055508080600101915050610546565b506107fe3382610e1b565b5050505050565b5f6012905090565b5f60075f8381526020019081526020015f209050806003015f9054906101000a900460ff1615610872576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086990611ae7565b60405180910390fd5b5f8160020154116108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af90611b4f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90611bdd565b60405180910390fd5b60065f8381526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890611c6b565b60405180910390fd5b6001816002015f8282546109f59190611c89565b925050819055505f816002015403610a24576001816003015f6101000a81548160ff0219169083151502179055505b610a55815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16338360010154610d2b565b600160065f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16827f107f668e128e198cf1077b19274c8dd3008737e858e3445d1176cd1d99951beb60405160405180910390a35050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610b55906116f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b81906116f9565b8015610bcc5780601f10610ba357610100808354040283529160200191610bcc565b820191905f5260205f20905b815481529060010190602001808311610baf57829003601f168201915b5050505050905090565b5f80610be0610c80565b9050610bed818585610d2b565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60055481565b5f33905090565b610c948383836001610e9a565b505050565b5f610ca48484610bf8565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d255781811015610d16578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d0d93929190611cbc565b60405180910390fd5b610d2484848484035f610e9a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d9b575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d929190611cf1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e0b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e029190611cf1565b60405180910390fd5b610e16838383611069565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e8b575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610e829190611cf1565b60405180910390fd5b610e965f8383611069565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f0a575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610f019190611cf1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7a575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f719190611cf1565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611063578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161105a91906114a4565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110b9578060025f8282546110ad91906119d6565b92505081905550611187565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611142578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161113993929190611cbc565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111ce578060025f8282540392505081905550611218565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161127591906114a4565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6112c482611282565b6112ce818561128c565b93506112de81856020860161129c565b6112e7816112aa565b840191505092915050565b5f6020820190508181035f83015261130a81846112ba565b905092915050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113438261131a565b9050919050565b61135381611339565b811461135d575f80fd5b50565b5f8135905061136e8161134a565b92915050565b5f819050919050565b61138681611374565b8114611390575f80fd5b50565b5f813590506113a18161137d565b92915050565b5f80604083850312156113bd576113bc611312565b5b5f6113ca85828601611360565b92505060206113db85828601611393565b9150509250929050565b5f8115159050919050565b6113f9816113e5565b82525050565b5f6020820190506114125f8301846113f0565b92915050565b5f6020828403121561142d5761142c611312565b5b5f61143a84828501611393565b91505092915050565b61144c81611339565b82525050565b61145b81611374565b82525050565b5f6080820190506114745f830187611443565b6114816020830186611452565b61148e6040830185611452565b61149b60608301846113f0565b95945050505050565b5f6020820190506114b75f830184611452565b92915050565b5f6080820190506114d05f830187611452565b6114dd6020830186611443565b6114ea6040830185611452565b6114f760608301846113f0565b95945050505050565b5f805f6060848603121561151757611516611312565b5b5f61152486828701611360565b935050602061153586828701611360565b925050604061154686828701611393565b9150509250925092565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261157157611570611550565b5b8235905067ffffffffffffffff81111561158e5761158d611554565b5b6020830191508360208202830111156115aa576115a9611558565b5b9250929050565b5f805f80604085870312156115c9576115c8611312565b5b5f85013567ffffffffffffffff8111156115e6576115e5611316565b5b6115f28782880161155c565b9450945050602085013567ffffffffffffffff81111561161557611614611316565b5b6116218782880161155c565b925092505092959194509250565b5f60ff82169050919050565b6116448161162f565b82525050565b5f60208201905061165d5f83018461163b565b92915050565b5f6020828403121561167857611677611312565b5b5f61168584828501611360565b91505092915050565b5f80604083850312156116a4576116a3611312565b5b5f6116b185828601611360565b92505060206116c285828601611360565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061171057607f821691505b602082108103611723576117226116cc565b5b50919050565b7f546865206c656e677468206f66205461736b7320616e642052657169726564205f8201527f54696d657320646f6e2774206d61746368212121000000000000000000000000602082015250565b5f61178360348361128c565b915061178e82611729565b604082019050919050565b5f6020820190508181035f8301526117b081611777565b9050919050565b7f4174206c656173742068617665206f6e65207461736b20616e642072657169725f8201527f65642074696d6573212121000000000000000000000000000000000000000000602082015250565b5f611811602b8361128c565b915061181c826117b7565b604082019050919050565b5f6020820190508181035f83015261183e81611805565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f526577617264206d75737420626520706f7369747665212121000000000000005f82015250565b5f6118a660198361128c565b91506118b182611872565b602082019050919050565b5f6020820190508181035f8301526118d38161189a565b9050919050565b7f5265717569726564205375626d697373696f6e206d75737420626520706f73745f8201527f6976652121210000000000000000000000000000000000000000000000000000602082015250565b5f61193460268361128c565b915061193f826118da565b604082019050919050565b5f6020820190508181035f83015261196181611928565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61199f82611374565b91506119aa83611374565b92508282026119b881611374565b915082820484148315176119cf576119ce611968565b5b5092915050565b5f6119e082611374565b91506119eb83611374565b9250828201905080821115611a0357611a02611968565b5b92915050565b5f604082019050611a1c5f830185611452565b611a296020830184611452565b9392505050565b5f611a3a82611374565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6c57611a6b611968565b5b600182019050919050565b7f43757272656e74205461736b20686173206265656e20636f6d706c65746564215f8201527f2121000000000000000000000000000000000000000000000000000000000000602082015250565b5f611ad160228361128c565b9150611adc82611a77565b604082019050919050565b5f6020820190508181035f830152611afe81611ac5565b9050919050565b7f4e6f207375626d697373696f6e206973207265717569726564212121000000005f82015250565b5f611b39601c8361128c565b9150611b4482611b05565b602082019050919050565b5f6020820190508181035f830152611b6681611b2d565b9050919050565b7f5461736b20506f7374657220616e64205375626d6974746572206973207468655f8201527f2073616d65212121000000000000000000000000000000000000000000000000602082015250565b5f611bc760288361128c565b9150611bd282611b6d565b604082019050919050565b5f6020820190508181035f830152611bf481611bbb565b9050919050565b7f52657761726420686173206265656e2072656c656173656420666f72207468655f8201527f2063757272656e74207375626d69747465722121210000000000000000000000602082015250565b5f611c5560358361128c565b9150611c6082611bfb565b604082019050919050565b5f6020820190508181035f830152611c8281611c49565b9050919050565b5f611c9382611374565b9150611c9e83611374565b9250828203905081811115611cb657611cb5611968565b5b92915050565b5f606082019050611ccf5f830186611443565b611cdc6020830185611452565b611ce96040830184611452565b949350505050565b5f602082019050611d045f830184611443565b9291505056fea2646970667358221220f9e69d45e7bae3e5e6b61513fb3531f567366fc3841f4f6a1382a7d9dbbdeea064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xFDC3D8D7 EQ PUSH2 0x2F2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x51A71B17 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x244 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x1D65E77E EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x257BAA3A EQ PUSH2 0x1EE JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xB7879AA EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x154 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x15B1 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1418 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FA PUSH2 0xC7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x31F SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x396 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x396 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x379 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3AA PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B7 DUP2 DUP6 DUP6 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x7 PUSH0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x492 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0x49F DUP6 DUP3 DUP6 PUSH2 0xC99 JUMP JUMPDEST PUSH2 0x4AA DUP6 DUP6 DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0x4FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F5 SWAP1 PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP GT PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP1 PUSH2 0x1827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 JUMPDEST DUP6 DUP6 SWAP1 POP DUP2 LT ISZERO PUSH2 0x7F3 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x564 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x5AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A3 SWAP1 PUSH2 0x18BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT PUSH2 0x607 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FE SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 DUP3 DUP2 DUP2 LT PUSH2 0x61A JUMPI PUSH2 0x619 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x634 JUMPI PUSH2 0x633 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST DUP3 PUSH2 0x650 SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68B PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP5 DUP2 DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AA PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 SLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFEF41C3386C78926FE432F9A2D408F37209532660E385656444E3DA578F17D6 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x798 JUMPI PUSH2 0x797 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP7 DUP2 DUP2 LT PUSH2 0x7B2 JUMPI PUSH2 0x7B1 PUSH2 0x1845 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x7C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1A09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x7E1 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x546 JUMP JUMPDEST POP PUSH2 0x7FE CALLER DUP3 PUSH2 0xE1B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x872 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x869 SWAP1 PUSH2 0x1AE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AF SWAP1 PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D8 SWAP1 PUSH2 0x1C6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9F5 SWAP2 SWAP1 PUSH2 0x1C89 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SUB PUSH2 0xA24 JUMPI PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA55 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x107F668E128E198CF1077B19274C8DD3008737E858E3445D1176CD1D99951BEB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xB55 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB81 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBE0 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP PUSH2 0xBED DUP2 DUP6 DUP6 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC94 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCA4 DUP5 DUP5 PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD25 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD16 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD24 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE9A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD9B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD92 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE02 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE16 DUP4 DUP4 DUP4 PUSH2 0x1069 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE8B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE82 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE96 PUSH0 DUP4 DUP4 PUSH2 0x1069 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF01 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF71 SWAP2 SWAP1 PUSH2 0x1CF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1063 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x105A SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10B9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x19D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1187 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1142 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1139 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11CE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1218 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C4 DUP3 PUSH2 0x1282 JUMP JUMPDEST PUSH2 0x12CE DUP2 DUP6 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH2 0x12DE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x129C JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x12AA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x130A DUP2 DUP5 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1343 DUP3 PUSH2 0x131A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1353 DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP2 EQ PUSH2 0x135D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x136E DUP2 PUSH2 0x134A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1386 DUP2 PUSH2 0x1374 JUMP JUMPDEST DUP2 EQ PUSH2 0x1390 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13A1 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13BD JUMPI PUSH2 0x13BC PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13CA DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13DB DUP6 DUP3 DUP7 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F9 DUP2 PUSH2 0x13E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1412 PUSH0 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142D JUMPI PUSH2 0x142C PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x143A DUP5 DUP3 DUP6 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1339 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x145B DUP2 PUSH2 0x1374 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1474 PUSH0 DUP4 ADD DUP8 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1481 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x148E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x149B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14B7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x14D0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14DD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x14EA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x14F7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13F0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1517 JUMPI PUSH2 0x1516 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1524 DUP7 DUP3 DUP8 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1535 DUP7 DUP3 DUP8 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1546 DUP7 DUP3 DUP8 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1550 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x158E JUMPI PUSH2 0x158D PUSH2 0x1554 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x15AA JUMPI PUSH2 0x15A9 PUSH2 0x1558 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15C9 JUMPI PUSH2 0x15C8 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH2 0x15F2 DUP8 DUP3 DUP9 ADD PUSH2 0x155C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1615 JUMPI PUSH2 0x1614 PUSH2 0x1316 JUMP JUMPDEST JUMPDEST PUSH2 0x1621 DUP8 DUP3 DUP9 ADD PUSH2 0x155C JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x162F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH0 DUP4 ADD DUP5 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH2 0x1677 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1685 DUP5 DUP3 DUP6 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16A4 JUMPI PUSH2 0x16A3 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1360 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1710 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1723 JUMPI PUSH2 0x1722 PUSH2 0x16CC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865206C656E677468206F66205461736B7320616E64205265716972656420 PUSH0 DUP3 ADD MSTORE PUSH32 0x54696D657320646F6E2774206D61746368212121000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1783 PUSH1 0x34 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x178E DUP3 PUSH2 0x1729 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B0 DUP2 PUSH2 0x1777 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4174206C656173742068617665206F6E65207461736B20616E64207265716972 PUSH0 DUP3 ADD MSTORE PUSH32 0x65642074696D6573212121000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1811 PUSH1 0x2B DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x181C DUP3 PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183E DUP2 PUSH2 0x1805 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x526577617264206D75737420626520706F736974766521212100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18A6 PUSH1 0x19 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x18B1 DUP3 PUSH2 0x1872 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18D3 DUP2 PUSH2 0x189A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717569726564205375626D697373696F6E206D75737420626520706F7374 PUSH0 DUP3 ADD MSTORE PUSH32 0x6976652121210000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1934 PUSH1 0x26 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x193F DUP3 PUSH2 0x18DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1961 DUP2 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x199F DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19B8 DUP2 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19CF JUMPI PUSH2 0x19CE PUSH2 0x1968 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19E0 DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x19EB DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A03 JUMPI PUSH2 0x1A02 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A1C PUSH0 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1A29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A3A DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1A6C JUMPI PUSH2 0x1A6B PUSH2 0x1968 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43757272656E74205461736B20686173206265656E20636F6D706C6574656421 PUSH0 DUP3 ADD MSTORE PUSH32 0x2121000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AD1 PUSH1 0x22 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1ADC DUP3 PUSH2 0x1A77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AFE DUP2 PUSH2 0x1AC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207375626D697373696F6E20697320726571756972656421212100000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B39 PUSH1 0x1C DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1B44 DUP3 PUSH2 0x1B05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B66 DUP2 PUSH2 0x1B2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5461736B20506F7374657220616E64205375626D697474657220697320746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x2073616D65212121000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BC7 PUSH1 0x28 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BF4 DUP2 PUSH2 0x1BBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420686173206265656E2072656C656173656420666F7220746865 PUSH0 DUP3 ADD MSTORE PUSH32 0x2063757272656E74207375626D69747465722121210000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C55 PUSH1 0x35 DUP4 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C60 DUP3 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C82 DUP2 PUSH2 0x1C49 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C93 DUP3 PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C9E DUP4 PUSH2 0x1374 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1CB6 JUMPI PUSH2 0x1CB5 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1CCF PUSH0 DUP4 ADD DUP7 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x1CDC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1452 JUMP JUMPDEST PUSH2 0x1CE9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1452 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D04 PUSH0 DUP4 ADD DUP5 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xE6 SWAP14 GASLIMIT 0xE7 0xBA 0xE3 0xE5 0xE6 0xB6 ISZERO SGT 0xFB CALLDATALOAD BALANCE CREATE2 PUSH8 0x366FC3841F4F6A13 DUP3 0xA7 0xD9 0xDB 0xBD 0xEE LOG0 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "173:3972:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;928:42:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3310:326:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4776:244:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1115:1197:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2320:939:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;824:29:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;928:42:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;3310:326:6:-;3379:15;3396;3413:16;3431;3459:17;3479:9;:17;3489:6;3479:17;;;;;;;;;;;3459:37;;3515:4;:15;;;3549:4;:11;;;;;;;;;;;;3579:4;:13;;;3611:4;:16;;;;;;;;;;;;3507:121;;;;;;;;;3310:326;;;;;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1115:1197:6:-;1285:8;;:15;;1262:12;;:19;;:38;1240:140;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:1;1413:12;;:19;;:23;1391:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;1520:19;1559:6;1554:710;1575:12;;:19;;1571:1;:23;1554:710;;;1658:1;1641:12;;1654:1;1641:15;;;;;;;:::i;:::-;;;;;;;;:18;1615:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1775:1;1761:8;;1770:1;1761:11;;;;;;;:::i;:::-;;;;;;;;:15;1735:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1898:8;;1907:1;1898:11;;;;;;;:::i;:::-;;;;;;;;1880:12;;1893:1;1880:15;;;;;;;:::i;:::-;;;;;;;;:29;;;;:::i;:::-;1865:44;;;;;:::i;:::-;;;1948:181;;;;;;;;1980:10;1948:181;;;;;;2021:12;;2034:1;2021:15;;;;;;;:::i;:::-;;;;;;;;1948:181;;;;2065:8;;2074:1;2065:11;;;;;;;:::i;:::-;;;;;;;;1948:181;;;;2108:5;1948:181;;;;;1924:9;:21;1934:10;;1924:21;;;;;;;;;;;:205;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:10;;2161;2151:74;;;2183:12;;2196:1;2183:15;;;;;;;:::i;:::-;;;;;;;;2199:8;;2208:1;2199:11;;;;;;;:::i;:::-;;;;;;;;2151:74;;;;;;;:::i;:::-;;;;;;;;2240:10;;:12;;;;;;;;;:::i;:::-;;;;;;1596:3;;;;;;;1554:710;;;;2274:30;2280:10;2292:11;2274:5;:30::i;:::-;1229:1083;1115:1197;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;2320:939:6:-;2394:21;2418:9;:17;2428:6;2418:17;;;;;;;;;;;2394:41;;2469:8;:20;;;;;;;;;;;;2468:21;2446:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;2604:1;2584:8;:17;;;:21;2562:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;2713:10;2694:29;;:8;:15;;;;;;;;;;;;:29;;;2672:119;;;;;;;;;;;;:::i;:::-;;;;;;;;;2825:15;:23;2841:6;2825:23;;;;;;;;;;;:35;2849:10;2825:35;;;;;;;;;;;;;;;;;;;;;;;;;2824:36;2802:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;2975:1;2954:8;:17;;;:22;;;;;;;:::i;:::-;;;;;;;;3012:1;2991:8;:17;;;:22;2987:81;;3052:4;3029:8;:20;;;:27;;;;;;;;;;;;;;;;;;2987:81;3080:59;3090:8;:15;;;;;;;;;;;;3107:10;3119:8;:19;;;3080:9;:59::i;:::-;3188:4;3150:15;:23;3166:6;3150:23;;;;;;;;;;;:35;3174:10;3150:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;3240:10;3210:41;;3232:6;3210:41;;;;;;;;;;2383:876;2320:939;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;3551:140::-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;824:29:6:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:329::-;3398:6;3447:2;3435:9;3426:7;3422:23;3418:32;3415:119;;;3453:79;;:::i;:::-;3415:119;3573:1;3598:53;3643:7;3634:6;3623:9;3619:22;3598:53;:::i;:::-;3588:63;;3544:117;3339:329;;;;:::o;3674:118::-;3761:24;3779:5;3761:24;:::i;:::-;3756:3;3749:37;3674:118;;:::o;3798:::-;3885:24;3903:5;3885:24;:::i;:::-;3880:3;3873:37;3798:118;;:::o;3922:541::-;4093:4;4131:3;4120:9;4116:19;4108:27;;4145:71;4213:1;4202:9;4198:17;4189:6;4145:71;:::i;:::-;4226:72;4294:2;4283:9;4279:18;4270:6;4226:72;:::i;:::-;4308;4376:2;4365:9;4361:18;4352:6;4308:72;:::i;:::-;4390:66;4452:2;4441:9;4437:18;4428:6;4390:66;:::i;:::-;3922:541;;;;;;;:::o;4469:222::-;4562:4;4600:2;4589:9;4585:18;4577:26;;4613:71;4681:1;4670:9;4666:17;4657:6;4613:71;:::i;:::-;4469:222;;;;:::o;4697:541::-;4868:4;4906:3;4895:9;4891:19;4883:27;;4920:71;4988:1;4977:9;4973:17;4964:6;4920:71;:::i;:::-;5001:72;5069:2;5058:9;5054:18;5045:6;5001:72;:::i;:::-;5083;5151:2;5140:9;5136:18;5127:6;5083:72;:::i;:::-;5165:66;5227:2;5216:9;5212:18;5203:6;5165:66;:::i;:::-;4697:541;;;;;;;:::o;5244:619::-;5321:6;5329;5337;5386:2;5374:9;5365:7;5361:23;5357:32;5354:119;;;5392:79;;:::i;:::-;5354:119;5512:1;5537:53;5582:7;5573:6;5562:9;5558:22;5537:53;:::i;:::-;5527:63;;5483:117;5639:2;5665:53;5710:7;5701:6;5690:9;5686:22;5665:53;:::i;:::-;5655:63;;5610:118;5767:2;5793:53;5838:7;5829:6;5818:9;5814:22;5793:53;:::i;:::-;5783:63;;5738:118;5244:619;;;;;:::o;5869:117::-;5978:1;5975;5968:12;5992:117;6101:1;6098;6091:12;6115:117;6224:1;6221;6214:12;6255:568;6328:8;6338:6;6388:3;6381:4;6373:6;6369:17;6365:27;6355:122;;6396:79;;:::i;:::-;6355:122;6509:6;6496:20;6486:30;;6539:18;6531:6;6528:30;6525:117;;;6561:79;;:::i;:::-;6525:117;6675:4;6667:6;6663:17;6651:29;;6729:3;6721:4;6713:6;6709:17;6699:8;6695:32;6692:41;6689:128;;;6736:79;;:::i;:::-;6689:128;6255:568;;;;;:::o;6829:934::-;6951:6;6959;6967;6975;7024:2;7012:9;7003:7;6999:23;6995:32;6992:119;;;7030:79;;:::i;:::-;6992:119;7178:1;7167:9;7163:17;7150:31;7208:18;7200:6;7197:30;7194:117;;;7230:79;;:::i;:::-;7194:117;7343:80;7415:7;7406:6;7395:9;7391:22;7343:80;:::i;:::-;7325:98;;;;7121:312;7500:2;7489:9;7485:18;7472:32;7531:18;7523:6;7520:30;7517:117;;;7553:79;;:::i;:::-;7517:117;7666:80;7738:7;7729:6;7718:9;7714:22;7666:80;:::i;:::-;7648:98;;;;7443:313;6829:934;;;;;;;:::o;7769:86::-;7804:7;7844:4;7837:5;7833:16;7822:27;;7769:86;;;:::o;7861:112::-;7944:22;7960:5;7944:22;:::i;:::-;7939:3;7932:35;7861:112;;:::o;7979:214::-;8068:4;8106:2;8095:9;8091:18;8083:26;;8119:67;8183:1;8172:9;8168:17;8159:6;8119:67;:::i;:::-;7979:214;;;;:::o;8199:329::-;8258:6;8307:2;8295:9;8286:7;8282:23;8278:32;8275:119;;;8313:79;;:::i;:::-;8275:119;8433:1;8458:53;8503:7;8494:6;8483:9;8479:22;8458:53;:::i;:::-;8448:63;;8404:117;8199:329;;;;:::o;8534:474::-;8602:6;8610;8659:2;8647:9;8638:7;8634:23;8630:32;8627:119;;;8665:79;;:::i;:::-;8627:119;8785:1;8810:53;8855:7;8846:6;8835:9;8831:22;8810:53;:::i;:::-;8800:63;;8756:117;8912:2;8938:53;8983:7;8974:6;8963:9;8959:22;8938:53;:::i;:::-;8928:63;;8883:118;8534:474;;;;;:::o;9014:180::-;9062:77;9059:1;9052:88;9159:4;9156:1;9149:15;9183:4;9180:1;9173:15;9200:320;9244:6;9281:1;9275:4;9271:12;9261:22;;9328:1;9322:4;9318:12;9349:18;9339:81;;9405:4;9397:6;9393:17;9383:27;;9339:81;9467:2;9459:6;9456:14;9436:18;9433:38;9430:84;;9486:18;;:::i;:::-;9430:84;9251:269;9200:320;;;:::o;9526:239::-;9666:34;9662:1;9654:6;9650:14;9643:58;9735:22;9730:2;9722:6;9718:15;9711:47;9526:239;:::o;9771:366::-;9913:3;9934:67;9998:2;9993:3;9934:67;:::i;:::-;9927:74;;10010:93;10099:3;10010:93;:::i;:::-;10128:2;10123:3;10119:12;10112:19;;9771:366;;;:::o;10143:419::-;10309:4;10347:2;10336:9;10332:18;10324:26;;10396:9;10390:4;10386:20;10382:1;10371:9;10367:17;10360:47;10424:131;10550:4;10424:131;:::i;:::-;10416:139;;10143:419;;;:::o;10568:230::-;10708:34;10704:1;10696:6;10692:14;10685:58;10777:13;10772:2;10764:6;10760:15;10753:38;10568:230;:::o;10804:366::-;10946:3;10967:67;11031:2;11026:3;10967:67;:::i;:::-;10960:74;;11043:93;11132:3;11043:93;:::i;:::-;11161:2;11156:3;11152:12;11145:19;;10804:366;;;:::o;11176:419::-;11342:4;11380:2;11369:9;11365:18;11357:26;;11429:9;11423:4;11419:20;11415:1;11404:9;11400:17;11393:47;11457:131;11583:4;11457:131;:::i;:::-;11449:139;;11176:419;;;:::o;11601:180::-;11649:77;11646:1;11639:88;11746:4;11743:1;11736:15;11770:4;11767:1;11760:15;11787:175;11927:27;11923:1;11915:6;11911:14;11904:51;11787:175;:::o;11968:366::-;12110:3;12131:67;12195:2;12190:3;12131:67;:::i;:::-;12124:74;;12207:93;12296:3;12207:93;:::i;:::-;12325:2;12320:3;12316:12;12309:19;;11968:366;;;:::o;12340:419::-;12506:4;12544:2;12533:9;12529:18;12521:26;;12593:9;12587:4;12583:20;12579:1;12568:9;12564:17;12557:47;12621:131;12747:4;12621:131;:::i;:::-;12613:139;;12340:419;;;:::o;12765:225::-;12905:34;12901:1;12893:6;12889:14;12882:58;12974:8;12969:2;12961:6;12957:15;12950:33;12765:225;:::o;12996:366::-;13138:3;13159:67;13223:2;13218:3;13159:67;:::i;:::-;13152:74;;13235:93;13324:3;13235:93;:::i;:::-;13353:2;13348:3;13344:12;13337:19;;12996:366;;;:::o;13368:419::-;13534:4;13572:2;13561:9;13557:18;13549:26;;13621:9;13615:4;13611:20;13607:1;13596:9;13592:17;13585:47;13649:131;13775:4;13649:131;:::i;:::-;13641:139;;13368:419;;;:::o;13793:180::-;13841:77;13838:1;13831:88;13938:4;13935:1;13928:15;13962:4;13959:1;13952:15;13979:410;14019:7;14042:20;14060:1;14042:20;:::i;:::-;14037:25;;14076:20;14094:1;14076:20;:::i;:::-;14071:25;;14131:1;14128;14124:9;14153:30;14171:11;14153:30;:::i;:::-;14142:41;;14332:1;14323:7;14319:15;14316:1;14313:22;14293:1;14286:9;14266:83;14243:139;;14362:18;;:::i;:::-;14243:139;14027:362;13979:410;;;;:::o;14395:191::-;14435:3;14454:20;14472:1;14454:20;:::i;:::-;14449:25;;14488:20;14506:1;14488:20;:::i;:::-;14483:25;;14531:1;14528;14524:9;14517:16;;14552:3;14549:1;14546:10;14543:36;;;14559:18;;:::i;:::-;14543:36;14395:191;;;;:::o;14592:332::-;14713:4;14751:2;14740:9;14736:18;14728:26;;14764:71;14832:1;14821:9;14817:17;14808:6;14764:71;:::i;:::-;14845:72;14913:2;14902:9;14898:18;14889:6;14845:72;:::i;:::-;14592:332;;;;;:::o;14930:233::-;14969:3;14992:24;15010:5;14992:24;:::i;:::-;14983:33;;15038:66;15031:5;15028:77;15025:103;;15108:18;;:::i;:::-;15025:103;15155:1;15148:5;15144:13;15137:20;;14930:233;;;:::o;15169:221::-;15309:34;15305:1;15297:6;15293:14;15286:58;15378:4;15373:2;15365:6;15361:15;15354:29;15169:221;:::o;15396:366::-;15538:3;15559:67;15623:2;15618:3;15559:67;:::i;:::-;15552:74;;15635:93;15724:3;15635:93;:::i;:::-;15753:2;15748:3;15744:12;15737:19;;15396:366;;;:::o;15768:419::-;15934:4;15972:2;15961:9;15957:18;15949:26;;16021:9;16015:4;16011:20;16007:1;15996:9;15992:17;15985:47;16049:131;16175:4;16049:131;:::i;:::-;16041:139;;15768:419;;;:::o;16193:178::-;16333:30;16329:1;16321:6;16317:14;16310:54;16193:178;:::o;16377:366::-;16519:3;16540:67;16604:2;16599:3;16540:67;:::i;:::-;16533:74;;16616:93;16705:3;16616:93;:::i;:::-;16734:2;16729:3;16725:12;16718:19;;16377:366;;;:::o;16749:419::-;16915:4;16953:2;16942:9;16938:18;16930:26;;17002:9;16996:4;16992:20;16988:1;16977:9;16973:17;16966:47;17030:131;17156:4;17030:131;:::i;:::-;17022:139;;16749:419;;;:::o;17174:227::-;17314:34;17310:1;17302:6;17298:14;17291:58;17383:10;17378:2;17370:6;17366:15;17359:35;17174:227;:::o;17407:366::-;17549:3;17570:67;17634:2;17629:3;17570:67;:::i;:::-;17563:74;;17646:93;17735:3;17646:93;:::i;:::-;17764:2;17759:3;17755:12;17748:19;;17407:366;;;:::o;17779:419::-;17945:4;17983:2;17972:9;17968:18;17960:26;;18032:9;18026:4;18022:20;18018:1;18007:9;18003:17;17996:47;18060:131;18186:4;18060:131;:::i;:::-;18052:139;;17779:419;;;:::o;18204:240::-;18344:34;18340:1;18332:6;18328:14;18321:58;18413:23;18408:2;18400:6;18396:15;18389:48;18204:240;:::o;18450:366::-;18592:3;18613:67;18677:2;18672:3;18613:67;:::i;:::-;18606:74;;18689:93;18778:3;18689:93;:::i;:::-;18807:2;18802:3;18798:12;18791:19;;18450:366;;;:::o;18822:419::-;18988:4;19026:2;19015:9;19011:18;19003:26;;19075:9;19069:4;19065:20;19061:1;19050:9;19046:17;19039:47;19103:131;19229:4;19103:131;:::i;:::-;19095:139;;18822:419;;;:::o;19247:194::-;19287:4;19307:20;19325:1;19307:20;:::i;:::-;19302:25;;19341:20;19359:1;19341:20;:::i;:::-;19336:25;;19385:1;19382;19378:9;19370:17;;19409:1;19403:4;19400:11;19397:37;;;19414:18;;:::i;:::-;19397:37;19247:194;;;;:::o;19447:442::-;19596:4;19634:2;19623:9;19619:18;19611:26;;19647:71;19715:1;19704:9;19700:17;19691:6;19647:71;:::i;:::-;19728:72;19796:2;19785:9;19781:18;19772:6;19728:72;:::i;:::-;19810;19878:2;19867:9;19863:18;19854:6;19810:72;:::i;:::-;19447:442;;;;;;:::o;19895:222::-;19988:4;20026:2;20015:9;20011:18;20003:26;;20039:71;20107:1;20096:9;20092:17;20083:6;20039:71;:::i;:::-;19895:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1497600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TasksList(uint256)": "infinite",
								"addTasks(uint256[],uint256[])": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "361",
								"getTask(uint256)": "infinite",
								"name()": "infinite",
								"nextTaskId()": "2513",
								"redeemReward(uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 852,
									"end": 853,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 853,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 824,
									"end": 853,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 979,
									"end": 1029,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "43726F7764736F757263696E67546F6B656E0000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4353540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 4145,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9e69d45e7bae3e5e6b61513fb3531f567366fc3841f4f6a1382a7d9dbbdeea064736f6c634300081a0033",
									".code": [
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "FDC3D8D7"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "51A71B17"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "1D65E77E"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "257BAA3A"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "B7879AA"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 4145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 928,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 928,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 928,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 928,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3310,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3310,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3310,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1115,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 2312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2320,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2320,
											"end": 3259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 824,
											"end": 853,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 824,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 824,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 928,
											"end": 970,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 928,
											"end": 970,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 928,
											"end": 970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3411,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3447,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3495,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3519,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3530,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3515,
											"end": 3530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3530,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3553,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3549,
											"end": 3560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3592,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3579,
											"end": 3592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3615,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3611,
											"end": 3627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3507,
											"end": 3628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1262,
											"end": 1300,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1240,
											"end": 1380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1240,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1425,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1413,
											"end": 1436,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1391,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1391,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1520,
											"end": 1539,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1587,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1594,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1653,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1655,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1641,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1656,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1641,
											"end": 1659,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1615,
											"end": 1720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1615,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1761,
											"end": 1769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1770,
											"end": 1771,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1761,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1772,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1761,
											"end": 1776,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1735,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 1735,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1906,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1898,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1898,
											"end": 1909,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1892,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1892,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1880,
											"end": 1895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1895,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1880,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1880,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1865,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1865,
											"end": 1909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2033,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2033,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2035,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2021,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2065,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2076,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1933,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1934,
											"end": 1944,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1945,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2182,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2172,
											"end": 2182,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2171,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "FFEF41C3386C78926FE432F9A2D408F37209532660E385656444E3DA578F17D6"
										},
										{
											"begin": 2183,
											"end": 2195,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2195,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2183,
											"end": 2198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2207,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2207,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2199,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2210,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2151,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2225,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2240,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1596,
											"end": 1599,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 2264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2280,
											"end": 2290,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2274,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2274,
											"end": 2304,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2274,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 2312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2435,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2435,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2477,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2469,
											"end": 2489,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2489,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2446,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2446,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2562,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2562,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2723,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2723,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2723,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2694,
											"end": 2723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2694,
											"end": 2723,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2672,
											"end": 2791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2672,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2840,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2847,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2848,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2859,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2825,
											"end": 2860,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2824,
											"end": 2860,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2802,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2802,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2976,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2954,
											"end": 2962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2954,
											"end": 2971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 2954,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 2976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3008,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2991,
											"end": 3008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3008,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3013,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2987,
											"end": 3068,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3029,
											"end": 3049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3068,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2987,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3090,
											"end": 3098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3105,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3117,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3127,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3138,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3119,
											"end": 3138,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3138,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3080,
											"end": 3139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3080,
											"end": 3139,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 3080,
											"end": 3139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3188,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3150,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3172,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3184,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3240,
											"end": 3250,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3232,
											"end": 3238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "107F668E128E198CF1077B19274C8DD3008737E858E3445D1176CD1D99951BEB"
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3251,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2383,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 3259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 824,
											"end": 853,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 824,
											"end": 853,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 824,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3450,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3453,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3453,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3415,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3598,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3598,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3651,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3661,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3779,
											"end": 3784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3761,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3761,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3756,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3749,
											"end": 3786,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3674,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3885,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 3885,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 3910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4131,
											"end": 4134,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4120,
											"end": 4129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4116,
											"end": 4135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4213,
											"end": 4214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4215,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4195,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4145,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4216,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 4145,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4294,
											"end": 4296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4226,
											"end": 4298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4298,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 4226,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4365,
											"end": 4374,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4308,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 4308,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4452,
											"end": 4454,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4441,
											"end": 4450,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4390,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4390,
											"end": 4456,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 4390,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3922,
											"end": 4463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4577,
											"end": 4603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4679,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4663,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4613,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4613,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4469,
											"end": 4691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4868,
											"end": 4872,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4895,
											"end": 4904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4891,
											"end": 4910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4883,
											"end": 4910,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4988,
											"end": 4989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4964,
											"end": 4970,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4920,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4920,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5069,
											"end": 5071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5058,
											"end": 5067,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5054,
											"end": 5072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5001,
											"end": 5073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5001,
											"end": 5073,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5001,
											"end": 5073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5127,
											"end": 5133,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5083,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5083,
											"end": 5155,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 5083,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5227,
											"end": 5229,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5203,
											"end": 5209,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5165,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5231,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 5165,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 5238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5327,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5335,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5337,
											"end": 5343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5361,
											"end": 5384,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5389,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5392,
											"end": 5471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 5392,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 5354,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5537,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 5537,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5527,
											"end": 5590,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5641,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5665,
											"end": 5718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 5665,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5718,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5838,
											"end": 5845,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5827,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5793,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 5793,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5846,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5783,
											"end": 5846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5979,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5968,
											"end": 5980,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5992,
											"end": 6109,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5992,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6098,
											"end": 6099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6091,
											"end": 6103,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6115,
											"end": 6232,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6115,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6225,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6388,
											"end": 6391,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6385,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6369,
											"end": 6386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6392,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6355,
											"end": 6477,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6396,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 6396,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6477,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 6355,
											"end": 6477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6516,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6486,
											"end": 6516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6557,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6531,
											"end": 6537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6558,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6642,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6525,
											"end": 6642,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6561,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6561,
											"end": 6640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6640,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 6561,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6525,
											"end": 6642,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 6525,
											"end": 6642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6667,
											"end": 6673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6729,
											"end": 6732,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6721,
											"end": 6725,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6719,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6726,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6699,
											"end": 6707,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6695,
											"end": 6727,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6733,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6817,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6689,
											"end": 6817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6736,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6736,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6815,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6736,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6817,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 6689,
											"end": 6817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6959,
											"end": 6965,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6967,
											"end": 6973,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7026,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7010,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6999,
											"end": 7022,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7111,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6992,
											"end": 7111,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7030,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7030,
											"end": 7109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7030,
											"end": 7109,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7030,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7111,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6992,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7176,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7163,
											"end": 7180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7181,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7208,
											"end": 7226,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7200,
											"end": 7206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7227,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7311,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7194,
											"end": 7311,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7230,
											"end": 7309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7230,
											"end": 7309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7230,
											"end": 7309,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 7230,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7194,
											"end": 7311,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7194,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7415,
											"end": 7422,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7395,
											"end": 7404,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7391,
											"end": 7413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7343,
											"end": 7423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7423,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7343,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7423,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7423,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7325,
											"end": 7423,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7121,
											"end": 7433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7500,
											"end": 7502,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7489,
											"end": 7498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7531,
											"end": 7549,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7523,
											"end": 7529,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7550,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7634,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7517,
											"end": 7634,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7553,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7553,
											"end": 7632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7553,
											"end": 7632,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 7553,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7517,
											"end": 7634,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 7517,
											"end": 7634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7738,
											"end": 7745,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7727,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7714,
											"end": 7736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7666,
											"end": 7746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7666,
											"end": 7746,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 7666,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7746,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7443,
											"end": 7756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7855,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7769,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7804,
											"end": 7811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7837,
											"end": 7842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7833,
											"end": 7849,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7822,
											"end": 7849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7973,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7861,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7960,
											"end": 7965,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7944,
											"end": 7966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 7944,
											"end": 7966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7939,
											"end": 7942,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7973,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7861,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8068,
											"end": 8072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8108,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8095,
											"end": 8104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8091,
											"end": 8109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8083,
											"end": 8109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8172,
											"end": 8181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8119,
											"end": 8186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 8119,
											"end": 8186,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8307,
											"end": 8309,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8295,
											"end": 8304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8286,
											"end": 8293,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8282,
											"end": 8305,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8394,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8275,
											"end": 8394,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 8313,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 8313,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8394,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 8275,
											"end": 8394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8433,
											"end": 8434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8458,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8503,
											"end": 8510,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8494,
											"end": 8500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8492,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8479,
											"end": 8501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8458,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 8458,
											"end": 8511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8458,
											"end": 8511,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 8458,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8448,
											"end": 8511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8404,
											"end": 8521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8199,
											"end": 8528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8602,
											"end": 8608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8659,
											"end": 8661,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8634,
											"end": 8657,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8662,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 8665,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8810,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8855,
											"end": 8862,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8835,
											"end": 8844,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 8810,
											"end": 8863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8863,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 8810,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8800,
											"end": 8863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8756,
											"end": 8873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8912,
											"end": 8914,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8983,
											"end": 8990,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8974,
											"end": 8980,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8963,
											"end": 8972,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 8991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 8938,
											"end": 8991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 8991,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 8938,
											"end": 8991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 9001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 9008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9014,
											"end": 9194,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 9014,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9059,
											"end": 9060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9052,
											"end": 9140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9149,
											"end": 9164,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9173,
											"end": 9188,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9520,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 9200,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9244,
											"end": 9250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9281,
											"end": 9282,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 9275,
											"end": 9279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9283,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9283,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9330,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9367,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9339,
											"end": 9420,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9409,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9393,
											"end": 9410,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9383,
											"end": 9410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9420,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 9339,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9467,
											"end": 9469,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9459,
											"end": 9465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9470,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 9436,
											"end": 9454,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9471,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9430,
											"end": 9514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 9486,
											"end": 9504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9514,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 9430,
											"end": 9514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9251,
											"end": 9520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9520,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9200,
											"end": 9520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9765,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 9526,
											"end": 9765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9666,
											"end": 9700,
											"name": "PUSH",
											"source": 7,
											"value": "546865206C656E677468206F66205461736B7320616E64205265716972656420"
										},
										{
											"begin": 9662,
											"end": 9663,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9650,
											"end": 9664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9643,
											"end": 9701,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9735,
											"end": 9757,
											"name": "PUSH",
											"source": 7,
											"value": "54696D657320646F6E2774206D61746368212121000000000000000000000000"
										},
										{
											"begin": 9730,
											"end": 9732,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9722,
											"end": 9728,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9718,
											"end": 9733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9711,
											"end": 9758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9765,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9526,
											"end": 9765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 10137,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 9771,
											"end": 10137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9998,
											"end": 10000,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9993,
											"end": 9996,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 10001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 9934,
											"end": 10001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 10001,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 9934,
											"end": 10001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 10001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9927,
											"end": 10001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10099,
											"end": 10102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 10010,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10103,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 10010,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10128,
											"end": 10130,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10123,
											"end": 10126,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10119,
											"end": 10131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10112,
											"end": 10131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 10137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 10137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 10137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9771,
											"end": 10137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10562,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 10143,
											"end": 10562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10309,
											"end": 10313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10347,
											"end": 10349,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10336,
											"end": 10345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10332,
											"end": 10350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10324,
											"end": 10350,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10324,
											"end": 10350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10396,
											"end": 10405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10390,
											"end": 10394,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10386,
											"end": 10406,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10383,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10371,
											"end": 10380,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10367,
											"end": 10384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10407,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 10550,
											"end": 10554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 10424,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10424,
											"end": 10555,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 10424,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10416,
											"end": 10555,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10416,
											"end": 10555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10143,
											"end": 10562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10798,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 10568,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 10742,
											"name": "PUSH",
											"source": 7,
											"value": "4174206C656173742068617665206F6E65207461736B20616E64207265716972"
										},
										{
											"begin": 10704,
											"end": 10705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10692,
											"end": 10706,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10685,
											"end": 10743,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10777,
											"end": 10790,
											"name": "PUSH",
											"source": 7,
											"value": "65642074696D6573212121000000000000000000000000000000000000000000"
										},
										{
											"begin": 10772,
											"end": 10774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10764,
											"end": 10770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10760,
											"end": 10775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 10791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 11170,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 10804,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10946,
											"end": 10949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 11031,
											"end": 11033,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 11026,
											"end": 11029,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10967,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 10967,
											"end": 11034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10967,
											"end": 11034,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 10967,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10960,
											"end": 11034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10960,
											"end": 11034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11043,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 11132,
											"end": 11135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11043,
											"end": 11136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 11043,
											"end": 11136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11043,
											"end": 11136,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 11043,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11163,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11156,
											"end": 11159,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11152,
											"end": 11164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11145,
											"end": 11164,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11145,
											"end": 11164,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 11170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 11170,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 11170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10804,
											"end": 11170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11595,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 11176,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11342,
											"end": 11346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11380,
											"end": 11382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11369,
											"end": 11378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11365,
											"end": 11383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11357,
											"end": 11383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11429,
											"end": 11438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11423,
											"end": 11427,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11419,
											"end": 11439,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11416,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11400,
											"end": 11417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11393,
											"end": 11440,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11457,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 11583,
											"end": 11587,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11457,
											"end": 11588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 11457,
											"end": 11588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11457,
											"end": 11588,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 11457,
											"end": 11588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11595,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11595,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11595,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11176,
											"end": 11595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11601,
											"end": 11781,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 11601,
											"end": 11781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11649,
											"end": 11726,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11646,
											"end": 11647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11746,
											"end": 11750,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 11743,
											"end": 11744,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11736,
											"end": 11751,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11770,
											"end": 11774,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11767,
											"end": 11768,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11760,
											"end": 11775,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11787,
											"end": 11962,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 11787,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 11954,
											"name": "PUSH",
											"source": 7,
											"value": "526577617264206D75737420626520706F736974766521212100000000000000"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11915,
											"end": 11921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11911,
											"end": 11925,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11787,
											"end": 11962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11787,
											"end": 11962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 12334,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 11968,
											"end": 12334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12110,
											"end": 12113,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 12195,
											"end": 12197,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 12190,
											"end": 12193,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 12131,
											"end": 12198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 12131,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12124,
											"end": 12198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12124,
											"end": 12198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12296,
											"end": 12299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12300,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12207,
											"end": 12300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12207,
											"end": 12300,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12207,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12325,
											"end": 12327,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12320,
											"end": 12323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12316,
											"end": 12328,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12309,
											"end": 12328,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12309,
											"end": 12328,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 12334,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 12334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 12334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11968,
											"end": 12334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12340,
											"end": 12759,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 12340,
											"end": 12759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12506,
											"end": 12510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12546,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12533,
											"end": 12542,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12529,
											"end": 12547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12521,
											"end": 12547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12593,
											"end": 12602,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12587,
											"end": 12591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12583,
											"end": 12603,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12580,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12577,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12564,
											"end": 12581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12557,
											"end": 12604,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12621,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 12747,
											"end": 12751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12621,
											"end": 12752,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12621,
											"end": 12752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12621,
											"end": 12752,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 12621,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12340,
											"end": 12759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12340,
											"end": 12759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12340,
											"end": 12759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12340,
											"end": 12759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12990,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12765,
											"end": 12990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12905,
											"end": 12939,
											"name": "PUSH",
											"source": 7,
											"value": "5265717569726564205375626D697373696F6E206D75737420626520706F7374"
										},
										{
											"begin": 12901,
											"end": 12902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12893,
											"end": 12899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12889,
											"end": 12903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12974,
											"end": 12982,
											"name": "PUSH",
											"source": 7,
											"value": "6976652121210000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12969,
											"end": 12971,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12961,
											"end": 12967,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12957,
											"end": 12972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12950,
											"end": 12983,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12765,
											"end": 12990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13362,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 12996,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13138,
											"end": 13141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13159,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13223,
											"end": 13225,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13218,
											"end": 13221,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13159,
											"end": 13226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 13159,
											"end": 13226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13159,
											"end": 13226,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 13159,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13152,
											"end": 13226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13324,
											"end": 13327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 13235,
											"end": 13328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13235,
											"end": 13328,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13235,
											"end": 13328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13348,
											"end": 13351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13344,
											"end": 13356,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13337,
											"end": 13356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13362,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13787,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 13368,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13534,
											"end": 13538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13574,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13561,
											"end": 13570,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13557,
											"end": 13575,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13549,
											"end": 13575,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13549,
											"end": 13575,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13615,
											"end": 13619,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13611,
											"end": 13631,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13608,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13596,
											"end": 13605,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13592,
											"end": 13609,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 13775,
											"end": 13779,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 13649,
											"end": 13780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13649,
											"end": 13780,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 13649,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13641,
											"end": 13780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13641,
											"end": 13780,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13787,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13368,
											"end": 13787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13793,
											"end": 13973,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 13793,
											"end": 13973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13841,
											"end": 13918,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13838,
											"end": 13839,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13831,
											"end": 13919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13938,
											"end": 13942,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 13935,
											"end": 13936,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13928,
											"end": 13943,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13962,
											"end": 13966,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13959,
											"end": 13960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13952,
											"end": 13967,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14019,
											"end": 14026,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 14060,
											"end": 14061,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14042,
											"end": 14062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 14042,
											"end": 14062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14037,
											"end": 14062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 14094,
											"end": 14095,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14076,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 14076,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14071,
											"end": 14096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14128,
											"end": 14129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14124,
											"end": 14133,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 14171,
											"end": 14182,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14153,
											"end": 14183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14153,
											"end": 14183,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 14153,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14142,
											"end": 14183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14142,
											"end": 14183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14323,
											"end": 14330,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14319,
											"end": 14334,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14317,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14313,
											"end": 14335,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14293,
											"end": 14294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14286,
											"end": 14295,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14266,
											"end": 14349,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14382,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 14243,
											"end": 14382,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 14362,
											"end": 14380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 14362,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14243,
											"end": 14382,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 14243,
											"end": 14382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14027,
											"end": 14389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13979,
											"end": 14389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14435,
											"end": 14438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14454,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 14472,
											"end": 14473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14454,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14454,
											"end": 14474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14454,
											"end": 14474,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 14454,
											"end": 14474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14449,
											"end": 14474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14449,
											"end": 14474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14488,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 14506,
											"end": 14507,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14488,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14488,
											"end": 14508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14488,
											"end": 14508,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 14488,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14483,
											"end": 14508,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14483,
											"end": 14508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14531,
											"end": 14532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14528,
											"end": 14529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14524,
											"end": 14533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14517,
											"end": 14533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14517,
											"end": 14533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14552,
											"end": 14555,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14549,
											"end": 14550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14546,
											"end": 14556,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14579,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 14543,
											"end": 14579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 14559,
											"end": 14577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 14559,
											"end": 14577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14543,
											"end": 14579,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 14543,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14395,
											"end": 14586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14713,
											"end": 14717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14751,
											"end": 14753,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14736,
											"end": 14754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14728,
											"end": 14754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14764,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 14832,
											"end": 14833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14821,
											"end": 14830,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14817,
											"end": 14834,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14808,
											"end": 14814,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14764,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 14764,
											"end": 14835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14764,
											"end": 14835,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 14764,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14845,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 14913,
											"end": 14915,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14902,
											"end": 14911,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14898,
											"end": 14916,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14889,
											"end": 14895,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14845,
											"end": 14917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 14845,
											"end": 14917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14845,
											"end": 14917,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 14845,
											"end": 14917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14592,
											"end": 14924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14930,
											"end": 15163,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 14930,
											"end": 15163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14969,
											"end": 14972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 15010,
											"end": 15015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14992,
											"end": 15016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 14992,
											"end": 15016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14992,
											"end": 15016,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 14992,
											"end": 15016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14983,
											"end": 15016,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14983,
											"end": 15016,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15038,
											"end": 15104,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15031,
											"end": 15036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15028,
											"end": 15105,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15025,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 15025,
											"end": 15128,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 15108,
											"end": 15126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 15108,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15025,
											"end": 15128,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 15025,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15155,
											"end": 15156,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15148,
											"end": 15153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15144,
											"end": 15157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15137,
											"end": 15157,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14930,
											"end": 15163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14930,
											"end": 15163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14930,
											"end": 15163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14930,
											"end": 15163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15169,
											"end": 15390,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 15169,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15309,
											"end": 15343,
											"name": "PUSH",
											"source": 7,
											"value": "43757272656E74205461736B20686173206265656E20636F6D706C6574656421"
										},
										{
											"begin": 15305,
											"end": 15306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15297,
											"end": 15303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15293,
											"end": 15307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15286,
											"end": 15344,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15378,
											"end": 15382,
											"name": "PUSH",
											"source": 7,
											"value": "2121000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15365,
											"end": 15371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15361,
											"end": 15376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15354,
											"end": 15383,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15169,
											"end": 15390,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15169,
											"end": 15390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15762,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 15396,
											"end": 15762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15538,
											"end": 15541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15559,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 15623,
											"end": 15625,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 15618,
											"end": 15621,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15559,
											"end": 15626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 15559,
											"end": 15626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15559,
											"end": 15626,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 15559,
											"end": 15626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15552,
											"end": 15626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15552,
											"end": 15626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15635,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15724,
											"end": 15727,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15635,
											"end": 15728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 15635,
											"end": 15728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15635,
											"end": 15728,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 15635,
											"end": 15728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15753,
											"end": 15755,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15748,
											"end": 15751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15744,
											"end": 15756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15737,
											"end": 15756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15762,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15396,
											"end": 15762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 16187,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 15768,
											"end": 16187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15934,
											"end": 15938,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15972,
											"end": 15974,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15961,
											"end": 15970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15957,
											"end": 15975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15949,
											"end": 15975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15949,
											"end": 15975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16021,
											"end": 16030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16015,
											"end": 16019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16011,
											"end": 16031,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16007,
											"end": 16008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15996,
											"end": 16005,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15992,
											"end": 16009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15985,
											"end": 16032,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 16175,
											"end": 16179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 16049,
											"end": 16180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16049,
											"end": 16180,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 16049,
											"end": 16180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16041,
											"end": 16180,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16041,
											"end": 16180,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 16187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 16187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 16187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15768,
											"end": 16187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16193,
											"end": 16371,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 16193,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16333,
											"end": 16363,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207375626D697373696F6E20697320726571756972656421212100000000"
										},
										{
											"begin": 16329,
											"end": 16330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16321,
											"end": 16327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16317,
											"end": 16331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16310,
											"end": 16364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16193,
											"end": 16371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16193,
											"end": 16371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16743,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 16377,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16519,
											"end": 16522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16540,
											"end": 16607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 16604,
											"end": 16606,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 16599,
											"end": 16602,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16607,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 16540,
											"end": 16607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16540,
											"end": 16607,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 16540,
											"end": 16607,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16533,
											"end": 16607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16533,
											"end": 16607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16616,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 16705,
											"end": 16708,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16616,
											"end": 16709,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 16616,
											"end": 16709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16616,
											"end": 16709,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 16616,
											"end": 16709,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16734,
											"end": 16736,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16729,
											"end": 16732,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16725,
											"end": 16737,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16718,
											"end": 16737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16718,
											"end": 16737,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16377,
											"end": 16743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 17168,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 16749,
											"end": 17168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16915,
											"end": 16919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16953,
											"end": 16955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16938,
											"end": 16956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 16956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16930,
											"end": 16956,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17002,
											"end": 17011,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16996,
											"end": 17000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16992,
											"end": 17012,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16988,
											"end": 16989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16977,
											"end": 16986,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16973,
											"end": 16990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16966,
											"end": 17013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 17156,
											"end": 17160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 17030,
											"end": 17161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17030,
											"end": 17161,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 17030,
											"end": 17161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17022,
											"end": 17161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17022,
											"end": 17161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 17168,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 17168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 17168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16749,
											"end": 17168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17401,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 17174,
											"end": 17401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17314,
											"end": 17348,
											"name": "PUSH",
											"source": 7,
											"value": "5461736B20506F7374657220616E64205375626D697474657220697320746865"
										},
										{
											"begin": 17310,
											"end": 17311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17302,
											"end": 17308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17298,
											"end": 17312,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17291,
											"end": 17349,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17383,
											"end": 17393,
											"name": "PUSH",
											"source": 7,
											"value": "2073616D65212121000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17378,
											"end": 17380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17370,
											"end": 17376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17366,
											"end": 17381,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17359,
											"end": 17394,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17174,
											"end": 17401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17773,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 17407,
											"end": 17773,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17549,
											"end": 17552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17570,
											"end": 17637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 17629,
											"end": 17632,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17570,
											"end": 17637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 17570,
											"end": 17637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17570,
											"end": 17637,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 17570,
											"end": 17637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17563,
											"end": 17637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17563,
											"end": 17637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17646,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 17735,
											"end": 17738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17646,
											"end": 17739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 17646,
											"end": 17739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17646,
											"end": 17739,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 17646,
											"end": 17739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 17766,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 17759,
											"end": 17762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17755,
											"end": 17767,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17748,
											"end": 17767,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17748,
											"end": 17767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17407,
											"end": 17773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18198,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 17779,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17945,
											"end": 17949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 17985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17972,
											"end": 17981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17968,
											"end": 17986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17960,
											"end": 17986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17960,
											"end": 17986,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18041,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18026,
											"end": 18030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18022,
											"end": 18042,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18018,
											"end": 18019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18007,
											"end": 18016,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18003,
											"end": 18020,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17996,
											"end": 18043,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18060,
											"end": 18191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18186,
											"end": 18190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18060,
											"end": 18191,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 18060,
											"end": 18191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18060,
											"end": 18191,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 18060,
											"end": 18191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18052,
											"end": 18191,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18052,
											"end": 18191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17779,
											"end": 18198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18204,
											"end": 18444,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 18204,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18378,
											"name": "PUSH",
											"source": 7,
											"value": "52657761726420686173206265656E2072656C656173656420666F7220746865"
										},
										{
											"begin": 18340,
											"end": 18341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18332,
											"end": 18338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18328,
											"end": 18342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18321,
											"end": 18379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18413,
											"end": 18436,
											"name": "PUSH",
											"source": 7,
											"value": "2063757272656E74207375626D69747465722121210000000000000000000000"
										},
										{
											"begin": 18408,
											"end": 18410,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18400,
											"end": 18406,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18396,
											"end": 18411,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18389,
											"end": 18437,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18204,
											"end": 18444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18204,
											"end": 18444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18816,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 18450,
											"end": 18816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18592,
											"end": 18595,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18613,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 18677,
											"end": 18679,
											"name": "PUSH",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 18672,
											"end": 18675,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18613,
											"end": 18680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 18613,
											"end": 18680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18613,
											"end": 18680,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 18613,
											"end": 18680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18606,
											"end": 18680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18606,
											"end": 18680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 18778,
											"end": 18781,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 18689,
											"end": 18782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18689,
											"end": 18782,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 18689,
											"end": 18782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18807,
											"end": 18809,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18802,
											"end": 18805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18798,
											"end": 18810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18791,
											"end": 18810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18791,
											"end": 18810,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18450,
											"end": 18816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18822,
											"end": 19241,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 18822,
											"end": 19241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18988,
											"end": 18992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19026,
											"end": 19028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19015,
											"end": 19024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19011,
											"end": 19029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19003,
											"end": 19029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19003,
											"end": 19029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19075,
											"end": 19084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19069,
											"end": 19073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19065,
											"end": 19085,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19061,
											"end": 19062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19050,
											"end": 19059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19046,
											"end": 19063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19039,
											"end": 19086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19103,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 19229,
											"end": 19233,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19103,
											"end": 19234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 19103,
											"end": 19234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19103,
											"end": 19234,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 19103,
											"end": 19234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19095,
											"end": 19234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19095,
											"end": 19234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18822,
											"end": 19241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18822,
											"end": 19241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18822,
											"end": 19241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18822,
											"end": 19241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19287,
											"end": 19291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19307,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 19325,
											"end": 19326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 19307,
											"end": 19327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19307,
											"end": 19327,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 19307,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19302,
											"end": 19327,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19302,
											"end": 19327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19341,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 19359,
											"end": 19360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19341,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 19341,
											"end": 19361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19341,
											"end": 19361,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 19341,
											"end": 19361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19336,
											"end": 19361,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19336,
											"end": 19361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19385,
											"end": 19386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19382,
											"end": 19383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19378,
											"end": 19387,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19387,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19370,
											"end": 19387,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19409,
											"end": 19410,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19403,
											"end": 19407,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19400,
											"end": 19411,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19397,
											"end": 19434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19397,
											"end": 19434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 19397,
											"end": 19434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 19414,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 19414,
											"end": 19432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19414,
											"end": 19432,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 19414,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19397,
											"end": 19434,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 19397,
											"end": 19434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19247,
											"end": 19441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19596,
											"end": 19600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19634,
											"end": 19636,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 19623,
											"end": 19632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19619,
											"end": 19637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19611,
											"end": 19637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19611,
											"end": 19637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19647,
											"end": 19718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 19715,
											"end": 19716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19704,
											"end": 19713,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19700,
											"end": 19717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19691,
											"end": 19697,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 19647,
											"end": 19718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 19647,
											"end": 19718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19647,
											"end": 19718,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 19647,
											"end": 19718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19728,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 19796,
											"end": 19798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19785,
											"end": 19794,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19781,
											"end": 19799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19772,
											"end": 19778,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19728,
											"end": 19800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 19728,
											"end": 19800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19728,
											"end": 19800,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 19728,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19810,
											"end": 19882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 19878,
											"end": 19880,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19867,
											"end": 19876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19863,
											"end": 19881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19854,
											"end": 19860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19810,
											"end": 19882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 19810,
											"end": 19882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19810,
											"end": 19882,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 19810,
											"end": 19882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19447,
											"end": 19889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19988,
											"end": 19992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20026,
											"end": 20028,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20015,
											"end": 20024,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20011,
											"end": 20029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20003,
											"end": 20029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20003,
											"end": 20029,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20039,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 20107,
											"end": 20108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20096,
											"end": 20105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20092,
											"end": 20109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20083,
											"end": 20089,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20039,
											"end": 20110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 20039,
											"end": 20110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20039,
											"end": 20110,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 20039,
											"end": 20110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 20117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"CrowdSourcing/Crowdsourcing.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TasksList(uint256)": "0b7879aa",
							"addTasks(uint256[],uint256[])": "257baa3a",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getTask(uint256)": "1d65e77e",
							"name()": "06fdde03",
							"nextTaskId()": "fdc3d8d7",
							"redeemReward(uint256)": "51a71b17",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"req_times_\",\"type\":\"uint256\"}],\"name\":\"TaskAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewards\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"req_times_\",\"type\":\"uint256\"}],\"name\":\"TaskRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"completer\",\"type\":\"address\"}],\"name\":\"TasksOneTimeCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"TasksList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"EachReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ReqTimes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tasksRewards\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"reqTimes\",\"type\":\"uint256[]\"}],\"name\":\"addTasks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"getTask\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poster_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reqTimes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTaskId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"taskId\",\"type\":\"uint256\"}],\"name\":\"redeemReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addTasks(uint256[],uint256[])\":{\"notice\":\"Add Tasks/Mission and mint the token to those questions\"},\"getTask(uint256)\":{\"notice\":\"Get the task details\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrowdSourcing/Crowdsourcing.sol\":\"CrowdsourcingToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"CrowdSourcing/Crowdsourcing.sol\":{\"keccak256\":\"0x1fb3149cc60350595db0034ef226f83f70b1ac62c7d553245febf8774c66b1aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64e3d38e73dbeb0da408540a44959f286f2de366639df70ac9fcee03ecb06e08\",\"dweb:/ipfs/QmV3bcvMoNgzcJt5Ju7mJEU7yVQryi292Tktn2GAk5JXMR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 977,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "nextTaskId",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 983,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "TaskRecordsList",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 988,
								"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
								"label": "TasksList",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Task)948_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_struct(Task)948_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CrowdsourcingToken.Task)",
								"numberOfBytes": "32",
								"value": "t_struct(Task)948_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Task)948_storage": {
								"encoding": "inplace",
								"label": "struct CrowdsourcingToken.Task",
								"members": [
									{
										"astId": 941,
										"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
										"label": "poster",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 943,
										"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
										"label": "EachReward",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 945,
										"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
										"label": "ReqTimes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 947,
										"contract": "CrowdSourcing/Crowdsourcing.sol:CrowdsourcingToken",
										"label": "isCompleted",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addTasks(uint256[],uint256[])": {
								"notice": "Add Tasks/Mission and mint the token to those questions"
							},
							"getTask(uint256)": {
								"notice": "Get the task details"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10619:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10637:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10656:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10633:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10663:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10715:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10724:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10813:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10820:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10829:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10848:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10804:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9788:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10790:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"CrowdSourcing/Crowdsourcing.sol": {
				"ast": {
					"absolutePath": "CrowdSourcing/Crowdsourcing.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"CrowdsourcingToken": [
							1229
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 800,
							"src": "60:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1230,
							"sourceUnit": 148,
							"src": "117:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"204:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "204:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "204:5:6"
								}
							],
							"canonicalName": "CrowdsourcingToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1229,
							"linearizedBaseContracts": [
								1229,
								799,
								189,
								903,
								877,
								933
							],
							"name": "CrowdsourcingToken",
							"nameLocation": "182:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "CrowdsourcingToken.Task",
									"id": 948,
									"members": [
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "poster",
											"nameLocation": "278:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "270:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 940,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "270:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "EachReward",
											"nameLocation": "303:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "295:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 942,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "295:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "ReqTimes",
											"nameLocation": "332:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "324:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 944,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "324:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 947,
											"mutability": "mutable",
											"name": "isCompleted",
											"nameLocation": "356:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 948,
											"src": "351:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 946,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "351:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Task",
									"nameLocation": "254:4:6",
									"nodeType": "StructDefinition",
									"scope": 1229,
									"src": "247:128:6",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ffef41c3386c78926fe432f9a2d408f37209532660e385656444e3da578f17d6",
									"id": 958,
									"name": "TaskAdded",
									"nameLocation": "389:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "poster",
												"nameLocation": "425:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "409:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "458:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "442:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "483:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "475:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": false,
												"mutability": "mutable",
												"name": "req_times_",
												"nameLocation": "509:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "501:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:128:6"
									},
									"src": "383:144:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2152f110769bc02886851abbeb48c2290a9857112926925296d0fa0cea7b677c",
									"id": 968,
									"name": "TaskRemoved",
									"nameLocation": "539:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "poster",
												"nameLocation": "577:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "561:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "610:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "594:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "635:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "627:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "req_times_",
												"nameLocation": "661:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "653:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "550:128:6"
									},
									"src": "533:146:6"
								},
								{
									"anonymous": false,
									"eventSelector": "107f668e128e198cf1077b19274c8dd3008737e858e3445d1176cd1d99951beb",
									"id": 974,
									"name": "TasksOneTimeCompleted",
									"nameLocation": "691:21:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "739:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "723:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": true,
												"mutability": "mutable",
												"name": "completer",
												"nameLocation": "773:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "757:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:77:6"
									},
									"src": "685:105:6"
								},
								{
									"constant": false,
									"functionSelector": "fdc3d8d7",
									"id": 977,
									"mutability": "mutable",
									"name": "nextTaskId",
									"nameLocation": "839:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "824:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 975,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 976,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "852:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 983,
									"mutability": "mutable",
									"name": "TaskRecordsList",
									"nameLocation": "905:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "860:60:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 982,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 978,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "868:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "860:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 981,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 979,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "888:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "879:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 980,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "898:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "0b7879aa",
									"id": 988,
									"mutability": "mutable",
									"name": "TasksList",
									"nameLocation": "961:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1229,
									"src": "928:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$948_storage_$",
										"typeString": "mapping(uint256 => struct CrowdsourcingToken.Task)"
									},
									"typeName": {
										"id": 987,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 984,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "937:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "928:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$948_storage_$",
											"typeString": "mapping(uint256 => struct CrowdsourcingToken.Task)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 986,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 985,
												"name": "Task",
												"nameLocations": [
													"948:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 948,
												"src": "948:4:6"
											},
											"referencedDeclaration": 948,
											"src": "948:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
												"typeString": "struct CrowdsourcingToken.Task"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "1027:2:6",
										"statements": []
									},
									"id": 996,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "43726f7764736f757263696e67546f6b656e",
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "999:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_bbabbee902369b451abba10c8ca19f33a32bb0575eb869db0a8e70b1f8dce84d",
														"typeString": "literal_string \"CrowdsourcingToken\""
													},
													"value": "CrowdsourcingToken"
												},
												{
													"hexValue": "435354",
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1021:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0626086d51c299e905c42b7a28a0add92109e49b12cb2bd2531769201453ab94",
														"typeString": "literal_string \"CST\""
													},
													"value": "CST"
												}
											],
											"id": 993,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 990,
												"name": "ERC20",
												"nameLocations": [
													"993:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "993:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "993:34:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "990:2:6"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1027:0:6"
									},
									"scope": 1229,
									"src": "979:50:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "1229:1083:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1007,
																	"name": "tasksRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "1262:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1275:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1262:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1009,
																	"name": "reqTimes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "1285:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1294:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1285:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1262:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206c656e677468206f66205461736b7320616e6420526571697265642054696d657320646f6e2774206d61746368212121",
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:54:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f",
																"typeString": "literal_string \"The length of Tasks and Reqired Times don't match!!!\""
															},
															"value": "The length of Tasks and Reqired Times don't match!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a95f7c59e70fec0c6bbd4791b563a94f8244287b03d9bcf984650af987eda20f",
																"typeString": "literal_string \"The length of Tasks and Reqired Times don't match!!!\""
															}
														],
														"id": 1006,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:140:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1014,
												"nodeType": "ExpressionStatement",
												"src": "1240:140:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1016,
																	"name": "tasksRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "1413:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1426:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1413:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1435:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1413:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4174206c656173742068617665206f6e65207461736b20616e6420726571697265642074696d6573212121",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1451:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368",
																"typeString": "literal_string \"At least have one task and reqired times!!!\""
															},
															"value": "At least have one task and reqired times!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_944d7ca954939363de1701c0585a84f6248a645a5f0ffc993034d69998477368",
																"typeString": "literal_string \"At least have one task and reqired times!!!\""
															}
														],
														"id": 1015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1391:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1391:116:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "1391:116:6"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "totalReward",
														"nameLocation": "1528:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "1520:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1520:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1026,
												"initialValue": {
													"hexValue": "30",
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1542:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1520:23:6"
											},
											{
												"body": {
													"id": 1097,
													"nodeType": "Block",
													"src": "1600:664:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1039,
																				"name": "tasksRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "1641:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1041,
																			"indexExpression": {
																				"id": 1040,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "1654:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1641:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1042,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1658:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1641:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "526577617264206d75737420626520706f7369747665212121",
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1678:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1",
																			"typeString": "literal_string \"Reward must be positve!!!\""
																		},
																		"value": "Reward must be positve!!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_9a11050f4997ba0c4635dbe966b01c8cc36f621d165dc3b405cef9a3f4949ec1",
																			"typeString": "literal_string \"Reward must be positve!!!\""
																		}
																	],
																	"id": 1038,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1615:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1615:105:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1046,
															"nodeType": "ExpressionStatement",
															"src": "1615:105:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1048,
																				"name": "reqTimes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "1761:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1050,
																			"indexExpression": {
																				"id": 1049,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "1770:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1761:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1775:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1761:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5265717569726564205375626d697373696f6e206d75737420626520706f7374697665212121",
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1795:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24",
																			"typeString": "literal_string \"Required Submission must be postive!!!\""
																		},
																		"value": "Required Submission must be postive!!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_4a697fbaf108c11e8a05762fd6734d7dd2f3b379dd26a7ab0eecf8117331ce24",
																			"typeString": "literal_string \"Required Submission must be postive!!!\""
																		}
																	],
																	"id": 1047,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1735:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1735:115:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1055,
															"nodeType": "ExpressionStatement",
															"src": "1735:115:6"
														},
														{
															"expression": {
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1056,
																	"name": "totalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "1865:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1057,
																			"name": "tasksRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "1880:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1059,
																		"indexExpression": {
																			"id": 1058,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "1893:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1880:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1060,
																			"name": "reqTimes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "1898:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1062,
																		"indexExpression": {
																			"id": 1061,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "1907:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1898:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1880:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1865:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1065,
															"nodeType": "ExpressionStatement",
															"src": "1865:44:6"
														},
														{
															"expression": {
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1066,
																		"name": "TasksList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 988,
																		"src": "1924:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$948_storage_$",
																			"typeString": "mapping(uint256 => struct CrowdsourcingToken.Task storage ref)"
																		}
																	},
																	"id": 1068,
																	"indexExpression": {
																		"id": 1067,
																		"name": "nextTaskId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "1934:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1924:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Task_$948_storage",
																		"typeString": "struct CrowdsourcingToken.Task storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1070,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1980:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1984:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1980:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1072,
																				"name": "tasksRewards",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "2021:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1074,
																			"indexExpression": {
																				"id": 1073,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "2034:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2021:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 1075,
																				"name": "reqTimes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1003,
																				"src": "2065:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1077,
																			"indexExpression": {
																				"id": 1076,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1028,
																				"src": "2074:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2065:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "66616c7365",
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2108:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1069,
																		"name": "Task",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 948,
																		"src": "1948:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Task_$948_storage_ptr_$",
																			"typeString": "type(struct CrowdsourcingToken.Task storage pointer)"
																		}
																	},
																	"id": 1079,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [
																		"1972:6:6",
																		"2009:10:6",
																		"2055:8:6",
																		"2095:11:6"
																	],
																	"names": [
																		"poster",
																		"EachReward",
																		"ReqTimes",
																		"isCompleted"
																	],
																	"nodeType": "FunctionCall",
																	"src": "1948:181:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Task_$948_memory_ptr",
																		"typeString": "struct CrowdsourcingToken.Task memory"
																	}
																},
																"src": "1924:205:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage",
																	"typeString": "struct CrowdsourcingToken.Task storage ref"
																}
															},
															"id": 1081,
															"nodeType": "ExpressionStatement",
															"src": "1924:205:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1083,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2161:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2165:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2161:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1085,
																		"name": "nextTaskId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "2172:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1086,
																			"name": "tasksRewards",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1000,
																			"src": "2183:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1088,
																		"indexExpression": {
																			"id": 1087,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "2196:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2183:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1089,
																			"name": "reqTimes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1003,
																			"src": "2199:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1091,
																		"indexExpression": {
																			"id": 1090,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1028,
																			"src": "2208:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2199:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1082,
																	"name": "TaskAdded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "2151:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2151:74:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "EmitStatement",
															"src": "2146:79:6"
														},
														{
															"expression": {
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2240:12:6",
																"subExpression": {
																	"id": 1094,
																	"name": "nextTaskId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "2240:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1096,
															"nodeType": "ExpressionStatement",
															"src": "2240:12:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "1571:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1032,
															"name": "tasksRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "1575:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 1033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1588:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1575:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1571:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"initializationExpression": {
													"assignments": [
														1028
													],
													"declarations": [
														{
															"constant": false,
															"id": 1028,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1564:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1098,
															"src": "1559:6:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1027,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1559:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1030,
													"initialValue": {
														"hexValue": "30",
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1568:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1559:10:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1596:3:6",
														"subExpression": {
															"id": 1035,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1596:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1037,
													"nodeType": "ExpressionStatement",
													"src": "1596:3:6"
												},
												"nodeType": "ForStatement",
												"src": "1554:710:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2280:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2284:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2280:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "totalReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "2292:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2274:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2274:30:6"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1037:72:6",
										"text": "Add Tasks/Mission and mint the token to those questions"
									},
									"functionSelector": "257baa3a",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addTasks",
									"nameLocation": "1124:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "tasksRewards",
												"nameLocation": "1162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1143:31:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 998,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1143:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 999,
													"nodeType": "ArrayTypeName",
													"src": "1143:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "reqTimes",
												"nameLocation": "1204:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "1185:27:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1001,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1185:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1002,
													"nodeType": "ArrayTypeName",
													"src": "1185:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:87:6"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1229:0:6"
									},
									"scope": 1229,
									"src": "1115:1197:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "2383:876:6",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "cur_task",
														"nameLocation": "2407:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 1195,
														"src": "2394:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
															"typeString": "struct CrowdsourcingToken.Task"
														},
														"typeName": {
															"id": 1112,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1111,
																"name": "Task",
																"nameLocations": [
																	"2394:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 948,
																"src": "2394:4:6"
															},
															"referencedDeclaration": 948,
															"src": "2394:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																"typeString": "struct CrowdsourcingToken.Task"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"baseExpression": {
														"id": 1114,
														"name": "TasksList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2418:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$948_storage_$",
															"typeString": "mapping(uint256 => struct CrowdsourcingToken.Task storage ref)"
														}
													},
													"id": 1116,
													"indexExpression": {
														"id": 1115,
														"name": "taskId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2428:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2418:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Task_$948_storage",
														"typeString": "struct CrowdsourcingToken.Task storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2394:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2468:21:6",
															"subExpression": {
																"expression": {
																	"id": 1119,
																	"name": "cur_task",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "2469:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																		"typeString": "struct CrowdsourcingToken.Task storage pointer"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2478:11:6",
																"memberName": "isCompleted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 947,
																"src": "2469:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43757272656e74205461736b20686173206265656e20636f6d706c65746564212121",
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2504:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b",
																"typeString": "literal_string \"Current Task has been completed!!!\""
															},
															"value": "Current Task has been completed!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa248c3db94f66731d7d10cc94fd2eedfea0eca7436482c8555e6d91d8c2187b",
																"typeString": "literal_string \"Current Task has been completed!!!\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2446:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "ExpressionStatement",
												"src": "2446:105:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1126,
																	"name": "cur_task",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "2584:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																		"typeString": "struct CrowdsourcingToken.Task storage pointer"
																	}
																},
																"id": 1127,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2593:8:6",
																"memberName": "ReqTimes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 945,
																"src": "2584:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2604:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2584:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207375626d697373696f6e206973207265717569726564212121",
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2620:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d",
																"typeString": "literal_string \"No submission is required!!!\""
															},
															"value": "No submission is required!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e7c65833a87cd6fdffb4a698570efb29aee08a5fbc335851fcb4abb522dfa13d",
																"typeString": "literal_string \"No submission is required!!!\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "2562:99:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1134,
																	"name": "cur_task",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1113,
																	"src": "2694:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																		"typeString": "struct CrowdsourcingToken.Task storage pointer"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2703:6:6",
																"memberName": "poster",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 941,
																"src": "2694:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 1136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2713:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2717:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2713:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2694:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5461736b20506f7374657220616e64205375626d6974746572206973207468652073616d65212121",
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2738:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142",
																"typeString": "literal_string \"Task Poster and Submitter is the same!!!\""
															},
															"value": "Task Poster and Submitter is the same!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f58f39336063c0b524657df631fd74d0103df43287710856550bc36bf218142",
																"typeString": "literal_string \"Task Poster and Submitter is the same!!!\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2672:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2672:119:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "ExpressionStatement",
												"src": "2672:119:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2824:36:6",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1143,
																		"name": "TaskRecordsList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "2825:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 1145,
																	"indexExpression": {
																		"id": 1144,
																		"name": "taskId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "2841:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2825:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1148,
																"indexExpression": {
																	"expression": {
																		"id": 1146,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2849:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2853:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2849:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2825:35:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420686173206265656e2072656c656173656420666f72207468652063757272656e74207375626d6974746572212121",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2875:55:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001",
																"typeString": "literal_string \"Reward has been released for the current submitter!!!\""
															},
															"value": "Reward has been released for the current submitter!!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0e20ee2110733a7cc5efec59f63f03fcb1e9acf9e10a2e00549b2e2c4ee4001",
																"typeString": "literal_string \"Reward has been released for the current submitter!!!\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2802:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:139:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "2802:139:6"
											},
											{
												"expression": {
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1153,
															"name": "cur_task",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2954:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																"typeString": "struct CrowdsourcingToken.Task storage pointer"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2963:8:6",
														"memberName": "ReqTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "2954:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2975:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2954:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "2954:22:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1159,
															"name": "cur_task",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "2991:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																"typeString": "struct CrowdsourcingToken.Task storage pointer"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3000:8:6",
														"memberName": "ReqTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "2991:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3012:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2991:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1170,
												"nodeType": "IfStatement",
												"src": "2987:81:6",
												"trueBody": {
													"id": 1169,
													"nodeType": "Block",
													"src": "3014:54:6",
													"statements": [
														{
															"expression": {
																"id": 1167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1163,
																		"name": "cur_task",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "3029:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																			"typeString": "struct CrowdsourcingToken.Task storage pointer"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3038:11:6",
																	"memberName": "isCompleted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 947,
																	"src": "3029:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3052:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3029:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1168,
															"nodeType": "ExpressionStatement",
															"src": "3029:27:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1172,
																"name": "cur_task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "3090:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3099:6:6",
															"memberName": "poster",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "3090:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1174,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3107:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3111:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3107:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1176,
																"name": "cur_task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "3119:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:10:6",
															"memberName": "EachReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "3119:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1171,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3080:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3080:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "3080:59:6"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1180,
																"name": "TaskRecordsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "3150:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1184,
															"indexExpression": {
																"id": 1181,
																"name": "taskId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3166:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3150:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1185,
														"indexExpression": {
															"expression": {
																"id": 1182,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3174:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3178:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3174:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3150:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3188:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3150:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3150:42:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1190,
															"name": "taskId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3232:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1191,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3240:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3244:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3240:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1189,
														"name": "TasksOneTimeCompleted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "3210:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3210:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "EmitStatement",
												"src": "3205:46:6"
											}
										]
									},
									"functionSelector": "51a71b17",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemReward",
									"nameLocation": "2329:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "2360:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2352:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:32:6"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2383:0:6"
									},
									"scope": 1229,
									"src": "2320:939:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3448:188:6",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "task",
														"nameLocation": "3472:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3459:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
															"typeString": "struct CrowdsourcingToken.Task"
														},
														"typeName": {
															"id": 1211,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1210,
																"name": "Task",
																"nameLocations": [
																	"3459:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 948,
																"src": "3459:4:6"
															},
															"referencedDeclaration": 948,
															"src": "3459:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																"typeString": "struct CrowdsourcingToken.Task"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1216,
												"initialValue": {
													"baseExpression": {
														"id": 1213,
														"name": "TasksList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3479:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Task_$948_storage_$",
															"typeString": "mapping(uint256 => struct CrowdsourcingToken.Task storage ref)"
														}
													},
													"id": 1215,
													"indexExpression": {
														"id": 1214,
														"name": "taskId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "3489:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3479:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Task_$948_storage",
														"typeString": "struct CrowdsourcingToken.Task storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3459:37:6"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1217,
																"name": "task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "3515:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3520:10:6",
															"memberName": "EachReward",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 943,
															"src": "3515:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1219,
																"name": "task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "3549:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3554:6:6",
															"memberName": "poster",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "3549:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1221,
																"name": "task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "3579:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3584:8:6",
															"memberName": "ReqTimes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 945,
															"src": "3579:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1223,
																"name": "task",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "3611:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Task_$948_storage_ptr",
																	"typeString": "struct CrowdsourcingToken.Task storage pointer"
																}
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3616:11:6",
															"memberName": "isCompleted",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 947,
															"src": "3611:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1225,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3514:114:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,address,uint256,bool)"
													}
												},
												"functionReturnParameters": 1209,
												"id": 1226,
												"nodeType": "Return",
												"src": "3507:121:6"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "3267:37:6",
										"text": "Get the task details"
									},
									"functionSelector": "1d65e77e",
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTask",
									"nameLocation": "3319:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "taskId",
												"nameLocation": "3345:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3337:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3337:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3326:32:6"
									},
									"returnParameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "reward_",
												"nameLocation": "3387:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3379:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3379:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "poster_",
												"nameLocation": "3404:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3396:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "reqTimes",
												"nameLocation": "3421:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3413:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3413:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "isCompleted",
												"nameLocation": "3436:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3431:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3431:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:70:6"
									},
									"scope": 1229,
									"src": "3310:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1230,
							"src": "173:3972:6",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820,
								958,
								968,
								974
							]
						}
					],
					"src": "33:4112:6"
				},
				"id": 6
			}
		}
	}
}